
; PICBASIC PRO(TM) Compiler 3.0.7.4, (c) 1998, 2013 microEngineering Labs, Inc. All Rights Reserved. 
MPASMX_USED			EQU	1

#define	PBP_PATH	C:\PROGRAM FILES (X86)\PBP3\




        NOLIST
    ifdef PM_USED
        LIST
        "Error: PM does not support this device.  Use MPASM."
        NOLIST
    else
        LIST
        LIST p = 18F46K80, r = dec, w = -311, f = inhx32
        INCLUDE "P18F46K80.INC"	; MPASM  Header
        NOLIST
    endif
        LIST
GO_DONE        EQU  H'0001'     ;named GO_NOT_DONE in the MPASM header file
EEPROM_START   EQU	0F00000h
BLOCK_SIZE     EQU	64


    #define HPWM_OVERRIDE 1
PBP_HARDWAREDEF  macro
    #include PBP_PATH\HPWM_K80_1.HWLIB
  endm

							; See P18F46K80.INC in the MPLAB folder for options
	config	RETEN 	= OFF  	 	; Ultra low-power regulator is Disabled 
	config	INTOSCSEL = LOW		; LF-INTOSC in Low-power mode during Sleep
	config	SOSCSEL = DIG   	; RC0/RC1 are digital pins 
    CONFIG 	XINST  	= OFF		; Extra instruction set turned off
	CONFIG 	FOSC   	= HS1		; low speed oscillator (4 MHz)	
	CONFIG	PLLCFG 	= OFF  	 	; phase locked loop (x4) turned off    
	CONFIG	FCMEN	= OFF  		; fail-safe clock monitor turned off
	CONFIG	IESO	= OFF		; internal/external oscillator switch over mode turned off
	CONFIG	PWRTEN 	= ON 		; power up timer enable     
	CONFIG	BORV   	= 3     	; 1.8V brown out reset voltage 
	CONFIG	BOREN	= ON		; brown out detect on and controlled by SBOREN bit
	CONFIG	BORPWR	= LOW		; brown out monitor set to low power level
	CONFIG 	WDTEN  	= OFF		; Turn off the watch dog timer
	CONFIG	WDTPS	= 32768		; watch-dog postscaler (doesn't matter, its turned off)
	CONFIG	CANMX	= PORTB		; ECAN RX/TX located on RB2/RB3 for 44 pin devices (not used)
;	CONFIG	T0CKMX	= PORTG		; timer0 gets clock source from RG4 (64 pin devices only)
;	CONFIG	T3CKMX  = PORTB		; timer3 gets clock source from RB5 (64 pin devices only) 
	CONFIG	MSSPMSK = MSK5		; mssp address masking in 5 bit mode (not used)
	CONFIG	MCLRE  	= ON    	; MCLR Enabled, RG5 disabled (cannot be used as input/output)
	CONFIG	STVREN 	= ON    	; Stack overflow reset enabled
	config	BBSIZ 	= BB2K		; Boot Block Size is 2K words
	config	CP0 	= OFF		; Code Protect 00800-03FFF
	config	CP1 	= OFF		; Code Protect 04000-07FFF
	config	CP2		= OFF		; Code Protect 08000-0BFFF
	config	CP3 	= OFF		; Code Protect 0C000-0FFFF
	config	CPB 	= OFF		; Code Protect Boot
	config	CPD 	= OFF		; Data EE Read Protect
	config	WRT0 	= OFF		; Table Write Protect 00800-03FFF
	config	WRT1 	= OFF		; Table Write Protect 04000-07FFF
	config	WRT2 	= OFF		; Table Write Protect 08000-0BFFF
	config	WRT3 	= OFF		; Table Write Protect 0C000-0FFFF
	config	WRTC 	= OFF		; Config. Write Protect
	config	WRTB 	= OFF		; Table Write Protect Boot
	config	WRTD 	= OFF		; Data EE Write Protect
	config	EBTR0 	= OFF		; Table Read Protect 00800-03FFF	
	config	EBTR1 	= OFF		; Table Read Protect 04000-07FFF
	config	EBTR2 	= OFF		; Table Read Protect 08000-0BFFF
	config	EBTR3	= OFF		; Table Read Protect 0C000-0FFFF
	config	EBTRB 	= OFF   	; Table Read Protect Boot



; Define statements.
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00610	DEFINE  ADC_CHANNELS 1
#define		ADC_CHANNELS		 1
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00015	DEFINE  OSC 			4     	; Using a 4 MHz oscillator (the truth!)
#define		OSC		 			4     	; Using a 4 MHz oscillator (the truth!)
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00016	DEFINE	I2C_SCLOUT		1
#define		I2C_SCLOUT				1
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00017	DEFINE	I2C_HOLD		1
#define		I2C_HOLD				1
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00018	DEFINE 	I2C_SLOW 		1
#define		I2C_SLOW		 		1
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00019	DEFINE 	HSER_RCSTA 		90h 	; enable serial port receive
#define		HSER_RCSTA		 		90h 	; enable serial port receive
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00020	DEFINE 	HSER_TXSTA 		20h		; enable serial port transmit
#define		HSER_TXSTA		 		20h		; enable serial port transmit
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00021	DEFINE 	HSER_BAUD 		4800	; serial port baud rate (limited by 4MHz osc.)
#define		HSER_BAUD		 		4800	; serial port baud rate (limited by 4MHz osc.)
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00022	DEFINE	HSER_CLROERR	1		; clear overrun errors automatically 
#define		HSER_CLROERR			1		; clear overrun errors automatically 
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00023	DEFINE 	BUTTON_PAUSE 	100
#define		BUTTON_PAUSE		 	100

RAM_START       		EQU	00000h
RAM_END         		EQU	00E40h
RAM_BANKS       		EQU	0000Fh
BANK0_START     		EQU	00060h
BANK0_END       		EQU	000FFh
BANK1_START     		EQU	00100h
BANK1_END       		EQU	001FFh
BANK2_START     		EQU	00200h
BANK2_END       		EQU	002FFh
BANK3_START     		EQU	00300h
BANK3_END       		EQU	003FFh
BANK4_START     		EQU	00400h
BANK4_END       		EQU	004FFh
BANK5_START     		EQU	00500h
BANK5_END       		EQU	005FFh
BANK6_START     		EQU	00600h
BANK6_END       		EQU	006FFh
BANK7_START     		EQU	00700h
BANK7_END       		EQU	007FFh
BANK8_START     		EQU	00800h
BANK8_END       		EQU	008FFh
BANK9_START     		EQU	00900h
BANK9_END       		EQU	009FFh
BANK10_START    		EQU	00A00h
BANK10_END      		EQU	00AFFh
BANK11_START    		EQU	00B00h
BANK11_END      		EQU	00BFFh
BANK12_START    		EQU	00C00h
BANK12_END      		EQU	00CFFh
BANK13_START    		EQU	00D00h
BANK13_END      		EQU	00DFFh
BANK14_START    		EQU	00E00h
BANK14_END      		EQU	00E40h
BANKA_START     		EQU	00000h
BANKA_END       		EQU	0005Fh

; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00028	A00000	FLAGS   VAR     BYTE BANKA SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 000h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00027	A00001	GOP     VAR     BYTE BANKA SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 001h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00016	A00002	R4      VAR     WORD BANKA SYSTEM       ' System Register
R4              		EQU	RAM_START + 002h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00017	A00004	R5      VAR     WORD BANKA SYSTEM       ' System Register
R5              		EQU	RAM_START + 004h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00018	A00006	R6      VAR     WORD BANKA SYSTEM       ' System Register
R6              		EQU	RAM_START + 006h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00019	A00008	R7      VAR     WORD BANKA SYSTEM       ' System Register
R7              		EQU	RAM_START + 008h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00020	A0000A	R8      VAR     WORD BANKA SYSTEM       ' System Register
R8              		EQU	RAM_START + 00Ah
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00023	A0000C	RM1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 00Ch
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00026	A0000D	RM2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 00Dh
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00021	A0000E	RR1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 00Eh
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00024	A0000F	RR2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 00Fh
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00022	A00010	RS1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Bank
RS1             		EQU	RAM_START + 010h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00025	A00011	RS2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Bank
RS2             		EQU	RAM_START + 011h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00012	A00012	R0      VAR     LONG BANKA SYSTEM       ' System Register
R0              		EQU	RAM_START + 012h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00013	A00016	R1      VAR     LONG BANKA SYSTEM       ' System Register
R1              		EQU	RAM_START + 016h
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00014	A0001A	R2      VAR     LONG BANKA SYSTEM       ' System Register
R2              		EQU	RAM_START + 01Ah
; C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.RAM	00015	A0001E	R3      VAR     LONG BANKA SYSTEM       ' System Register
R3              		EQU	RAM_START + 01Eh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A00022	'****************************************************************
T1              		EQU	RAM_START + 022h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A00026	'****************************************************************
T2              		EQU	RAM_START + 026h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A0002A	'****************************************************************
T3              		EQU	RAM_START + 02Ah
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A0002E	'****************************************************************
T4              		EQU	RAM_START + 02Eh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A00032	'****************************************************************
T5              		EQU	RAM_START + 032h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A00036	'****************************************************************
T6              		EQU	RAM_START + 036h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A0003A	'****************************************************************
T7              		EQU	RAM_START + 03Ah
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A0003E	'****************************************************************
T8              		EQU	RAM_START + 03Eh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A00042	'****************************************************************
T9              		EQU	RAM_START + 042h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00001	A00046	'****************************************************************
PB01            		EQU	RAM_START + 046h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00130	A00047	Change_W		VAR	Word		; change in position as measured by feedback
_Change_W        		EQU	RAM_START + 047h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00126	A00049	Delay_W			VAR	Word		; period between steps in milliseconds (10-10,000) = (100Hz - 0.1Hz), for correcting position
_Delay_W         		EQU	RAM_START + 049h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00128	A0004B	DoTriggers_W	VAR	Word					; number of triggers to wait for before executing task
_DoTriggers_W    		EQU	RAM_START + 04Bh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00183	A0004D	eeAddress 		VAR	Word					; variable address for accessing EEPROM internal locations (memory address)
_eeAddress       		EQU	RAM_START + 04Dh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00123	A0004F	i				VAR	Word		; generic counting etc. variables
_i               		EQU	RAM_START + 04Fh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00124	A00051	j				VAR	Word
_j               		EQU	RAM_START + 051h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00125	A00053	k				VAR	Word
_k               		EQU	RAM_START + 053h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00129	A00055	Number_W		VAR	Word		; variable for printing decimal values to lcd screen
_Number_W        		EQU	RAM_START + 055h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00127	A00057	Triggers_W		VAR	Word
_Triggers_W      		EQU	RAM_START + 057h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00122	A00059	W				VAR	Word		; temporary word variable
_W               		EQU	RAM_START + 059h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00111	A0005B	ArgumentLength	VAR	Byte
_ArgumentLength  		EQU	RAM_START + 05Bh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00109	A0005C	Ascii			VAR	Byte
_Ascii           		EQU	RAM_START + 05Ch
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00095	A0005D	AtLimit			VAR	Byte		; byte controls behavior at limit for various modes
_AtLimit         		EQU	RAM_START + 05Dh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00075	A0005E	B				VAR	Byte
_B               		EQU	RAM_START + 05Eh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00100	A0005F	Characters		VAR	Byte		; keep track of # of characters for filling lines with empty spaces
_Characters      		EQU	RAM_START + 05Fh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00112	A00060	CommandLength	VAR	Byte
_CommandLength   		EQU	RAM_START + 060h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00178	A00061	DataLength		VAR	Byte
_DataLength      		EQU	RAM_START + 061h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00119	A00062	Debugger        VAR Byte        ;
_Debugger        		EQU	RAM_START + 062h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00110	A00063	Decimal			VAR	Byte
_Decimal         		EQU	RAM_START + 063h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00088	A00064	Direction		VAR	Byte		; and in which direction
_Direction       		EQU	RAM_START + 064h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00179	A00065	eeI2Cbot		VAR	Byte					; eeprom bottom bank I2C address, must be a variable
_eeI2Cbot        		EQU	RAM_START + 065h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00181	A00066	eeI2Ctop		VAR	Byte					; eeprom top bank I2C address, must be a variable
_eeI2Ctop        		EQU	RAM_START + 066h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00091	A00067	FeedbackOn		VAR	Byte		; 1 = closed loop operation, 0 = open loop operation
_FeedbackOn      		EQU	RAM_START + 067h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00151	A00068	FirstTimeOn		VAR	Byte
_FirstTimeOn     		EQU	RAM_START + 068h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00104	A00069	hundreds		VAR	Byte		; for lcd display of hundred's place
_hundreds        		EQU	RAM_START + 069h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00107	A0006A	hundredthousands	VAR	Byte
_hundredthousands		EQU	RAM_START + 06Ah
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00187	A0006B	lcdI2Caddress	VAR	Byte
_lcdI2Caddress   		EQU	RAM_START + 06Bh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00115	A0006C	Li				VAR	Byte
_Li              		EQU	RAM_START + 06Ch
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00108	A0006D	millions		VAR	Byte
_millions        		EQU	RAM_START + 06Dh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00118	A0006E	Minutes_Temp	VAR	Byte
_Minutes_Temp    		EQU	RAM_START + 06Eh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00113	A0006F	Negative		VAR	Byte
_Negative        		EQU	RAM_START + 06Fh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00099	A00070	NumSpaces		VAR	Byte		; number of spaces to write 
_NumSpaces       		EQU	RAM_START + 070h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00102	A00071	ones			VAR	Byte		; for lcd display of one's place of some variable
_ones            		EQU	RAM_START + 071h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00076	A00072	OpMode			VAR	Byte		; 10 allowed modes of operation:
_OpMode          		EQU	RAM_START + 072h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00114	A00073	Ri				VAR	Byte		; button loop tracking variables
_Ri              		EQU	RAM_START + 073h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00194	A00074	rtcAddress		VAR	Byte 		; internal etc memory address   
_rtcAddress      		EQU	RAM_START + 074h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00004	A00075	rtcAging			VAR	Byte			'Aging offset data
_rtcAging        		EQU	RAM_START + 075h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00007	A00076	rtcControl			VAR	Byte			'control byte for RTC operation
_rtcControl      		EQU	RAM_START + 076h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00192	A00077	rtcI2Caddress	VAR	Byte
_rtcI2Caddress   		EQU	RAM_START + 077h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00014	A00078	rtcStatus			VAR	Byte			'status byte for RTC operation
_rtcStatus       		EQU	RAM_START + 078h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00006	A00079	rtcTempLSB			VAR	Byte			'temperature (least significant byte)
_rtcTempLSB      		EQU	RAM_START + 079h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00005	A0007A	rtcTempMSB			VAR	Byte			'temperature (most significant byte)
_rtcTempMSB      		EQU	RAM_START + 07Ah
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00101	A0007B	Spaces			VAR	Byte		; number of spaces to print
_Spaces          		EQU	RAM_START + 07Bh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00067	A0007C	StepStyle       VAR Byte        ; stepping modes
_StepStyle       		EQU	RAM_START + 07Ch
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00092	A0007D	TempFeedbackOn	VAR	Byte
_TempFeedbackOn  		EQU	RAM_START + 07Dh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00077	A0007E	TempOpMode		VAR	Byte
_TempOpMode      		EQU	RAM_START + 07Eh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00103	A0007F	tens			VAR	Byte		; for lcd display of ten's place
_tens            		EQU	RAM_START + 07Fh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00106	A00080	tenthousands	VAR	Byte		; for lcd display of tens of thousand's place
_tenthousands    		EQU	RAM_START + 080h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00105	A00081	thousands		VAR	Byte		; for lcd display of thousand's place
_thousands       		EQU	RAM_START + 081h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00161	A00082	TimeMatch		VAR	Byte
_TimeMatch       		EQU	RAM_START + 082h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00098	A00083	UseStoredSettings	VAR	Byte
_UseStoredSettings		EQU	RAM_START + 083h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00155	A00084	DoTime			VAR	Byte[TimeLength]		; time to do the task
_DoTime          		EQU	RAM_START + 084h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00150	A00087	Firmware		VAR	Byte[FirmwareLength]	; firmware version, length is 3 characters X.Y				
_Firmware        		EQU	RAM_START + 087h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00153	A0008A	Time			VAR	Byte[TimeLength]		; {seconds, minutes, hours}				
_Time            		EQU	RAM_START + 08Ah
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00154	A0008D	TimeBCD			VAR	Byte[TimeLength]		; BCD version of Time (seconds, minutes, hours)
_TimeBCD         		EQU	RAM_START + 08Dh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00139	A00090	Destination_L	VAR	Long		; destination of goto etc.
_Destination_L   		EQU	RAM_START + 090h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00145	A00094	Home_L			VAR	Long
_Home_L          		EQU	RAM_START + 094h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00143	A00098	L				VAR	Long		; a temporary long variable
_L               		EQU	RAM_START + 098h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00140	A0009C	MaxPos_L		VAR	Long
_MaxPos_L        		EQU	RAM_START + 09Ch
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00141	A000A0	MinPos_L		VAR	Long
_MinPos_L        		EQU	RAM_START + 0A0h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00144	A000A4	Number_L		VAR	Long 
_Number_L        		EQU	RAM_START + 0A4h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00133	A000A8	Position_L		VAR	Long		; position is a long variable (signed)
_Position_L      		EQU	RAM_START + 0A8h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00146	A000AC	Rotate_L		VAR	Long		; which direction to rotate when input trigger is high (-1 or +1)
_Rotate_L        		EQU	RAM_START + 0ACh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00135	A000B0	Setpoint_L		VAR	Long		; where the motor thinks it should be
_Setpoint_L      		EQU	RAM_START + 0B0h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00138	A000B4	StepError_L		VAR	Long		; Setpoint-Position
_StepError_L     		EQU	RAM_START + 0B4h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00142	A000B8	Steps_L			VAR	Long
_Steps_L         		EQU	RAM_START + 0B8h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00134	A000BC	TempPosition_L	VAR	Long		; temporary position storage
_TempPosition_L  		EQU	RAM_START + 0BCh
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00136	A000C0	TempSetpoint_L	VAR	Long		; temporary setpoint storage
_TempSetpoint_L  		EQU	RAM_START + 0C0h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00173	A000C4	ArgumentBuffer	VAR	Byte[BufferLength]
_ArgumentBuffer  		EQU	RAM_START + 0C4h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00172	A000E4	CommandBuffer	VAR	Byte[BufferLength]
_CommandBuffer   		EQU	RAM_START + 0E4h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00174	A00104	DataBuffer		VAR	Byte[BufferLength]
_DataBuffer      		EQU	RAM_START + 000000104h
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00177	A00124	eeBuffer		VAR	Byte[128]
_eeBuffer        		EQU	RAM_START + 000000124h
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00611	PORTL   VAR     PORTB
_PORTL           		EQU	 PORTB
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00612	PORTH   VAR     PORTC
_PORTH           		EQU	 PORTC
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00613	TRISL   VAR     TRISB
_TRISL           		EQU	 TRISB
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00614	TRISH   VAR     TRISC
_TRISH           		EQU	 TRISC
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00044	DataBus			VAR	PORTD		; data bus for reading rotary encoder
_DataBus         		EQU	 PORTD
_Position_L??BYTE0		EQU	_Position_L
_Position_L??BYTE1		EQU	_Position_L + 001h
_Position_L??BYTE2		EQU	_Position_L + 002h
_Position_L??BYTE3		EQU	_Position_L + 003h
_Delay_W??HIGHBYTE		EQU	_Delay_W + 001h
_Delay_W??LOWBYTE		EQU	_Delay_W
_DoTriggers_W??HIGHBYTE		EQU	_DoTriggers_W + 001h
_DoTriggers_W??LOWBYTE		EQU	_DoTriggers_W
_Setpoint_L??BYTE0		EQU	_Setpoint_L
_Setpoint_L??BYTE1		EQU	_Setpoint_L + 001h
_Setpoint_L??BYTE2		EQU	_Setpoint_L + 002h
_Setpoint_L??BYTE3		EQU	_Setpoint_L + 003h
_Destination_L??BYTE0		EQU	_Destination_L
_Destination_L??BYTE1		EQU	_Destination_L + 001h
_Destination_L??BYTE2		EQU	_Destination_L + 002h
_Destination_L??BYTE3		EQU	_Destination_L + 003h
_MinPos_L??BYTE0 		EQU	_MinPos_L
_MinPos_L??BYTE1 		EQU	_MinPos_L + 001h
_MinPos_L??BYTE2 		EQU	_MinPos_L + 002h
_MinPos_L??BYTE3 		EQU	_MinPos_L + 003h
_MaxPos_L??BYTE0 		EQU	_MaxPos_L
_MaxPos_L??BYTE1 		EQU	_MaxPos_L + 001h
_MaxPos_L??BYTE2 		EQU	_MaxPos_L + 002h
_MaxPos_L??BYTE3 		EQU	_MaxPos_L + 003h
_Steps_L??BYTE0  		EQU	_Steps_L
_Steps_L??BYTE1  		EQU	_Steps_L + 001h
_Steps_L??BYTE2  		EQU	_Steps_L + 002h
_Steps_L??BYTE3  		EQU	_Steps_L + 003h
_Rotate_L??BYTE0 		EQU	_Rotate_L
_Rotate_L??BYTE1 		EQU	_Rotate_L + 001h
_Rotate_L??BYTE2 		EQU	_Rotate_L + 002h
_Rotate_L??BYTE3 		EQU	_Rotate_L + 003h
_Change_W??HIGHBYTE		EQU	_Change_W + 001h
_Change_W??LOWBYTE		EQU	_Change_W
#define _GIE             	_INTCON??7
#define _PEIE            	_INTCON??6
#define _TMR0IE          	_INTCON??5
#define _INT0IE          	_INTCON??4
#define _TMR0IF          	_INTCON??2
#define _INT0IF          	_INTCON??1
#define _IPEN            	_RCON??7
#define _RBPU_           	_INTCON2??7
#define _INT1IE          	_INTCON3??3
#define _INT2IE          	_INTCON3??4
#define _INT3IE          	_INTCON3??5
#define _INTEDG0         	_INTCON2??6
#define _INTEDG1         	_INTCON2??5
#define _INTEDG2         	_INTCON2??4
#define _INTEDG3         	_INTCON2??3
#define _INT1IF          	_INTCON3??0
#define _INT2IF          	_INTCON3??1
#define _INT3IF          	_INTCON3??2
#define _RC1IE           	_PIE1??5
#define _RC1IF           	_PIR1??5
#define _RC2IE           	_PIE3??5
#define _RC2IF           	_PIR3??5
#define _ADCgo           	_ADCON0??1
#define _OERR1           	_RCSTA1??1
#define _OERR2           	_RCSTA2??1
#define _FERR1           	_RCSTA1??2
#define _FERR2           	_RCSTA2??2
#define _CREN1           	_RCSTA1??4
#define _CREN2           	_RCSTA2??4
#define _TMR0ON          	_T0CON??7
#define _T08BIT          	_T0CON??6
#define _T0CS            	_T0CON??5
#define _T0SE            	_T0CON??4
#define _PSA             	_T0CON??3
#define _TOPS2           	_T0CON??2
#define _TOPS1           	_T0CON??1
#define _TOPS0           	_T0CON??0
#define _TMR0MD          	_PMD1??0
#define _TMR1CS1         	_T1CON??7
#define _TMR1CS0         	_T1CON??6
#define _T1CKPS1         	_T1CON??5
#define _T1CKPS0         	_T1CON??4
#define _T1SOSCEN        	_T1CON??3
#define _T1SYNC_         	_T1CON??2
#define _T1RD16          	_T1CON??1
#define _TMR1ON          	_T1CON??0
#define _TMR1GE          	_T1GCON??7
#define _T1GPOL          	_T1GCON??6
#define _T1GTM           	_T1GCON??5
#define _T1GSPM          	_T1GCON??4
#define _T1GGO           	_T1GCON??3
#define _T1GVAL          	_T1GCON??2
#define _T1GSS1          	_T1GCON??1
#define _T1GSS0          	_T1GCON??0
#define _TMR3CS1         	_T3CON??7
#define _TMR3CS0         	_T3CON??6
#define _T3CKPS1         	_T3CON??5
#define _T3CKPS0         	_T3CON??4
#define _T3SOSCEN        	_T3CON??3
#define _T3SYNC_         	_T3CON??2
#define _T3RD16          	_T3CON??1
#define _TMR3ON          	_T3CON??0
#define _TMR3GE          	_T3GCON??7
#define _T3GPOL          	_T3GCON??6
#define _T3GTM           	_T3GCON??5
#define _T3GSPM          	_T3GCON??4
#define _T3GGO           	_T3GCON??3
#define _T3GVAL          	_T3GCON??2
#define _T3GSS1          	_T3GCON??1
#define _T3GSS0          	_T3GCON??0
#define _EnableDrive     	_PORTA??0
#define _ResetDrive_     	_PORTA??1
#define _CNTRL           	_PORTA??2
#define _HalfFull_       	_PORTA??3
#define _CountPos        	_PORTA??5
#define _Right           	_PORTB??0
#define _Left            	_PORTB??1
#define _Illuminate      	_PORTB??2
#define _ExtTrigger      	_PORTB??3
#define _ExtDirection    	_PORTB??4
#define _CountNeg        	_PORTB??5
#define _I2Cclk          	_PORTC??0
#define _I2Cdata         	_PORTC??1
#define _Hz              	_PORTC??2
#define _DataSelect      	_PORTC??3
#define _ReadCounter_    	_PORTC??4
#define _ResetCounter_   	_PORTC??5
#define _TX              	_PORTC??6
#define _RX              	_PORTC??7
#define _BusControl      	_PORTE??0
#define _PICstep         	_PORTE??1
#define _PICdirection    	_PORTE??2
#define _State           	 PB01, 001h
#define _Limit           	 PB01, 000h
#define _rtcENOSC_       	_rtcControl??7
#define _rtcBBSQW        	_rtcControl??6
#define _rtcCONV         	_rtcControl??5
#define _rtcINTCN        	_rtcControl??2
#define _rtcA2IE         	_rtcControl??1
#define _rtcA1IE         	_rtcControl??0
#define _rtcOSF          	_rtcStatus??7
#define _rtcEN32kHz      	_rtcStatus??3
#define _rtcBSY          	_rtcStatus??2
#define _rtcA2F          	_rtcStatus??1
#define _rtcA1F          	_rtcStatus??0
#define _INTCON??7       	 INTCON, 007h
#define _INTCON??6       	 INTCON, 006h
#define _INTCON??5       	 INTCON, 005h
#define _INTCON??4       	 INTCON, 004h
#define _INTCON??2       	 INTCON, 002h
#define _INTCON??1       	 INTCON, 001h
#define _RCON??7         	 RCON, 007h
#define _INTCON2??7      	 INTCON2, 007h
#define _INTCON3??3      	 INTCON3, 003h
#define _INTCON3??4      	 INTCON3, 004h
#define _INTCON3??5      	 INTCON3, 005h
#define _INTCON2??6      	 INTCON2, 006h
#define _INTCON2??5      	 INTCON2, 005h
#define _INTCON2??4      	 INTCON2, 004h
#define _INTCON2??3      	 INTCON2, 003h
#define _INTCON3??0      	 INTCON3, 000h
#define _INTCON3??1      	 INTCON3, 001h
#define _INTCON3??2      	 INTCON3, 002h
#define _PIE1??5         	 PIE1, 005h
#define _PIR1??5         	 PIR1, 005h
#define _PIE3??5         	 PIE3, 005h
#define _PIR3??5         	 PIR3, 005h
#define _ADCON0??1       	 ADCON0, 001h
#define _RCSTA1??1       	 RCSTA1, 001h
#define _RCSTA2??1       	 RCSTA2, 001h
#define _RCSTA1??2       	 RCSTA1, 002h
#define _RCSTA2??2       	 RCSTA2, 002h
#define _RCSTA1??4       	 RCSTA1, 004h
#define _RCSTA2??4       	 RCSTA2, 004h
#define _T0CON??7        	 T0CON, 007h
#define _T0CON??6        	 T0CON, 006h
#define _T0CON??5        	 T0CON, 005h
#define _T0CON??4        	 T0CON, 004h
#define _T0CON??3        	 T0CON, 003h
#define _T0CON??2        	 T0CON, 002h
#define _T0CON??1        	 T0CON, 001h
#define _T0CON??0        	 T0CON, 000h
#define _PMD1??0         	 PMD1, 000h
#define _T1CON??7        	 T1CON, 007h
#define _T1CON??6        	 T1CON, 006h
#define _T1CON??5        	 T1CON, 005h
#define _T1CON??4        	 T1CON, 004h
#define _T1CON??3        	 T1CON, 003h
#define _T1CON??2        	 T1CON, 002h
#define _T1CON??1        	 T1CON, 001h
#define _T1CON??0        	 T1CON, 000h
#define _T1GCON??7       	 T1GCON, 007h
#define _T1GCON??6       	 T1GCON, 006h
#define _T1GCON??5       	 T1GCON, 005h
#define _T1GCON??4       	 T1GCON, 004h
#define _T1GCON??3       	 T1GCON, 003h
#define _T1GCON??2       	 T1GCON, 002h
#define _T1GCON??1       	 T1GCON, 001h
#define _T1GCON??0       	 T1GCON, 000h
#define _T3CON??7        	 T3CON, 007h
#define _T3CON??6        	 T3CON, 006h
#define _T3CON??5        	 T3CON, 005h
#define _T3CON??4        	 T3CON, 004h
#define _T3CON??3        	 T3CON, 003h
#define _T3CON??2        	 T3CON, 002h
#define _T3CON??1        	 T3CON, 001h
#define _T3CON??0        	 T3CON, 000h
#define _T3GCON??7       	 T3GCON, 007h
#define _T3GCON??6       	 T3GCON, 006h
#define _T3GCON??5       	 T3GCON, 005h
#define _T3GCON??4       	 T3GCON, 004h
#define _T3GCON??3       	 T3GCON, 003h
#define _T3GCON??2       	 T3GCON, 002h
#define _T3GCON??1       	 T3GCON, 001h
#define _T3GCON??0       	 T3GCON, 000h
#define _PORTA??0        	 PORTA, 000h
#define _PORTA??1        	 PORTA, 001h
#define _PORTA??2        	 PORTA, 002h
#define _PORTA??3        	 PORTA, 003h
#define _PORTA??5        	 PORTA, 005h
#define _PORTB??0        	 PORTB, 000h
#define _PORTB??1        	 PORTB, 001h
#define _PORTB??2        	 PORTB, 002h
#define _PORTB??3        	 PORTB, 003h
#define _PORTB??4        	 PORTB, 004h
#define _PORTB??5        	 PORTB, 005h
#define _PORTC??0        	 PORTC, 000h
#define _PORTC??1        	 PORTC, 001h
#define _PORTC??2        	 PORTC, 002h
#define _PORTC??3        	 PORTC, 003h
#define _PORTC??4        	 PORTC, 004h
#define _PORTC??5        	 PORTC, 005h
#define _PORTC??6        	 PORTC, 006h
#define _PORTC??7        	 PORTC, 007h
#define _PORTE??0        	 PORTE, 000h
#define _PORTE??1        	 PORTE, 001h
#define _PORTE??2        	 PORTE, 002h
#define _Number_W??15    	_Number_W + 001h, 007h
#define _rtcControl??7   	_rtcControl, 007h
#define _rtcControl??6   	_rtcControl, 006h
#define _rtcControl??5   	_rtcControl, 005h
#define _rtcControl??2   	_rtcControl, 002h
#define _rtcControl??1   	_rtcControl, 001h
#define _rtcControl??0   	_rtcControl, 000h
#define _rtcStatus??7    	_rtcStatus, 007h
#define _rtcStatus??3    	_rtcStatus, 003h
#define _rtcStatus??2    	_rtcStatus, 002h
#define _rtcStatus??1    	_rtcStatus, 001h
#define _rtcStatus??0    	_rtcStatus, 000h
#define _Change_W??15    	_Change_W + 001h, 007h

; Constants.
_MinDelay        		EQU	00002h
_C               		EQU	00010h
_No              		EQU	00000h
_Yes             		EQU	00001h
_False           		EQU	00000h
_True            		EQU	00001h
_Half            		EQU	00001h
_Full            		EQU	00000h
_FullStep        		EQU	00000h
_HalfStep        		EQU	00001h
_MotorOff        		EQU	00000h
_Manual          		EQU	00001h
_External        		EQU	00002h
_TriggeredGoto   		EQU	00003h
_TimedGoto       		EQU	00004h
_TriggeredMove   		EQU	00005h
_TimedMove       		EQU	00006h
_StateRotate     		EQU	00007h
_TriggeredShutter		EQU	00008h
_StateShutter    		EQU	00009h
_Pos             		EQU	00000h
_Neg             		EQU	00001h
_Nothing         		EQU	00000h
_SwitchDirection 		EQU	00001h
_FirmwareLength  		EQU	00003h
_TimeLength      		EQU	00003h
_Seconds         		EQU	00000h
_Minutes         		EQU	00001h
_Hours           		EQU	00002h
_SecsPerHour     		EQU	00E10h
_SecsPerMinute   		EQU	0003Ch
_Secs            		EQU	00000h
_SecsMins        		EQU	00001h
_SecsMinsHrs     		EQU	00002h
_Query           		EQU	0003Fh
_Ready           		EQU	00021h
_CR              		EQU	0000Dh
_LF              		EQU	0000Ah
_BufferLength    		EQU	00020h
_PageSize        		EQU	00080h
_LCDprefix       		EQU	000FEh
_SetCursor       		EQU	00045h
_ClearScreen     		EQU	00051h
_SetContrast     		EQU	00052h
_SetBacklight    		EQU	00053h
_Line1           		EQU	00000h
_Line2           		EQU	00040h
_Line3           		EQU	00014h
_Line4           		EQU	00054h
_rtcSecondsREG   		EQU	00000h
_rtcMinutesREG   		EQU	00001h
_rtcHoursREG     		EQU	00002h
_rtcDayREG       		EQU	00003h
_rtcDateREG      		EQU	00004h
_rtcMonthsREG    		EQU	00005h
_rtcYearsREG     		EQU	00006h
_rtcAlarm1SecsREG		EQU	00007h
_rtcAlarm1MinsREG		EQU	00008h
_rtcAlarm1HoursREG		EQU	00009h
_rtcAlarm1DaysREG		EQU	0000Ah
_rtcAlarm2MinsREG		EQU	0000Bh
_rtcAlarm2HoursREG		EQU	0000Ch
_rtcAlarm2DaysREG		EQU	0000Dh
_rtcControlREG   		EQU	0000Eh
_rtcStatusREG    		EQU	0000Fh
_rtcAgingREG     		EQU	00010h
_rtcTempMSBREG   		EQU	00011h
_rtcTempLSBREG   		EQU	00012h

; EEPROM data.

	ORG EEPROM_START + 00000h

	DW 000000001h


	INCLUDE	"FIRMWARE.MAC"
	INCLUDE	"C:\PROGRAM FILES (X86)\PBP3\PBPPI18L.LIB"


; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00036	Z00002	#HEADER
Z00002
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00063	Z00003	#CONFIG
Z00003
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00584	Z00004	BANKA   $0000, $005F
Z00004
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00585	Z00005	BANK0   $0060, $00FF
Z00005
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00586	Z00006	BANK1   $0100, $01FF
Z00006
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00587	Z00007	BANK2   $0200, $02FF
Z00007
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00588	Z00008	BANK3   $0300, $03FF
Z00008
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00589	Z00009	BANK4   $0400, $04FF
Z00009
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00590	Z0000A	BANK5   $0500, $05FF
Z0000A
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00591	Z0000B	BANK6   $0600, $06FF
Z0000B
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00592	Z0000C	BANK7   $0700, $07FF
Z0000C
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00593	Z0000D	BANK8   $0800, $08FF
Z0000D
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00594	Z0000E	BANK9   $0900, $09FF
Z0000E
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00595	Z0000F	BANK10  $0A00, $0AFF
Z0000F
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00596	Z00010	BANK11  $0B00, $0BFF
Z00010
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00597	Z00011	BANK12  $0C00, $0CFF
Z00011
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00598	Z00012	BANK13  $0D00, $0DFF
Z00012
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00599	Z00013	BANK14  $0E00, $0E40
Z00013
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00601	Z00014	'EEPROM  $F00000, $F003FF
Z00014
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00603	Z00015	    #MSG "LONG Variables enabled (PBPL used)"
Z00015
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00604	Z00016	    LIBRARY  "PBPPI18L"
Z00016

; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00605	Z00017	    INCLUDE "PBPPI18L.RAM"
Z00017
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00608	Z00018	    INCLUDE "PBPPIC18.RAM"
Z00018
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00609	Z00019	#ENDIF
Z00019
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00610	Z0001A	DEFINE  ADC_CHANNELS 1
Z0001A
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC18F46K80.PBPINC	00618	Z0001B	#header
Z0001B

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00012	Z0001C	Disable Interrupt
Z0001C
	IDISABLE?	
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00015	Z0001D	DEFINE  OSC 			4     	; Using a 4 MHz oscillator (the truth!)
Z0001D
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00016	Z0001E	DEFINE	I2C_SCLOUT		1
Z0001E
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00017	Z0001F	DEFINE	I2C_HOLD		1
Z0001F
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00018	Z00020	DEFINE 	I2C_SLOW 		1
Z00020
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00019	Z00021	DEFINE 	HSER_RCSTA 		90h 	; enable serial port receive
Z00021
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00020	Z00022	DEFINE 	HSER_TXSTA 		20h		; enable serial port transmit
Z00022
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00021	Z00023	DEFINE 	HSER_BAUD 		4800	; serial port baud rate (limited by 4MHz osc.)
Z00023
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00022	Z00024	DEFINE	HSER_CLROERR	1		; clear overrun errors automatically 
Z00024
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00023	Z00025	DEFINE 	BUTTON_PAUSE 	100
Z00025

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00026	Z00026	include "Includes\BitDefinitions.pbp"			; special register bit definitions, device file only includes register names
Z00026

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00027	Z00027	include "Includes\Configuration.pbp"			; PIC configuration, software fuses, and external hardware connections
Z00027

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\CONFIGURATION.PBP	00001	Z00028	Disable Interrupt
Z00028
	IDISABLE?	
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\CONFIGURATION.PBP	00007	Z00029	#CONFIG							; See P18F46K80.INC in the MPLAB folder for options
Z00029

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\CONFIGURATION.PBP	00049	Z0002A	Enable Interrupt
Z0002A
	IENABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00028	Z0002B	include "Includes\Variables.pbp"				; variables and constants that aren't "local" to specific device subroutines
Z0002B

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00001	Z0002C	Disable Interrupt
Z0002C
	IDISABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00017	Z0002D	ANCON0		=	%00000000		; make PORTA a digital port
Z0002D
	MOVE?CB	000h, ANCON0

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00018	Z0002E	ANCON1		=	%00000000
Z0002E
	MOVE?CB	000h, ANCON1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00019	Z0002F	TRISA		=	%00000000		; all outputs (no RA4 on device)		
Z0002F
	MOVE?CB	000h, TRISA

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00028	Z00030	WPUB		=	%00000011		; enable (weak) pullups for pushbutton connections PORTB0:1
Z00030
	MOVE?CB	003h, WPUB

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00029	Z00031	RBPU_		=	0				; enable PORTB pullups (inputs only), for pushbuttons so they float at logic high
Z00031
	MOVE?CT	000h, _RBPU_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00030	Z00032	TRISB		=	%11111011		; configure directionality of PORTB
Z00032
	MOVE?CB	0FBh, TRISB

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00041	Z00033	TRISC		=	%10000111	
Z00033
	MOVE?CB	087h, TRISC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00045	Z00034	TRISD		=	%11111111		; data bus for rotary encoder is all inputs
Z00034
	MOVE?CB	0FFh, TRISD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00051	Z00035	TRISE		=	%11111000
Z00035
	MOVE?CB	0F8h, TRISE
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00057	Z00036	MinDelay		CON 2			; minimum delay between steps, ms
Z00036
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00058	Z00037	C				CON 16			; conversion: physical steps to internal counting
Z00037
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00060	Z00038	No				CON 0			; constants for ease of reading of feedback
Z00038
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00061	Z00039	Yes				CON 1
Z00039
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00062	Z0003A	False			CON 0
Z0003A
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00063	Z0003B	True			CON 1
Z0003B
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00064	Z0003C	Half			CON 1
Z0003C
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00065	Z0003D	Full			CON 0
Z0003D
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00068	Z0003E	FullStep        CON 0           ; "normal" drive (200 steps per revolution)
Z0003E
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00069	Z0003F	HalfStep        CON 1           ; "half" stepping (400 steps per revolution)
Z0003F
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00078	Z00040	MotorOff		CON 0			; do nothing
Z00040
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00079	Z00041	Manual			CON 1			; change position with pushbuttons		
Z00041
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00080	Z00042	External		CON 2			; change position with external trigger and TTL direction control
Z00042
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00081	Z00043	TriggeredGoto	CON 3			; goto a position on trigger event(s)
Z00043
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00082	Z00044	TimedGoto		CON 4			; goto a position at a specified time
Z00044
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00083	Z00045	TriggeredMove	CON 5			; move a certain number of steps on trigger event(s)
Z00045
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00084	Z00046	TimedMove		CON 6			; move a certain number of steps at a specified time
Z00046
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00085	Z00047	StateRotate		CON 7			; rotate the motor on logic level State of "trigger" external input
Z00047
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00086	Z00048	TriggeredShutter CON 8			; operate as a shutter, opens/closes on trigger event(s)
Z00048
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00087	Z00049	StateShutter	CON 9			; operate as a shutter, opens/closes depedending on external logic level
Z00049
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00089	Z0004A	Pos				CON 0			; low positive
Z0004A
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00090	Z0004B	Neg				CON 1			; high negative
Z0004B
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00096	Z0004C	Nothing			CON 0           ; don't move the motor
Z0004C
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00097	Z0004D	SwitchDirection	CON 1
Z0004D

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00116	Z0004E	Ri			=	0
Z0004E
	MOVE?CB	000h, _Ri

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00117	Z0004F	Li			=	0
Z0004F
	MOVE?CB	000h, _Li
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00149	Z00050	FirmwareLength	CON 3				
Z00050
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00152	Z00051	TimeLength		CON 3			
Z00051
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00156	Z00052	Seconds			CON 0						; array indices
Z00052
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00157	Z00053	Minutes			CON 1
Z00053
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00158	Z00054	Hours			CON 2
Z00054
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00159	Z00055	SecsPerHour		CON 3600
Z00055
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00160	Z00056	SecsPerMinute	CON 60
Z00056
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00162	Z00057	Secs			CON 0
Z00057
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00163	Z00058	SecsMins		CON 1
Z00058
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00164	Z00059	SecsMinsHrs		CON 2
Z00059
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00167	Z0005A	Query			CON "?"					; assigned wakeup character to be sent first by PC
Z0005A
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00168	Z0005B	Ready			CON "!"					; response byte indicating the PIC is ready to receive the command bytes
Z0005B
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00169	Z0005C	CR				CON	13 					; 0x0D carriage return gives new line
Z0005C
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00170	Z0005D	LF				CON 10 					; 0x0A line feed ends transmission
Z0005D
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00171	Z0005E	BufferLength	CON 32					; buffer for serial communication
Z0005E

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00180	Z0005F	eeI2Cbot	=	%10100000					 							
Z0005F
	MOVE?CB	0A0h, _eeI2Cbot

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00182	Z00060	eeI2Ctop	=	%10101000					; only the bottom bank is used in this project 
Z00060
	MOVE?CB	0A8h, _eeI2Ctop
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00184	Z00061	PageSize   		CON	128						; writing within page boundaries (128 bytes) allows sequential reads/writes
Z00061

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00188	Z00062	lcdI2Caddress =	$50							
Z00062
	MOVE?CB	050h, _lcdI2Caddress
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00189	Z00063	LCDprefix       CON $FE    		; sent before any command byte, as the subaddress
Z00063

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00193	Z00064	rtcI2Caddress =	$D0
Z00064
	MOVE?CB	0D0h, _rtcI2Caddress

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00196	Z00065	goto Variables_Done
Z00065
	GOTO?L	_Variables_Done

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00198	Z00066	Variables_Done:
Z00066

	LABEL?L	_Variables_Done	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\VARIABLES.PBP	00200	Z00067	Enable Interrupt
Z00067
	IENABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00029	Z00068	include "Includes\LCD.pbp"						; I2C LCD subroutines
Z00068

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00001	Z00069	Disable Interrupt
Z00069
	IDISABLE?	
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00005	Z0006A	SetCursor		    CON	$45	   	; then send 1 byte, $00-$67 		
Z0006A
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00006	Z0006B	ClearScreen		    CON	$51    	; clears screen and resets cursor to line 1, position 1 
Z0006B
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00007	Z0006C	SetContrast			CON $52		; then send 1 byte (1-50)
Z0006C
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00008	Z0006D	SetBacklight		CON	$53	   	; then send 1 byte (1-8)
Z0006D
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00009	Z0006E	Line1				CON	$00		; line 1 internal address
Z0006E
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00010	Z0006F	Line2				CON	$40		; line 2 internal address
Z0006F
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00011	Z00070	Line3				CON	$14		; line 3 internal address
Z00070
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00012	Z00071	Line4				CON	$54		; line 4 internal address
Z00071

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00014	Z00072	goto	LCD_Done
Z00072
	GOTO?L	_LCD_Done

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00019	Z00073	SetupLCD:		; load custom characters and set lcd parameters
Z00073

	LABEL?L	_SetupLCD	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00020	Z00074		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,LCDprefix,[SetContrast,40]
Z00074
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	_LCDprefix
	I2CWRITE?C	_SetContrast
	I2CWRITES?C	028h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00021	Z00075		pause		5
Z00075
	PAUSE?C	005h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00022	Z00076		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,LCDprefix,[SetBacklight,8]
Z00076
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	_LCDprefix
	I2CWRITE?C	_SetBacklight
	I2CWRITES?C	008h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00023	Z00077		pause		5
Z00077
	PAUSE?C	005h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00024	Z00078		gosub		ClearLCD
Z00078
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00025	Z00079	Return
Z00079
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00028	Z0007A	MotorOffDisplay:
Z0007A

	LABEL?L	_MotorOffDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00029	Z0007B		gosub		SetCursorLine1
Z0007B
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00030	Z0007C		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Motor Disabled"]
Z0007C
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	04Dh
	I2CWRITE?C	06Fh
	I2CWRITE?C	074h
	I2CWRITE?C	06Fh
	I2CWRITE?C	072h
	I2CWRITE?C	020h
	I2CWRITE?C	044h
	I2CWRITE?C	069h
	I2CWRITE?C	073h
	I2CWRITE?C	061h
	I2CWRITE?C	062h
	I2CWRITE?C	06Ch
	I2CWRITE?C	065h
	I2CWRITES?C	064h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00031	Z0007D		gosub		StandardDisplay
Z0007D
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00032	Z0007E		gosub		SetCursorLine4
Z0007E
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00033	Z0007F		gosub		PrintTime
Z0007F
	GOSUB?L	_PrintTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00034	Z00080	Return
Z00080
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00037	Z00081	ManualDisplay:
Z00081

	LABEL?L	_ManualDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00038	Z00082		gosub		SetCursorLine1
Z00082
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00039	Z00083		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["  Manual Operation  "]
Z00083
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	04Dh
	I2CWRITE?C	061h
	I2CWRITE?C	06Eh
	I2CWRITE?C	075h
	I2CWRITE?C	061h
	I2CWRITE?C	06Ch
	I2CWRITE?C	020h
	I2CWRITE?C	04Fh
	I2CWRITE?C	070h
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	061h
	I2CWRITE?C	074h
	I2CWRITE?C	069h
	I2CWRITE?C	06Fh
	I2CWRITE?C	06Eh
	I2CWRITE?C	020h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00040	Z00084		gosub		StandardDisplay
Z00084
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00041	Z00085		gosub		SetCursorLine4
Z00085
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00042	Z00086		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["<<-              +>>"]
Z00086
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	03Ch
	I2CWRITE?C	03Ch
	I2CWRITE?C	02Dh
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	02Bh
	I2CWRITE?C	03Eh
	I2CWRITES?C	03Eh

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00043	Z00087	Return
Z00087
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00046	Z00088	ExternalDisplay:
Z00088

	LABEL?L	_ExternalDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00047	Z00089		gosub		SetCursorLine1
Z00089
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00048	Z0008A		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,[" External Operation "]
Z0008A
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	020h
	I2CWRITE?C	045h
	I2CWRITE?C	078h
	I2CWRITE?C	074h
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	06Eh
	I2CWRITE?C	061h
	I2CWRITE?C	06Ch
	I2CWRITE?C	020h
	I2CWRITE?C	04Fh
	I2CWRITE?C	070h
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	061h
	I2CWRITE?C	074h
	I2CWRITE?C	069h
	I2CWRITE?C	06Fh
	I2CWRITE?C	06Eh
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00049	Z0008B		gosub		StandardDisplay
Z0008B
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00050	Z0008C		gosub		SetCursorLine4
Z0008C
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00051	Z0008D		gosub		PrintEmpty
Z0008D
	GOSUB?L	_PrintEmpty

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00052	Z0008E	Return
Z0008E
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00055	Z0008F	TriggeredGotoDisplay:
Z0008F

	LABEL?L	_TriggeredGotoDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00056	Z00090		gosub		SetCursorLine1
Z00090
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00057	Z00091		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Trig. Goto "]
Z00091
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	054h
	I2CWRITE?C	072h
	I2CWRITE?C	069h
	I2CWRITE?C	067h
	I2CWRITE?C	02Eh
	I2CWRITE?C	020h
	I2CWRITE?C	047h
	I2CWRITE?C	06Fh
	I2CWRITE?C	074h
	I2CWRITE?C	06Fh
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00058	Z00092		Characters = 11
Z00092
	MOVE?CB	00Bh, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00059	Z00093		Number_L = 	Destination_L
Z00093
	MOVE?NN	_Destination_L, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00060	Z00094		gosub		WriteNumber_L
Z00094
	GOSUB?L	_WriteNumber_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00061	Z00095		gosub		FillLine
Z00095
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00062	Z00096		gosub		StandardDisplay
Z00096
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00063	Z00097		gosub		SetCursorLine4
Z00097
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00064	Z00098		gosub		PrintTriggers
Z00098
	GOSUB?L	_PrintTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00065	Z00099	Return
Z00099
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00067	Z0009A	UpdateTriggers:
Z0009A

	LABEL?L	_UpdateTriggers	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00068	Z0009B		B = Line4 + 10
Z0009B
	MOVE?CB	05Eh, _B

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00069	Z0009C		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,LCDprefix,[SetCursor,B]
Z0009C
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	_LCDprefix
	I2CWRITE?C	_SetCursor
	I2CWRITES?B	_B

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00070	Z0009D		Number_W = 	Triggers_W
Z0009D
	MOVE?WW	_Triggers_W, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00071	Z0009E		gosub		WriteNumber_W
Z0009E
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00072	Z0009F		gosub		WriteSlash
Z0009F
	GOSUB?L	_WriteSlash

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00073	Z000A0		Number_W =	DoTriggers_W
Z000A0
	MOVE?WW	_DoTriggers_W, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00074	Z000A1		gosub		WriteNumber_W
Z000A1
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00075	Z000A2		gosub		WriteSpace
Z000A2
	GOSUB?L	_WriteSpace

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00076	Z000A3		gosub		WriteSpace
Z000A3
	GOSUB?L	_WriteSpace

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00077	Z000A4	Return
Z000A4
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00081	Z000A5	TimedGotoDisplay:
Z000A5

	LABEL?L	_TimedGotoDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00082	Z000A6		gosub		SetCursorLine1
Z000A6
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00083	Z000A7		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Timed Goto "]
Z000A7
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	054h
	I2CWRITE?C	069h
	I2CWRITE?C	06Dh
	I2CWRITE?C	065h
	I2CWRITE?C	064h
	I2CWRITE?C	020h
	I2CWRITE?C	047h
	I2CWRITE?C	06Fh
	I2CWRITE?C	074h
	I2CWRITE?C	06Fh
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00084	Z000A8		Characters = 11
Z000A8
	MOVE?CB	00Bh, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00085	Z000A9		Number_L = 	Destination_L
Z000A9
	MOVE?NN	_Destination_L, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00086	Z000AA		gosub		WriteNumber_L
Z000AA
	GOSUB?L	_WriteNumber_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00087	Z000AB		gosub		FillLine
Z000AB
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00088	Z000AC		gosub		StandardDisplay						; position and feedback on lines 2 and 3
Z000AC
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00089	Z000AD		gosub		SetCursorLine4
Z000AD
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00090	Z000AE		gosub		PrintTimes
Z000AE
	GOSUB?L	_PrintTimes

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00091	Z000AF	Return
Z000AF
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00094	Z000B0	StandardDisplay:
Z000B0

	LABEL?L	_StandardDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00095	Z000B1		gosub		SetCursorLine2
Z000B1
	GOSUB?L	_SetCursorLine2

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00096	Z000B2		gosub		PrintPosition			; current position based on how many steps the motor thinks it has taken
Z000B2
	GOSUB?L	_PrintPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00097	Z000B3		gosub		SetCursorLine3
Z000B3
	GOSUB?L	_SetCursorLine3

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00098	Z000B4		gosub		PrintEmpty
Z000B4
	GOSUB?L	_PrintEmpty

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00099	Z000B5	Return
Z000B5
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00102	Z000B6	PrintTimes:
Z000B6

	LABEL?L	_PrintTimes	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00103	Z000B7		gosub		WriteTime
Z000B7
	GOSUB?L	_WriteTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00104	Z000B8		gosub		WriteSpace
Z000B8
	GOSUB?L	_WriteSpace

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00105	Z000B9		gosub		WriteSlash
Z000B9
	GOSUB?L	_WriteSlash

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00106	Z000BA		gosub		WriteSpace
Z000BA
	GOSUB?L	_WriteSpace

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00107	Z000BB		gosub		WriteDoTime
Z000BB
	GOSUB?L	_WriteDoTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00108	Z000BC		gosub		FillLine
Z000BC
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00109	Z000BD	Return
Z000BD
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00112	Z000BE	WriteSteps:
Z000BE

	LABEL?L	_WriteSteps	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00113	Z000BF		Number_L = 	Steps_L
Z000BF
	MOVE?NN	_Steps_L, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00114	Z000C0		gosub		WriteNumber_L
Z000C0
	GOSUB?L	_WriteNumber_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00115	Z000C1	Return
Z000C1
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00118	Z000C2	TriggeredMoveDisplay:
Z000C2

	LABEL?L	_TriggeredMoveDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00119	Z000C3		gosub		SetCursorLine1
Z000C3
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00120	Z000C4		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Trig. Move "]
Z000C4
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	054h
	I2CWRITE?C	072h
	I2CWRITE?C	069h
	I2CWRITE?C	067h
	I2CWRITE?C	02Eh
	I2CWRITE?C	020h
	I2CWRITE?C	04Dh
	I2CWRITE?C	06Fh
	I2CWRITE?C	076h
	I2CWRITE?C	065h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00121	Z000C5		Characters = 11
Z000C5
	MOVE?CB	00Bh, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00122	Z000C6		gosub		WriteSteps
Z000C6
	GOSUB?L	_WriteSteps

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00123	Z000C7		gosub		FillLine
Z000C7
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00124	Z000C8		gosub		StandardDisplay
Z000C8
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00125	Z000C9		gosub		SetCursorLine4
Z000C9
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00126	Z000CA		gosub		PrintTriggers
Z000CA
	GOSUB?L	_PrintTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00127	Z000CB	Return
Z000CB
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00130	Z000CC	TimedMoveDisplay:			
Z000CC

	LABEL?L	_TimedMoveDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00131	Z000CD		gosub		SetCursorLine1
Z000CD
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00132	Z000CE		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Timed Move "]
Z000CE
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	054h
	I2CWRITE?C	069h
	I2CWRITE?C	06Dh
	I2CWRITE?C	065h
	I2CWRITE?C	064h
	I2CWRITE?C	020h
	I2CWRITE?C	04Dh
	I2CWRITE?C	06Fh
	I2CWRITE?C	076h
	I2CWRITE?C	065h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00133	Z000CF		Characters = 11
Z000CF
	MOVE?CB	00Bh, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00134	Z000D0		gosub		WriteSteps
Z000D0
	GOSUB?L	_WriteSteps

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00135	Z000D1		gosub		FillLine
Z000D1
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00136	Z000D2		gosub		StandardDisplay	
Z000D2
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00137	Z000D3		gosub		SetCursorLine4
Z000D3
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00138	Z000D4		gosub		PrintTimes
Z000D4
	GOSUB?L	_PrintTimes

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00139	Z000D5	Return
Z000D5
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00142	Z000D6	StateRotateDisplay:
Z000D6

	LABEL?L	_StateRotateDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00143	Z000D7		gosub		SetCursorLine1
Z000D7
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00144	Z000D8		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["    State Rotate    "]
Z000D8
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	053h
	I2CWRITE?C	074h
	I2CWRITE?C	061h
	I2CWRITE?C	074h
	I2CWRITE?C	065h
	I2CWRITE?C	020h
	I2CWRITE?C	052h
	I2CWRITE?C	06Fh
	I2CWRITE?C	074h
	I2CWRITE?C	061h
	I2CWRITE?C	074h
	I2CWRITE?C	065h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00145	Z000D9		gosub		StandardDisplay
Z000D9
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00146	Z000DA		gosub		SetCursorLine4
Z000DA
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00147	Z000DB		gosub		PrintEmpty
Z000DB
	GOSUB?L	_PrintEmpty

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00148	Z000DC	Return
Z000DC
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00151	Z000DD	TriggeredShutterDisplay:
Z000DD

	LABEL?L	_TriggeredShutterDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00152	Z000DE		gosub		SetCursorLine1
Z000DE
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00153	Z000DF		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,[" Triggered Shutter  "]
Z000DF
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	020h
	I2CWRITE?C	054h
	I2CWRITE?C	072h
	I2CWRITE?C	069h
	I2CWRITE?C	067h
	I2CWRITE?C	067h
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	065h
	I2CWRITE?C	064h
	I2CWRITE?C	020h
	I2CWRITE?C	053h
	I2CWRITE?C	068h
	I2CWRITE?C	075h
	I2CWRITE?C	074h
	I2CWRITE?C	074h
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	020h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00154	Z000E0		gosub		StandardDisplay
Z000E0
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00155	Z000E1		gosub		SetCursorLine4
Z000E1
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00156	Z000E2		gosub		PrintTriggers
Z000E2
	GOSUB?L	_PrintTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00157	Z000E3	Return
Z000E3
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00160	Z000E4	PrintTriggers:
Z000E4

	LABEL?L	_PrintTriggers	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00161	Z000E5		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Triggers: "]
Z000E5
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	054h
	I2CWRITE?C	072h
	I2CWRITE?C	069h
	I2CWRITE?C	067h
	I2CWRITE?C	067h
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	073h
	I2CWRITE?C	03Ah
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00162	Z000E6		Characters = 10
Z000E6
	MOVE?CB	00Ah, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00163	Z000E7		Number_W = 	Triggers_W
Z000E7
	MOVE?WW	_Triggers_W, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00164	Z000E8		gosub		WriteNumber_W
Z000E8
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00165	Z000E9		gosub		WriteSlash
Z000E9
	GOSUB?L	_WriteSlash

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00166	Z000EA		Number_W =	DoTriggers_W
Z000EA
	MOVE?WW	_DoTriggers_W, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00167	Z000EB		gosub		WriteNumber_W
Z000EB
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00168	Z000EC		gosub		FillLine
Z000EC
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00169	Z000ED	Return
Z000ED
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00172	Z000EE	StateShutterDisplay:
Z000EE

	LABEL?L	_StateShutterDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00173	Z000EF		gosub		SetCursorLine1
Z000EF
	GOSUB?L	_SetCursorLine1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00174	Z000F0		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["   State Shutter    "]
Z000F0
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	053h
	I2CWRITE?C	074h
	I2CWRITE?C	061h
	I2CWRITE?C	074h
	I2CWRITE?C	065h
	I2CWRITE?C	020h
	I2CWRITE?C	053h
	I2CWRITE?C	068h
	I2CWRITE?C	075h
	I2CWRITE?C	074h
	I2CWRITE?C	074h
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00175	Z000F1		gosub		StandardDisplay
Z000F1
	GOSUB?L	_StandardDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00176	Z000F2		gosub		SetCursorLine4
Z000F2
	GOSUB?L	_SetCursorLine4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00177	Z000F3		gosub		PrintEmpty
Z000F3
	GOSUB?L	_PrintEmpty

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00178	Z000F4	Return
Z000F4
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00181	Z000F5	WriteTime:
Z000F5

	LABEL?L	_WriteTime	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00182	Z000F6		Number_W 	=	Time[Hours]
Z000F6
	MOVE?BW	_Time + 00002h, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00183	Z000F7		gosub		WriteNumber_W
Z000F7
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00184	Z000F8		gosub		WriteColon
Z000F8
	GOSUB?L	_WriteColon

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00185	Z000F9		Number_W 	= 	Time[Minutes]
Z000F9
	MOVE?BW	_Time + 00001h, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00186	Z000FA		If Number_W < 10 then
Z000FA
	CMPGE?WCL	_Number_W, 00Ah, L00005

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00187	Z000FB			gosub	WriteZero
Z000FB
	GOSUB?L	_WriteZero

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00188	Z000FC		EndIf
Z000FC
	LABEL?L	L00005	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00189	Z000FD		gosub		WriteNumber_W
Z000FD
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00190	Z000FE		gosub		WriteColon
Z000FE
	GOSUB?L	_WriteColon

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00191	Z000FF		Number_W 	= 	Time[Seconds]
Z000FF
	MOVE?BW	_Time, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00192	Z00100		If Number_W < 10 then
Z00100
	CMPGE?WCL	_Number_W, 00Ah, L00007

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00193	Z00101			gosub	WriteZero
Z00101
	GOSUB?L	_WriteZero

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00194	Z00102		EndIf
Z00102
	LABEL?L	L00007	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00195	Z00103		gosub	WriteNumber_W
Z00103
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00196	Z00104	Return
Z00104
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00198	Z00105	PrintTime:
Z00105

	LABEL?L	_PrintTime	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00199	Z00106		Characters = 0
Z00106
	MOVE?CB	000h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00200	Z00107		gosub	WriteTime
Z00107
	GOSUB?L	_WriteTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00201	Z00108		gosub	FillLine
Z00108
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00202	Z00109	Return
Z00109
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00205	Z0010A	WriteDoTime:							; print execution time 
Z0010A

	LABEL?L	_WriteDoTime	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00206	Z0010B		Number_W 	=	DoTime[Hours]
Z0010B
	MOVE?BW	_DoTime + 00002h, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00207	Z0010C		gosub		WriteNumber_W
Z0010C
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00208	Z0010D		gosub		WriteColon
Z0010D
	GOSUB?L	_WriteColon

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00209	Z0010E		Number_W 	= 	DoTime[Minutes]
Z0010E
	MOVE?BW	_DoTime + 00001h, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00210	Z0010F		If Number_W < 10 then
Z0010F
	CMPGE?WCL	_Number_W, 00Ah, L00009

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00211	Z00110			gosub	WriteZero
Z00110
	GOSUB?L	_WriteZero

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00212	Z00111		EndIf
Z00111
	LABEL?L	L00009	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00213	Z00112		gosub		WriteNumber_W
Z00112
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00214	Z00113		gosub		WriteColon
Z00113
	GOSUB?L	_WriteColon

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00215	Z00114		Number_W 	= 	DoTime[Seconds]
Z00114
	MOVE?BW	_DoTime, _Number_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00216	Z00115		If Number_W < 10 then
Z00115
	CMPGE?WCL	_Number_W, 00Ah, L00011

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00217	Z00116			gosub	WriteZero
Z00116
	GOSUB?L	_WriteZero

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00218	Z00117		EndIf
Z00117
	LABEL?L	L00011	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00219	Z00118		gosub	WriteNumber_W
Z00118
	GOSUB?L	_WriteNumber_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00220	Z00119	Return
Z00119
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00222	Z0011A	PrintDoTime:
Z0011A

	LABEL?L	_PrintDoTime	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00223	Z0011B		Characters = 0
Z0011B
	MOVE?CB	000h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00224	Z0011C		gosub	WriteDoTime
Z0011C
	GOSUB?L	_WriteDoTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00225	Z0011D		gosub	FillLine
Z0011D
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00226	Z0011E	Return
Z0011E
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00228	Z0011F	WriteZero:
Z0011F

	LABEL?L	_WriteZero	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00229	Z00120		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["0"]
Z00120
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?C	030h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00230	Z00121		Characters = Characters + 1
Z00121
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00231	Z00122	Return	
Z00122
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00235	Z00123	UpdateDisplay:
Z00123

	LABEL?L	_UpdateDisplay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00236	Z00124	    gosub       SetCursorLine2
Z00124
	GOSUB?L	_SetCursorLine2

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00237	Z00125	    gosub       PrintPosition
Z00125
	GOSUB?L	_PrintPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00247	Z00126	Return
Z00126
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00250	Z00127	PrintPosition:
Z00127

	LABEL?L	_PrintPosition	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00251	Z00128		If TempFeedbackOn != FeedbackOn OR TempPosition_L != Position_L then
Z00128
	CMPNE?BBB	_TempFeedbackOn, _FeedbackOn, T1
	CMPNE?NNB	_TempPosition_L, _Position_L, T2
	LOR?BBN	T1, T2, T2
	CMPF?NL	T2, L00013

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00252	Z00129			gosub		SetCursorLine2
Z00129
	GOSUB?L	_SetCursorLine2

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00253	Z0012A			If FeedbackOn=Yes then
Z0012A
	CMPNE?BCL	_FeedbackOn, _Yes, L00015

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00254	Z0012B				I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Position*: "]
Z0012B
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	050h
	I2CWRITE?C	06Fh
	I2CWRITE?C	073h
	I2CWRITE?C	069h
	I2CWRITE?C	074h
	I2CWRITE?C	069h
	I2CWRITE?C	06Fh
	I2CWRITE?C	06Eh
	I2CWRITE?C	02Ah
	I2CWRITE?C	03Ah
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00255	Z0012C				Characters = 11
Z0012C
	MOVE?CB	00Bh, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00256	Z0012D			Else
Z0012D
	GOTO?L	L00016
	LABEL?L	L00015	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00257	Z0012E				I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Position: "]
Z0012E
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	050h
	I2CWRITE?C	06Fh
	I2CWRITE?C	073h
	I2CWRITE?C	069h
	I2CWRITE?C	074h
	I2CWRITE?C	069h
	I2CWRITE?C	06Fh
	I2CWRITE?C	06Eh
	I2CWRITE?C	03Ah
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00258	Z0012F				Characters = 10
Z0012F
	MOVE?CB	00Ah, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00259	Z00130			EndIf
Z00130
	LABEL?L	L00016	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00260	Z00131			Number_L = 	Position_L
Z00131
	MOVE?NN	_Position_L, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00261	Z00132			gosub		WriteNumber_L
Z00132
	GOSUB?L	_WriteNumber_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00262	Z00133			If (Position_L+C>=MaxPos_L) OR (Position_L-C<=MinPos_L) then  ; indicate motor at limit
Z00133
	ADD?NCN	_Position_L, _C, T1
	CMPGE?NNB	T1, _MaxPos_L, T1
	SUB?NCN	_Position_L, _C, T2
	CMPLE?NNB	T2, _MinPos_L, T2
	LOR?BBN	T1, T2, T2
	CMPF?NL	T2, L00017

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00263	Z00134				gosub   WriteSpace
Z00134
	GOSUB?L	_WriteSpace

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00264	Z00135				gosub   WriteExclamation
Z00135
	GOSUB?L	_WriteExclamation

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00265	Z00136			EndIf
Z00136
	LABEL?L	L00017	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00266	Z00137			gosub		FillLine
Z00137
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00267	Z00138			TempPosition_L = Position_L
Z00138
	MOVE?NN	_Position_L, _TempPosition_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00268	Z00139			TempFeedbackOn = FeedbackOn
Z00139
	MOVE?BB	_FeedbackOn, _TempFeedbackOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00269	Z0013A		EndIf
Z0013A
	LABEL?L	L00013	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00270	Z0013B	Return
Z0013B
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00273	Z0013C	PrintSetpoint:
Z0013C

	LABEL?L	_PrintSetpoint	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00274	Z0013D		If TempSetpoint_L != Setpoint_L then
Z0013D
	CMPEQ?NNL	_TempSetpoint_L, _Setpoint_L, L00019

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00275	Z0013E			I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Setpoint: "]
Z0013E
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	053h
	I2CWRITE?C	065h
	I2CWRITE?C	074h
	I2CWRITE?C	070h
	I2CWRITE?C	06Fh
	I2CWRITE?C	069h
	I2CWRITE?C	06Eh
	I2CWRITE?C	074h
	I2CWRITE?C	03Ah
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00276	Z0013F			Characters = 10
Z0013F
	MOVE?CB	00Ah, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00277	Z00140			Number_L =	Setpoint_L
Z00140
	MOVE?NN	_Setpoint_L, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00278	Z00141			gosub		WriteNumber_L
Z00141
	GOSUB?L	_WriteNumber_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00279	Z00142			gosub		FillLine
Z00142
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00280	Z00143			TempSetpoint_L = Setpoint_L
Z00143
	MOVE?NN	_Setpoint_L, _TempSetpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00281	Z00144		EndIf
Z00144
	LABEL?L	L00019	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00282	Z00145	Return
Z00145
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00285	Z00146	PrintEmpty:
Z00146

	LABEL?L	_PrintEmpty	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00286	Z00147		Characters = 0
Z00147
	MOVE?CB	000h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00287	Z00148		gosub	FillLine
Z00148
	GOSUB?L	_FillLine

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00288	Z00149	Return
Z00149
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00290	Z0014A	WriteNumber_L:
Z0014A

	LABEL?L	_WriteNumber_L	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00291	Z0014B		L = Number_L/C             ; convert internal counts to user steps
Z0014B
	DIV?NCN	_Number_L, _C, _L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00292	Z0014C		If L<0 then
Z0014C
	CMPGE?NCL	_L, 000h, L00021

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00293	Z0014D			gosub	WriteNegative
Z0014D
	GOSUB?L	_WriteNegative

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00294	Z0014E			L = abs L
Z0014E
	ABS?NN	_L, _L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00295	Z0014F		EndIf	
Z0014F
	LABEL?L	L00021	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00296	Z00150		If L > 999999 then
Z00150
	CMPLE?NCL	_L, 0000F423Fh, L00023

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00297	Z00151			millions = L/1000000
Z00151
	DIV?NCB	_L, 0000F4240h, _millions

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00298	Z00152			hundredthousands = (L-1000000*millions)/100000	 									
Z00152
	MUL?CBN	0000F4240h, _millions, T1
	SUB?NNN	_L, T1, T1
	DIV?NCB	T1, 0000186A0h, _hundredthousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00299	Z00153			tenthousands = (L-1000000*millions-100000*hundredthousands)/10000	
Z00153
	MUL?CBN	0000F4240h, _millions, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	0000186A0h, _hundredthousands, T2
	SUB?NNN	T1, T2, T2
	DIV?NCB	T2, 000002710h, _tenthousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00300	Z00154			thousands = (L-1000000*millions-100000*hundredthousands-10000*tenthousands)/1000													
Z00154
	MUL?CBN	0000F4240h, _millions, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	0000186A0h, _hundredthousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	000002710h, _tenthousands, T3
	SUB?NNN	T2, T3, T3
	DIV?NCB	T3, 0000003E8h, _thousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00301	Z00155			hundreds = (L-1000000*millions-100000*hundredthousands-10000*tenthousands-1000*thousands)/100									
Z00155
	MUL?CBN	0000F4240h, _millions, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	0000186A0h, _hundredthousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	000002710h, _tenthousands, T3
	SUB?NNN	T2, T3, T3
	MUL?CBN	0000003E8h, _thousands, T4
	SUB?NNN	T3, T4, T4
	DIV?NCB	T4, 064h, _hundreds

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00302	Z00156			tens = (L-1000000*millions-100000*hundredthousands-10000*tenthousands-1000*thousands-100*hundreds)/10				
Z00156
	MUL?CBN	0000F4240h, _millions, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	0000186A0h, _hundredthousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	000002710h, _tenthousands, T3
	SUB?NNN	T2, T3, T3
	MUL?CBN	0000003E8h, _thousands, T4
	SUB?NNN	T3, T4, T4
	MUL?CBN	064h, _hundreds, T5
	SUB?NNN	T4, T5, T5
	DIV?NCB	T5, 00Ah, _tens

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00303	Z00157			ones = L-1000000*millions-100000*hundredthousands-10000*tenthousands-1000*thousands-100*hundreds-10*tens
Z00157
	MUL?CBN	0000F4240h, _millions, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	0000186A0h, _hundredthousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	000002710h, _tenthousands, T3
	SUB?NNN	T2, T3, T3
	MUL?CBN	0000003E8h, _thousands, T4
	SUB?NNN	T3, T4, T4
	MUL?CBN	064h, _hundreds, T5
	SUB?NNN	T4, T5, T5
	MUL?CBN	00Ah, _tens, T6
	SUB?NNB	T5, T6, _ones

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00304	Z00158			Decimal = millions
Z00158
	MOVE?BB	_millions, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00305	Z00159			gosub	WriteDecimal
Z00159
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00306	Z0015A			Decimal = hundredthousands
Z0015A
	MOVE?BB	_hundredthousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00307	Z0015B			gosub	WriteDecimal
Z0015B
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00308	Z0015C			Decimal = tenthousands
Z0015C
	MOVE?BB	_tenthousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00309	Z0015D			gosub	WriteDecimal
Z0015D
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00310	Z0015E			Decimal = thousands
Z0015E
	MOVE?BB	_thousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00311	Z0015F			gosub	WriteDecimal
Z0015F
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00312	Z00160			Decimal = hundreds
Z00160
	MOVE?BB	_hundreds, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00313	Z00161			gosub	WriteDecimal
Z00161
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00314	Z00162			Decimal = tens
Z00162
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00315	Z00163			gosub	WriteDecimal
Z00163
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00316	Z00164			Decimal = ones
Z00164
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00317	Z00165			gosub	WriteDecimal
Z00165
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00318	Z00166			return
Z00166
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00319	Z00167		EndIf	
Z00167
	LABEL?L	L00023	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00320	Z00168		If L > 99999 then
Z00168
	CMPLE?NCL	_L, 00001869Fh, L00025

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00321	Z00169			hundredthousands = L/100000	 									
Z00169
	DIV?NCB	_L, 0000186A0h, _hundredthousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00322	Z0016A			tenthousands = (L-100000*hundredthousands)/10000	
Z0016A
	MUL?CBN	0000186A0h, _hundredthousands, T1
	SUB?NNN	_L, T1, T1
	DIV?NCB	T1, 000002710h, _tenthousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00323	Z0016B			thousands = (L-100000*hundredthousands-10000*tenthousands)/1000													
Z0016B
	MUL?CBN	0000186A0h, _hundredthousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	000002710h, _tenthousands, T2
	SUB?NNN	T1, T2, T2
	DIV?NCB	T2, 0000003E8h, _thousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00324	Z0016C			hundreds = (L-100000*hundredthousands-10000*tenthousands-1000*thousands)/100									
Z0016C
	MUL?CBN	0000186A0h, _hundredthousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	000002710h, _tenthousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	0000003E8h, _thousands, T3
	SUB?NNN	T2, T3, T3
	DIV?NCB	T3, 064h, _hundreds

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00325	Z0016D			tens = (L-100000*hundredthousands-10000*tenthousands-1000*thousands-100*hundreds)/10				
Z0016D
	MUL?CBN	0000186A0h, _hundredthousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	000002710h, _tenthousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	0000003E8h, _thousands, T3
	SUB?NNN	T2, T3, T3
	MUL?CBN	064h, _hundreds, T4
	SUB?NNN	T3, T4, T4
	DIV?NCB	T4, 00Ah, _tens

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00326	Z0016E			ones = L-100000*hundredthousands-10000*tenthousands-1000*thousands-100*hundreds-10*tens
Z0016E
	MUL?CBN	0000186A0h, _hundredthousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	000002710h, _tenthousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	0000003E8h, _thousands, T3
	SUB?NNN	T2, T3, T3
	MUL?CBN	064h, _hundreds, T4
	SUB?NNN	T3, T4, T4
	MUL?CBN	00Ah, _tens, T5
	SUB?NNB	T4, T5, _ones

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00327	Z0016F			Decimal = hundredthousands
Z0016F
	MOVE?BB	_hundredthousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00328	Z00170			gosub	WriteDecimal
Z00170
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00329	Z00171			Decimal = tenthousands
Z00171
	MOVE?BB	_tenthousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00330	Z00172			gosub	WriteDecimal
Z00172
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00331	Z00173			Decimal = thousands
Z00173
	MOVE?BB	_thousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00332	Z00174			gosub	WriteDecimal
Z00174
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00333	Z00175			Decimal = hundreds
Z00175
	MOVE?BB	_hundreds, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00334	Z00176			gosub	WriteDecimal
Z00176
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00335	Z00177			Decimal = tens
Z00177
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00336	Z00178			gosub	WriteDecimal
Z00178
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00337	Z00179			Decimal = ones
Z00179
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00338	Z0017A			gosub	WriteDecimal
Z0017A
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00339	Z0017B			return
Z0017B
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00340	Z0017C		EndIf
Z0017C
	LABEL?L	L00025	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00341	Z0017D		If L > 9999 then
Z0017D
	CMPLE?NCL	_L, 00000270Fh, L00027

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00342	Z0017E			tenthousands = L/10000	
Z0017E
	DIV?NCB	_L, 000002710h, _tenthousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00343	Z0017F			thousands = (L-10000*tenthousands)/1000													
Z0017F
	MUL?CBN	000002710h, _tenthousands, T1
	SUB?NNN	_L, T1, T1
	DIV?NCB	T1, 0000003E8h, _thousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00344	Z00180			hundreds = (L-10000*tenthousands-1000*thousands)/100									
Z00180
	MUL?CBN	000002710h, _tenthousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	0000003E8h, _thousands, T2
	SUB?NNN	T1, T2, T2
	DIV?NCB	T2, 064h, _hundreds

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00345	Z00181			tens = (L-10000*tenthousands-1000*thousands-100*hundreds)/10				
Z00181
	MUL?CBN	000002710h, _tenthousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	0000003E8h, _thousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	064h, _hundreds, T3
	SUB?NNN	T2, T3, T3
	DIV?NCB	T3, 00Ah, _tens

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00346	Z00182			ones = L-10000*tenthousands-1000*thousands-100*hundreds-10*tens
Z00182
	MUL?CBN	000002710h, _tenthousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	0000003E8h, _thousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	064h, _hundreds, T3
	SUB?NNN	T2, T3, T3
	MUL?CBN	00Ah, _tens, T4
	SUB?NNB	T3, T4, _ones

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00347	Z00183			Decimal = tenthousands
Z00183
	MOVE?BB	_tenthousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00348	Z00184			gosub	WriteDecimal
Z00184
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00349	Z00185			Decimal = thousands
Z00185
	MOVE?BB	_thousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00350	Z00186			gosub	WriteDecimal
Z00186
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00351	Z00187			Decimal = hundreds
Z00187
	MOVE?BB	_hundreds, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00352	Z00188			gosub	WriteDecimal
Z00188
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00353	Z00189			Decimal = tens
Z00189
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00354	Z0018A			gosub	WriteDecimal
Z0018A
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00355	Z0018B			Decimal = ones
Z0018B
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00356	Z0018C			gosub	WriteDecimal
Z0018C
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00357	Z0018D			return
Z0018D
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00358	Z0018E		EndIf
Z0018E
	LABEL?L	L00027	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00359	Z0018F		If L > 999 then
Z0018F
	CMPLE?NCL	_L, 0000003E7h, L00029

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00360	Z00190			thousands = L/1000													
Z00190
	DIV?NCB	_L, 0000003E8h, _thousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00361	Z00191			hundreds = (L-1000*thousands)/100									
Z00191
	MUL?CBN	0000003E8h, _thousands, T1
	SUB?NNN	_L, T1, T1
	DIV?NCB	T1, 064h, _hundreds

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00362	Z00192			tens = (L-1000*thousands-100*hundreds)/10				
Z00192
	MUL?CBN	0000003E8h, _thousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	064h, _hundreds, T2
	SUB?NNN	T1, T2, T2
	DIV?NCB	T2, 00Ah, _tens

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00363	Z00193			ones = L-1000*thousands-100*hundreds-10*tens
Z00193
	MUL?CBN	0000003E8h, _thousands, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	064h, _hundreds, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	00Ah, _tens, T3
	SUB?NNB	T2, T3, _ones

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00364	Z00194			Decimal = thousands
Z00194
	MOVE?BB	_thousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00365	Z00195			gosub	WriteDecimal
Z00195
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00366	Z00196			Decimal = hundreds
Z00196
	MOVE?BB	_hundreds, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00367	Z00197			gosub	WriteDecimal
Z00197
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00368	Z00198			Decimal = tens
Z00198
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00369	Z00199			gosub	WriteDecimal
Z00199
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00370	Z0019A			Decimal = ones
Z0019A
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00371	Z0019B			gosub	WriteDecimal
Z0019B
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00372	Z0019C			return
Z0019C
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00373	Z0019D		EndIf
Z0019D
	LABEL?L	L00029	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00374	Z0019E		If L > 99 then
Z0019E
	CMPLE?NCL	_L, 063h, L00031

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00375	Z0019F			hundreds = L/100									
Z0019F
	DIV?NCB	_L, 064h, _hundreds

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00376	Z001A0			tens = (L-100*hundreds)/10				
Z001A0
	MUL?CBN	064h, _hundreds, T1
	SUB?NNN	_L, T1, T1
	DIV?NCB	T1, 00Ah, _tens

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00377	Z001A1			ones = L-100*hundreds-10*tens
Z001A1
	MUL?CBN	064h, _hundreds, T1
	SUB?NNN	_L, T1, T1
	MUL?CBN	00Ah, _tens, T2
	SUB?NNB	T1, T2, _ones

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00378	Z001A2			Decimal = hundreds
Z001A2
	MOVE?BB	_hundreds, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00379	Z001A3			gosub	WriteDecimal
Z001A3
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00380	Z001A4			Decimal = tens
Z001A4
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00381	Z001A5			gosub	WriteDecimal
Z001A5
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00382	Z001A6			Decimal = ones
Z001A6
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00383	Z001A7			gosub	WriteDecimal
Z001A7
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00384	Z001A8			return
Z001A8
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00385	Z001A9		EndIf
Z001A9
	LABEL?L	L00031	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00386	Z001AA		If L > 9 then				; 2 significant figures
Z001AA
	CMPLE?NCL	_L, 009h, L00033

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00387	Z001AB			tens = L/10				
Z001AB
	DIV?NCB	_L, 00Ah, _tens

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00388	Z001AC			ones = L-10*tens
Z001AC
	MUL?CBN	00Ah, _tens, T1
	SUB?NNB	_L, T1, _ones

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00389	Z001AD			Decimal = tens
Z001AD
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00390	Z001AE			gosub	WriteDecimal
Z001AE
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00391	Z001AF			Decimal = ones
Z001AF
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00392	Z001B0			gosub	WriteDecimal
Z001B0
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00393	Z001B1			return
Z001B1
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00394	Z001B2		EndIf
Z001B2
	LABEL?L	L00033	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00395	Z001B3		Decimal = L					; 1 significant figure
Z001B3
	MOVE?NB	_L, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00396	Z001B4		gosub	WriteDecimal
Z001B4
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00397	Z001B5	Return
Z001B5
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00400	Z001B6	WriteNumber_W:
Z001B6

	LABEL?L	_WriteNumber_W	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00401	Z001B7		If Number_W.15=1 then
Z001B7
	CMPNE?TCL	_Number_W??15, 001h, L00035

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00402	Z001B8			gosub	WriteNegative
Z001B8
	GOSUB?L	_WriteNegative

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00403	Z001B9			W = abs Number_W
Z001B9
	ABS?WW	_Number_W, _W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00404	Z001BA		Else
Z001BA
	GOTO?L	L00036
	LABEL?L	L00035	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00405	Z001BB			W = Number_W
Z001BB
	MOVE?WW	_Number_W, _W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00406	Z001BC		EndIf	 									
Z001BC
	LABEL?L	L00036	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00407	Z001BD		tenthousands = W/10000
Z001BD
	DIV?WCB	_W, 000002710h, _tenthousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00408	Z001BE		thousands = (W-10000*tenthousands)/1000													
Z001BE
	MUL?CBN	000002710h, _tenthousands, T1
	SUB?WNN	_W, T1, T1
	DIV?NCB	T1, 0000003E8h, _thousands

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00409	Z001BF		hundreds = (W-10000*tenthousands-1000*thousands)/100									
Z001BF
	MUL?CBN	000002710h, _tenthousands, T1
	SUB?WNN	_W, T1, T1
	MUL?CBN	0000003E8h, _thousands, T2
	SUB?NNN	T1, T2, T2
	DIV?NCB	T2, 064h, _hundreds

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00410	Z001C0		tens = (W-10000*tenthousands-1000*thousands-100*hundreds)/10				
Z001C0
	MUL?CBN	000002710h, _tenthousands, T1
	SUB?WNN	_W, T1, T1
	MUL?CBN	0000003E8h, _thousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	064h, _hundreds, T3
	SUB?NNN	T2, T3, T3
	DIV?NCB	T3, 00Ah, _tens

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00411	Z001C1		ones = W-10000*tenthousands-1000*thousands-100*hundreds-10*tens
Z001C1
	MUL?CBN	000002710h, _tenthousands, T1
	SUB?WNN	_W, T1, T1
	MUL?CBN	0000003E8h, _thousands, T2
	SUB?NNN	T1, T2, T2
	MUL?CBN	064h, _hundreds, T3
	SUB?NNN	T2, T3, T3
	MUL?CBN	00Ah, _tens, T4
	SUB?NNB	T3, T4, _ones

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00412	Z001C2		If W > 9999 then
Z001C2
	CMPLE?WCL	_W, 00000270Fh, L00037

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00413	Z001C3			Decimal = tenthousands
Z001C3
	MOVE?BB	_tenthousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00414	Z001C4			gosub	WriteDecimal
Z001C4
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00415	Z001C5			Decimal = thousands
Z001C5
	MOVE?BB	_thousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00416	Z001C6			gosub	WriteDecimal
Z001C6
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00417	Z001C7			Decimal = hundreds
Z001C7
	MOVE?BB	_hundreds, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00418	Z001C8			gosub	WriteDecimal
Z001C8
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00419	Z001C9			Decimal = tens
Z001C9
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00420	Z001CA			gosub	WriteDecimal
Z001CA
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00421	Z001CB			Decimal = ones
Z001CB
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00422	Z001CC			gosub	WriteDecimal
Z001CC
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00423	Z001CD			return
Z001CD
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00424	Z001CE		endif
Z001CE
	LABEL?L	L00037	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00425	Z001CF		if W > 999	then		; 4 significant figures
Z001CF
	CMPLE?WCL	_W, 0000003E7h, L00039

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00426	Z001D0			Decimal = thousands
Z001D0
	MOVE?BB	_thousands, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00427	Z001D1			gosub	WriteDecimal
Z001D1
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00428	Z001D2			Decimal = hundreds
Z001D2
	MOVE?BB	_hundreds, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00429	Z001D3			gosub	WriteDecimal
Z001D3
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00430	Z001D4			Decimal = tens
Z001D4
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00431	Z001D5			gosub	WriteDecimal
Z001D5
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00432	Z001D6			Decimal = ones
Z001D6
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00433	Z001D7			gosub	WriteDecimal
Z001D7
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00434	Z001D8			return
Z001D8
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00435	Z001D9		endif
Z001D9
	LABEL?L	L00039	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00436	Z001DA		if  W > 99	then		; 3 significant figures
Z001DA
	CMPLE?WCL	_W, 063h, L00041

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00437	Z001DB			Decimal = hundreds
Z001DB
	MOVE?BB	_hundreds, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00438	Z001DC			gosub	WriteDecimal
Z001DC
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00439	Z001DD			Decimal = tens
Z001DD
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00440	Z001DE			gosub	WriteDecimal
Z001DE
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00441	Z001DF			Decimal = ones
Z001DF
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00442	Z001E0			gosub	WriteDecimal
Z001E0
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00443	Z001E1			return
Z001E1
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00444	Z001E2		endif
Z001E2
	LABEL?L	L00041	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00445	Z001E3		if 	W > 9		then		; 2 significant figures
Z001E3
	CMPLE?WCL	_W, 009h, L00043

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00446	Z001E4			Decimal = tens
Z001E4
	MOVE?BB	_tens, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00447	Z001E5			gosub	WriteDecimal
Z001E5
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00448	Z001E6			Decimal = ones
Z001E6
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00449	Z001E7			gosub	WriteDecimal
Z001E7
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00450	Z001E8			return
Z001E8
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00451	Z001E9		endif
Z001E9
	LABEL?L	L00043	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00452	Z001EA		Decimal = ones				; 1 significant figure
Z001EA
	MOVE?BB	_ones, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00453	Z001EB		gosub	WriteDecimal
Z001EB
	GOSUB?L	_WriteDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00454	Z001EC	Return
Z001EC
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00457	Z001ED	FillLine:											; fill line with empty spaces based on the value of the 'Characters' variable
Z001ED

	LABEL?L	_FillLine	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00458	Z001EE	    If Characters < 20 then
Z001EE
	CMPGE?BCL	_Characters, 014h, L00045

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00459	Z001EF	        NumSpaces = 20-Characters
Z001EF
	SUB?CBB	014h, _Characters, _NumSpaces

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00460	Z001F0	        gosub	WriteSpaces
Z001F0
	GOSUB?L	_WriteSpaces

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00461	Z001F1	    EndIf
Z001F1
	LABEL?L	L00045	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00462	Z001F2	Return
Z001F2
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00464	Z001F3	WriteDecimal:											; set byte 'D' before entering this subroutine, 0-9 valid range
Z001F3

	LABEL?L	_WriteDecimal	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00465	Z001F4		Ascii	=	"?"										; remains this value if D not found in the list... (D>9)
Z001F4
	MOVE?CB	03Fh, _Ascii

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00466	Z001F5		Lookup	Decimal,["0123456789"],Ascii				; A assigned to Dth element in the string
Z001F5
	LOOKUP?BCLB	_Decimal, 00Ah, L00001, _Ascii
	LURET?C	030h
	LURET?C	031h
	LURET?C	032h
	LURET?C	033h
	LURET?C	034h
	LURET?C	035h
	LURET?C	036h
	LURET?C	037h
	LURET?C	038h
	LURET?C	039h

	LABEL?L	L00001	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00467	Z001F6		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,[Ascii]	; and write to LCD screen
Z001F6
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?B	_Ascii

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00468	Z001F7		Characters = Characters + 1
Z001F7
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00469	Z001F8	Return
Z001F8
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00471	Z001F9	ClearLCD:
Z001F9

	LABEL?L	_ClearLCD	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00472	Z001FA		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,LCDprefix,[ClearScreen]
Z001FA
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	_LCDprefix
	I2CWRITES?C	_ClearScreen

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00473	Z001FB		pause		5		; command takes 1.5ms to complete, but the LCD seems cranky
Z001FB
	PAUSE?C	005h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00474	Z001FC		Characters = 0
Z001FC
	MOVE?CB	000h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00475	Z001FD	Return
Z001FD
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00477	Z001FE	WriteSlash:
Z001FE

	LABEL?L	_WriteSlash	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00478	Z001FF		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["/"]
Z001FF
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?C	02Fh

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00479	Z00200		Characters = Characters + 1
Z00200
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00480	Z00201	Return
Z00201
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00482	Z00202	WritePercent:
Z00202

	LABEL?L	_WritePercent	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00483	Z00203		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["%"]
Z00203
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?C	025h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00484	Z00204		Characters = Characters + 1
Z00204
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00485	Z00205	Return
Z00205
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00487	Z00206	WriteSpace:
Z00206

	LABEL?L	_WriteSpace	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00488	Z00207		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,[" "]
Z00207
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00489	Z00208		Characters = Characters + 1
Z00208
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00490	Z00209	Return
Z00209
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00492	Z0020A	WriteExclamation:
Z0020A

	LABEL?L	_WriteExclamation	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00493	Z0020B		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["!"]
Z0020B
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?C	021h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00494	Z0020C		Characters = Characters + 1
Z0020C
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00495	Z0020D	Return
Z0020D
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00497	Z0020E	WriteColon:
Z0020E

	LABEL?L	_WriteColon	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00498	Z0020F		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,[":"]
Z0020F
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?C	03Ah

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00499	Z00210		Characters = Characters + 1
Z00210
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00500	Z00211	Return
Z00211
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00502	Z00212	WriteAsterisk:
Z00212

	LABEL?L	_WriteAsterisk	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00503	Z00213		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["*"]
Z00213
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?C	02Ah

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00504	Z00214		Characters = Characters + 1
Z00214
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00505	Z00215	Return
Z00215
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00507	Z00216	WriteNegative:
Z00216

	LABEL?L	_WriteNegative	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00508	Z00217		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["-"]
Z00217
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITES?C	02Dh

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00509	Z00218		Characters = Characters + 1
Z00218
	ADD?BCB	_Characters, 001h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00510	Z00219	Return
Z00219
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00512	Z0021A	WriteSpaces:					; set variable NumSpaces before calling this subroutine
Z0021A

	LABEL?L	_WriteSpaces	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00513	Z0021B		For j=1 to NumSpaces
Z0021B
	MOVE?CW	001h, _j
	LABEL?L	L00047	
	CMPGT?WBL	_j, _NumSpaces, L00048

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00514	Z0021C			gosub	WriteSpace
Z0021C
	GOSUB?L	_WriteSpace

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00515	Z0021D		next j
Z0021D
	NEXT?WCL	_j, 001h, L00047
	LABEL?L	L00048	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00516	Z0021E	Return
Z0021E
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00518	Z0021F	SetCursorLine1:
Z0021F

	LABEL?L	_SetCursorLine1	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00519	Z00220		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,LCDprefix,[SetCursor,Line1]
Z00220
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	_LCDprefix
	I2CWRITE?C	_SetCursor
	I2CWRITES?C	_Line1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00520	Z00221		Characters = 0
Z00221
	MOVE?CB	000h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00521	Z00222		pause		2
Z00222
	PAUSE?C	002h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00522	Z00223	Return
Z00223
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00524	Z00224	SetCursorLine2:
Z00224

	LABEL?L	_SetCursorLine2	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00525	Z00225		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,LCDprefix,[SetCursor,Line2]
Z00225
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	_LCDprefix
	I2CWRITE?C	_SetCursor
	I2CWRITES?C	_Line2

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00526	Z00226		Characters = 0
Z00226
	MOVE?CB	000h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00527	Z00227		pause		2
Z00227
	PAUSE?C	002h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00528	Z00228	Return
Z00228
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00530	Z00229	SetCursorLine3:
Z00229

	LABEL?L	_SetCursorLine3	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00531	Z0022A		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,LCDprefix,[SetCursor,Line3]
Z0022A
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	_LCDprefix
	I2CWRITE?C	_SetCursor
	I2CWRITES?C	_Line3

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00532	Z0022B		Characters = 0
Z0022B
	MOVE?CB	000h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00533	Z0022C		pause		2
Z0022C
	PAUSE?C	002h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00534	Z0022D	Return
Z0022D
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00536	Z0022E	SetCursorLine4:
Z0022E

	LABEL?L	_SetCursorLine4	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00537	Z0022F		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,LCDprefix,[SetCursor,Line4]
Z0022F
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	_LCDprefix
	I2CWRITE?C	_SetCursor
	I2CWRITES?C	_Line4

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00538	Z00230		Characters = 0
Z00230
	MOVE?CB	000h, _Characters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00539	Z00231		pause		2
Z00231
	PAUSE?C	002h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00540	Z00232	Return
Z00232
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00542	Z00233	LCD_Done:
Z00233

	LABEL?L	_LCD_Done	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\LCD.PBP	00544	Z00234	Enable Interrupt
Z00234
	IENABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00030	Z00235	include "Includes\RTC.pbp"						; DS3231M I2C RTC
Z00235

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00001	Z00236	Disable Interrupt
Z00236
	IDISABLE?	
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00021	Z00237	rtcSecondsREG		CON		$00			; variable rtcAddress gets set to one of these for reading/writing	
Z00237
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00022	Z00238	rtcMinutesREG		CON		$01			; burst read/write is predominantly used for this application
Z00238
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00023	Z00239	rtcHoursREG			CON		$02
Z00239
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00024	Z0023A	rtcDayREG			CON		$03		
Z0023A
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00025	Z0023B	rtcDateREG			CON		$04
Z0023B
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00026	Z0023C	rtcMonthsREG		CON		$05		
Z0023C
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00027	Z0023D	rtcYearsREG			CON		$06
Z0023D
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00028	Z0023E	rtcAlarm1SecsREG	CON		$07
Z0023E
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00029	Z0023F	rtcAlarm1MinsREG	CON		$08
Z0023F
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00030	Z00240	rtcAlarm1HoursREG	CON		$09
Z00240
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00031	Z00241	rtcAlarm1DaysREG	CON		$0A
Z00241
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00032	Z00242	rtcAlarm2MinsREG	CON		$0B
Z00242
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00033	Z00243	rtcAlarm2HoursREG	CON		$0C
Z00243
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00034	Z00244	rtcAlarm2DaysREG	CON		$0D
Z00244
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00035	Z00245	rtcControlREG		CON		$0E
Z00245
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00036	Z00246	rtcStatusREG		CON		$0F
Z00246
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00037	Z00247	rtcAgingREG			CON		$10
Z00247
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00038	Z00248	rtcTempMSBREG		CON		$11
Z00248
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00039	Z00249	rtcTempLSBREG		CON		$12
Z00249

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00041	Z0024A	goto	RTC_Done		'jump over subroutines so that they don't evaluate on startup
Z0024A
	GOTO?L	_RTC_Done

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00047	Z0024B	SetupRTC:	
Z0024B

	LABEL?L	_SetupRTC	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00048	Z0024C		rtcControl 	=	$00	; enable osc, no square wave on battery, 1Hz on pin 3, no alarm1, no alarm2
Z0024C
	MOVE?CB	000h, _rtcControl

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00049	Z0024D		rtcStatus	=	%00001000 ; oscillator time now valid, yes 32kHz output, not busy, no alarm conditions
Z0024D
	MOVE?CB	008h, _rtcStatus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00050	Z0024E		rtcAging	=	$00	; no aging oscillator correction when first set up
Z0024E
	MOVE?CB	000h, _rtcAging

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00051	Z0024F		I2Cwrite		I2Cdata,I2Cclk,rtcI2Caddress,rtcControlREG,[rtcControl,rtcStatus,rtcAging]
Z0024F
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_rtcI2Caddress
	I2CWRITE?C	_rtcControlREG
	I2CWRITE?B	_rtcControl
	I2CWRITE?B	_rtcStatus
	I2CWRITES?B	_rtcAging

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00052	Z00250		pause	10										
Z00250
	PAUSE?C	00Ah

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00053	Z00251	Return
Z00251
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00056	Z00252	UpdateRTC:						; BURST WRITE
Z00252

	LABEL?L	_UpdateRTC	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00057	Z00253		for i=0 to TimeLength-1
Z00253
	MOVE?CW	000h, _i
	LABEL?L	L00049	
	CMPGT?WCL	_i, 002h, L00050

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00058	Z00254			TimeBCD[i] = (Time[i]/10)<<4 + (Time[i]-10*(Time[i]/10))
Z00254
	AOUT?BWB	_Time, _i, T1
	DIV?BCN	T1, 00Ah, T1
	SHIFTL?NCN	T1, 004h, T1
	AOUT?BWB	_Time, _i, T2
	AOUT?BWB	_Time, _i, T3
	DIV?BCN	T3, 00Ah, T3
	MUL?CNN	00Ah, T3, T3
	SUB?BNN	T2, T3, T3
	ADD?NNN	T1, T3, T3
	AIN?NBW	T3, _TimeBCD, _i

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00059	Z00255		next i
Z00255
	NEXT?WCL	_i, 001h, L00049
	LABEL?L	L00050	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00060	Z00256		I2Cwrite	I2Cdata,I2Cclk,rtcI2Caddress,rtcSecondsREG,[STR TimeBCD \TimeLength]
Z00256
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_rtcI2Caddress
	I2CWRITE?C	_rtcSecondsREG
	I2CCOUNT?C	_TimeLength
	I2CWRITESTRS?B	_TimeBCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00061	Z00257		pause 10
Z00257
	PAUSE?C	00Ah

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00062	Z00258	Return
Z00258
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00065	Z00259	ReadRTC:						; BURST READ
Z00259

	LABEL?L	_ReadRTC	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00066	Z0025A		I2Cread		I2Cdata,I2Cclk,rtcI2Caddress,rtcSecondsREG,[STR TimeBCD \TimeLength]
Z0025A
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_rtcI2Caddress
	I2CWRITE?C	_rtcSecondsREG
	I2CCOUNT?C	_TimeLength
	I2CREADSTRS?B	_TimeBCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00068	Z0025B		for i=0 to TimeLength-1
Z0025B
	MOVE?CW	000h, _i
	LABEL?L	L00051	
	CMPGT?WCL	_i, 002h, L00052

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00069	Z0025C			Time[i] = 10*(TimeBCD[i]>>4) + (TimeBCD[i] & $0F)	
Z0025C
	AOUT?BWB	_TimeBCD, _i, T1
	SHIFTR?BCN	T1, 004h, T1
	MUL?CNN	00Ah, T1, T1
	AOUT?BWB	_TimeBCD, _i, T2
	AND?BCN	T2, 00Fh, T2
	ADD?NNN	T1, T2, T2
	AIN?NBW	T2, _Time, _i

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00070	Z0025D		next i
Z0025D
	NEXT?WCL	_i, 001h, L00051
	LABEL?L	L00052	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00071	Z0025E	Return
Z0025E
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00074	Z0025F	RTC_Done:
Z0025F

	LABEL?L	_RTC_Done	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\RTC.PBP	00076	Z00260	Enable Interrupt
Z00260
	IENABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00031	Z00261	include "Includes\EEPROM.pbp"					; 24AA1025 external EEPROM, for saving settings and {time,position} pairs
Z00261

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00001	Z00262	Disable Interrupt
Z00262
	IDISABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00010	Z00263	goto	EEPROM_Done						; jump over subroutines so they don't evaluate on startup
Z00263
	GOTO?L	_EEPROM_Done

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00016	Z00264	SaveSettings:												; save off current variable settings to EEPROM to reload (if power is removed and then restored)
Z00264

	LABEL?L	_SaveSettings	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00017	Z00265		eeAddress = 0
Z00265
	MOVE?CW	000h, _eeAddress

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00029	Z00266					STR DoTime \TimeLength]
Z00266
	ARRAYWRITENAME?B	_eeBuffer
	ARRAYWRITE?B	_Position_L??BYTE0
	ARRAYWRITE?B	_Position_L??BYTE1
	ARRAYWRITE?B	_Position_L??BYTE2
	ARRAYWRITE?B	_Position_L??BYTE3
	ARRAYWRITE?B	_OpMode
	ARRAYWRITE?B	_FeedbackOn
	ARRAYWRITE?B	_StepStyle
	ARRAYWRITE?T	_Limit
	ARRAYWRITE?B	_AtLimit
	ARRAYWRITE?T	_State
	ARRAYWRITE?B	_TimeMatch
	ARRAYWRITE?B	_Delay_W??HIGHBYTE
	ARRAYWRITE?B	_Delay_W??LOWBYTE
	ARRAYWRITE?B	_DoTriggers_W??HIGHBYTE
	ARRAYWRITE?B	_DoTriggers_W??LOWBYTE
	ARRAYWRITE?B	_Setpoint_L??BYTE0
	ARRAYWRITE?B	_Setpoint_L??BYTE1
	ARRAYWRITE?B	_Setpoint_L??BYTE2
	ARRAYWRITE?B	_Setpoint_L??BYTE3
	ARRAYWRITE?B	_Destination_L??BYTE0
	ARRAYWRITE?B	_Destination_L??BYTE1
	ARRAYWRITE?B	_Destination_L??BYTE2
	ARRAYWRITE?B	_Destination_L??BYTE3
	ARRAYWRITE?B	_MinPos_L??BYTE0
	ARRAYWRITE?B	_MinPos_L??BYTE1
	ARRAYWRITE?B	_MinPos_L??BYTE2
	ARRAYWRITE?B	_MinPos_L??BYTE3
	ARRAYWRITE?B	_MaxPos_L??BYTE0
	ARRAYWRITE?B	_MaxPos_L??BYTE1
	ARRAYWRITE?B	_MaxPos_L??BYTE2
	ARRAYWRITE?B	_MaxPos_L??BYTE3
	ARRAYWRITE?B	_Steps_L??BYTE0
	ARRAYWRITE?B	_Steps_L??BYTE1
	ARRAYWRITE?B	_Steps_L??BYTE2
	ARRAYWRITE?B	_Steps_L??BYTE3
	ARRAYWRITE?B	_Rotate_L??BYTE0
	ARRAYWRITE?B	_Rotate_L??BYTE1
	ARRAYWRITE?B	_Rotate_L??BYTE2
	ARRAYWRITE?B	_Rotate_L??BYTE3
	ARRAYWRITECOUNT?C	_TimeLength
	ARRAYWRITESTRN?B	_DoTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00030	Z00267		DataLength = 42
Z00267
	MOVE?CB	02Ah, _DataLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00031	Z00268		I2CWRITE I2Cdata,I2Cclk,eeI2Ctop,eeAddress,[STR eeBuffer \DataLength]
Z00268
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_eeI2Ctop
	I2CWRITE?W	_eeAddress
	I2CCOUNT?B	_DataLength
	I2CWRITESTRS?B	_eeBuffer

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00032	Z00269		pause	10
Z00269
	PAUSE?C	00Ah

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00033	Z0026A	Return
Z0026A
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00035	Z0026B	RestoreSettings:
Z0026B

	LABEL?L	_RestoreSettings	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00036	Z0026C		gosub		ClearLCD
Z0026C
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00037	Z0026D		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Restoring settings  "]
Z0026D
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	052h
	I2CWRITE?C	065h
	I2CWRITE?C	073h
	I2CWRITE?C	074h
	I2CWRITE?C	06Fh
	I2CWRITE?C	072h
	I2CWRITE?C	069h
	I2CWRITE?C	06Eh
	I2CWRITE?C	067h
	I2CWRITE?C	020h
	I2CWRITE?C	073h
	I2CWRITE?C	065h
	I2CWRITE?C	074h
	I2CWRITE?C	074h
	I2CWRITE?C	069h
	I2CWRITE?C	06Eh
	I2CWRITE?C	067h
	I2CWRITE?C	073h
	I2CWRITE?C	020h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00038	Z0026E		eeAddress = 0	
Z0026E
	MOVE?CW	000h, _eeAddress

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00039	Z0026F		DataLength = 42
Z0026F
	MOVE?CB	02Ah, _DataLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00040	Z00270		I2CREAD		I2Cdata,I2Cclk,eeI2Ctop,eeAddress,[STR eeBuffer \DataLength]
Z00270
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_eeI2Ctop
	I2CWRITE?W	_eeAddress
	I2CCOUNT?B	_DataLength
	I2CREADSTRS?B	_eeBuffer

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00052	Z00271					STR DoTime \TimeLength]																																	;
Z00271
	ARRAYREADNAME?B	_eeBuffer
	ARRAYREAD?B	_Position_L??BYTE0
	ARRAYREAD?B	_Position_L??BYTE1
	ARRAYREAD?B	_Position_L??BYTE2
	ARRAYREAD?B	_Position_L??BYTE3
	ARRAYREAD?B	_OpMode
	ARRAYREAD?B	_FeedbackOn
	ARRAYREAD?B	_StepStyle
	ARRAYREAD?T	_Limit
	ARRAYREAD?B	_AtLimit
	ARRAYREAD?T	_State
	ARRAYREAD?B	_TimeMatch
	ARRAYREAD?B	_Delay_W??HIGHBYTE
	ARRAYREAD?B	_Delay_W??LOWBYTE
	ARRAYREAD?B	_DoTriggers_W??HIGHBYTE
	ARRAYREAD?B	_DoTriggers_W??LOWBYTE
	ARRAYREAD?B	_Setpoint_L??BYTE0
	ARRAYREAD?B	_Setpoint_L??BYTE1
	ARRAYREAD?B	_Setpoint_L??BYTE2
	ARRAYREAD?B	_Setpoint_L??BYTE3
	ARRAYREAD?B	_Destination_L??BYTE0
	ARRAYREAD?B	_Destination_L??BYTE1
	ARRAYREAD?B	_Destination_L??BYTE2
	ARRAYREAD?B	_Destination_L??BYTE3
	ARRAYREAD?B	_MinPos_L??BYTE0
	ARRAYREAD?B	_MinPos_L??BYTE1
	ARRAYREAD?B	_MinPos_L??BYTE2
	ARRAYREAD?B	_MinPos_L??BYTE3
	ARRAYREAD?B	_MaxPos_L??BYTE0
	ARRAYREAD?B	_MaxPos_L??BYTE1
	ARRAYREAD?B	_MaxPos_L??BYTE2
	ARRAYREAD?B	_MaxPos_L??BYTE3
	ARRAYREAD?B	_Steps_L??BYTE0
	ARRAYREAD?B	_Steps_L??BYTE1
	ARRAYREAD?B	_Steps_L??BYTE2
	ARRAYREAD?B	_Steps_L??BYTE3
	ARRAYREAD?B	_Rotate_L??BYTE0
	ARRAYREAD?B	_Rotate_L??BYTE1
	ARRAYREAD?B	_Rotate_L??BYTE2
	ARRAYREAD?B	_Rotate_L??BYTE3
	ARRAYREADCOUNT?C	_TimeLength
	ARRAYREADSTR?B	_DoTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00053	Z00272	Return
Z00272
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00056	Z00273	SavePosition:												; save off just the position
Z00273

	LABEL?L	_SavePosition	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00057	Z00274		eeAddress = 0
Z00274
	MOVE?CW	000h, _eeAddress

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00058	Z00275		ArrayWrite	eeBuffer,[Position_L.Byte0,Position_L.Byte1,Position_L.Byte2,Position_L.Byte3]
Z00275
	ARRAYWRITENAME?B	_eeBuffer
	ARRAYWRITE?B	_Position_L??BYTE0
	ARRAYWRITE?B	_Position_L??BYTE1
	ARRAYWRITE?B	_Position_L??BYTE2
	ARRAYWRITE?B	_Position_L??BYTE3

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00059	Z00276		DataLength = 4
Z00276
	MOVE?CB	004h, _DataLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00060	Z00277		I2CWRITE I2Cdata,I2Cclk,eeI2Ctop,eeAddress,[STR eeBuffer \DataLength]
Z00277
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_eeI2Ctop
	I2CWRITE?W	_eeAddress
	I2CCOUNT?B	_DataLength
	I2CWRITESTRS?B	_eeBuffer

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00061	Z00278	Return
Z00278
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00065	Z00279	EEPROM_Done:
Z00279

	LABEL?L	_EEPROM_Done	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\EEPROM.PBP	00067	Z0027A	Enable Interrupt
Z0027A
	IENABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00032	Z0027B	include "Includes\SerialCommunication.pbp"		; handle communication from the PC via the serial port
Z0027B

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00001	Z0027C	Disable Interrupt
Z0027C
	IDISABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00002	Z0027D	goto	Serial_Done							; don't execute subroutines when code is loaded
Z0027D
	GOTO?L	_Serial_Done

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00005	Z0027E	PCrequest:
Z0027E

	LABEL?L	_PCrequest	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00006	Z0027F		hserin [B]							; bring in the byte that caused the interrupt
Z0027F
	HSERIN?B	_B

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00007	Z00280		If B=Query then						; if the expected "?" character,
Z00280
	CMPNE?BCL	_B, _Query, L00053

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00008	Z00281			hserout [Ready]					; communicate that controller is ready to receive the command
Z00281
	HSEROUT?C	_Ready

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00009	Z00282		Else								; if not the expected character
Z00282
	GOTO?L	L00054
	LABEL?L	L00053	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00010	Z00283			hserout ["?",LF]				; communicate that controller is ready to receive the command
Z00283
	HSEROUT?C	03Fh
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00011	Z00284			goto	Leave					; exit		
Z00284
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00012	Z00285		EndIf
Z00285
	LABEL?L	L00054	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00013	Z00286		TempOpMode	=	OpMode
Z00286
	MOVE?BB	_OpMode, _TempOpMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00015	Z00287	ReceiveCommand:
Z00287

	LABEL?L	_ReceiveCommand	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00016	Z00288		CommandLength=0
Z00288
	MOVE?CB	000h, _CommandLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00017	Z00289		for i=0 to BufferLength-1
Z00289
	MOVE?CW	000h, _i
	LABEL?L	L00055	
	CMPGT?WCL	_i, 01Fh, L00056

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00018	Z0028A			hserin 5000,CommandTimeout,[DataBuffer(i)]
Z0028A
	HSERINTIME?C	01388h
	HSERIN?NL	T1, _CommandTimeout
	AIN?BBW	T1, _DataBuffer, _i

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00019	Z0028B			If DataBuffer[0]="$" then 									; receiving a dollar sign is an indication that controller is just being ping
Z0028B
	CMPNE?BCL	_DataBuffer, 024h, L00057

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00020	Z0028C				Number_L = 	Position_L
Z0028C
	MOVE?NN	_Position_L, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00021	Z0028D				gosub		SendNumber_L								; SendNumber_L divides number by C before sending (converts internal step counter to
Z0028D
	GOSUB?L	_SendNumber_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00022	Z0028E				hserout		[LF]										; line feed ends communication sequence
Z0028E
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00023	Z0028F				goto		Leave
Z0028F
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00024	Z00290			EndIf
Z00290
	LABEL?L	L00057	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00025	Z00291			if (DataBuffer[i]=" ")  then ReceiveArgument				; space separates command from arguments
Z00291
	AOUT?BWB	_DataBuffer, _i, T1
	CMPEQ?BCL	T1, 020h, _ReceiveArgument

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00026	Z00292			if (DataBuffer[i]<97 OR DataBuffer[i]>122) then NoArgument	; anything else signifies a termination character
Z00292
	AOUT?BWB	_DataBuffer, _i, T1
	CMPLT?BCB	T1, 061h, T1
	AOUT?BWB	_DataBuffer, _i, T2
	CMPGT?BCB	T2, 07Ah, T2
	LOR?BBL	T1, T2, _NoArgument

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00027	Z00293			CommandBuffer[i] = DataBuffer[i]							; unless it is lower case alphabetic
Z00293
	AOUT?BWB	_DataBuffer, _i, T1
	AIN?BBW	T1, _CommandBuffer, _i

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00028	Z00294			CommandLength = CommandLength+1								; then save it as a command byte and increment the length
Z00294
	ADD?BCB	_CommandLength, 001h, _CommandLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00029	Z00295		next i
Z00295
	NEXT?WCL	_i, 001h, L00055
	LABEL?L	L00056	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00031	Z00296	ReceiveArgument:
Z00296

	LABEL?L	_ReceiveArgument	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00032	Z00297		ArgumentLength=0
Z00297
	MOVE?CB	000h, _ArgumentLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00033	Z00298		hserin 2000,ArgumentTimeout,[B]						; first byte can be special (signify negative)
Z00298
	HSERINTIME?C	007D0h
	HSERIN?BL	_B, _ArgumentTimeout

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00034	Z00299		If B="-" then
Z00299
	CMPNE?BCL	_B, 02Dh, L00059

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00035	Z0029A			Negative = Yes
Z0029A
	MOVE?CB	_Yes, _Negative

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00036	Z0029B			for i=1 to BufferLength-1
Z0029B
	MOVE?CW	001h, _i
	LABEL?L	L00061	
	CMPGT?WCL	_i, 01Fh, L00062

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00037	Z0029C				hserin 5000,ArgumentTimeout,[DataBuffer(i)]
Z0029C
	HSERINTIME?C	01388h
	HSERIN?NL	T1, _ArgumentTimeout
	AIN?BBW	T1, _DataBuffer, _i

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00038	Z0029D				if (DataBuffer[i]<48) OR (DataBuffer[i]>57)  then ArgumentDone	; any non-numeric character signifies end of arg
Z0029D
	AOUT?BWB	_DataBuffer, _i, T1
	CMPLT?BCB	T1, 030h, T1
	AOUT?BWB	_DataBuffer, _i, T2
	CMPGT?BCB	T2, 039h, T2
	LOR?BBL	T1, T2, _ArgumentDone

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00039	Z0029E				ArgumentBuffer[i-1] = DataBuffer[i]
Z0029E
	SUB?WCN	_i, 001h, T2
	AOUT?BWB	_DataBuffer, _i, T1
	AIN?BBN	T1, _ArgumentBuffer, T2

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00040	Z0029F				ArgumentLength = ArgumentLength+1								
Z0029F
	ADD?BCB	_ArgumentLength, 001h, _ArgumentLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00041	Z002A0			next i
Z002A0
	NEXT?WCL	_i, 001h, L00061
	LABEL?L	L00062	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00042	Z002A1		Else
Z002A1
	GOTO?L	L00060
	LABEL?L	L00059	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00043	Z002A2			Negative = No
Z002A2
	MOVE?CB	_No, _Negative

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00044	Z002A3			ArgumentBuffer[0] = B
Z002A3
	MOVE?BB	_B, _ArgumentBuffer

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00045	Z002A4			ArgumentLength = ArgumentLength+1
Z002A4
	ADD?BCB	_ArgumentLength, 001h, _ArgumentLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00046	Z002A5			for i=1 to BufferLength-1
Z002A5
	MOVE?CW	001h, _i
	LABEL?L	L00063	
	CMPGT?WCL	_i, 01Fh, L00064

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00047	Z002A6				hserin 5000,ArgumentTimeout,[DataBuffer(i)]
Z002A6
	HSERINTIME?C	01388h
	HSERIN?NL	T1, _ArgumentTimeout
	AIN?BBW	T1, _DataBuffer, _i

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00048	Z002A7				if (DataBuffer[i]<48) OR (DataBuffer[i]>57)  then ArgumentDone	; any non-numeric character signifies end of arg
Z002A7
	AOUT?BWB	_DataBuffer, _i, T1
	CMPLT?BCB	T1, 030h, T1
	AOUT?BWB	_DataBuffer, _i, T2
	CMPGT?BCB	T2, 039h, T2
	LOR?BBL	T1, T2, _ArgumentDone

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00049	Z002A8				ArgumentBuffer[i] = DataBuffer[i]
Z002A8
	AOUT?BWB	_DataBuffer, _i, T1
	AIN?BBW	T1, _ArgumentBuffer, _i

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00050	Z002A9				ArgumentLength = ArgumentLength+1								
Z002A9
	ADD?BCB	_ArgumentLength, 001h, _ArgumentLength

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00051	Z002AA			next i
Z002AA
	NEXT?WCL	_i, 001h, L00063
	LABEL?L	L00064	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00052	Z002AB		EndIf
Z002AB
	LABEL?L	L00060	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00054	Z002AC	ArgumentDone:
Z002AC

	LABEL?L	_ArgumentDone	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00055	Z002AD		If (ArgumentLength=0) then 
Z002AD
	CMPNE?BCL	_ArgumentLength, 000h, L00065

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00056	Z002AE			hserout	["ERR",CR,"Expected argument",LF]
Z002AE
	HSEROUT?C	045h
	HSEROUT?C	052h
	HSEROUT?C	052h
	HSEROUT?C	_CR
	HSEROUT?C	045h
	HSEROUT?C	078h
	HSEROUT?C	070h
	HSEROUT?C	065h
	HSEROUT?C	063h
	HSEROUT?C	074h
	HSEROUT?C	065h
	HSEROUT?C	064h
	HSEROUT?C	020h
	HSEROUT?C	061h
	HSEROUT?C	072h
	HSEROUT?C	067h
	HSEROUT?C	075h
	HSEROUT?C	06Dh
	HSEROUT?C	065h
	HSEROUT?C	06Eh
	HSEROUT?C	074h
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00057	Z002AF			goto	Leave					; argument not received
Z002AF
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00058	Z002B0		EndIf
Z002B0
	LABEL?L	L00065	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00060	Z002B1	ConvertArgument:
Z002B1

	LABEL?L	_ConvertArgument	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00061	Z002B2		Number_L = 0	
Z002B2
	MOVE?CN	000h, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00062	Z002B3		for i=1 to ArgumentLength
Z002B3
	MOVE?CW	001h, _i
	LABEL?L	L00067	
	CMPGT?WBL	_i, _ArgumentLength, L00068

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00063	Z002B4			Ascii = ArgumentBuffer[ArgumentLength-i]
Z002B4
	SUB?BWN	_ArgumentLength, _i, T1
	AOUT?BNB	_ArgumentBuffer, T1, _Ascii

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00064	Z002B5			gosub	AsciiToDecimal
Z002B5
	GOSUB?L	_AsciiToDecimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00065	Z002B6			Select Case i											; determine magnitude
Z002B6

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00066	Z002B7				Case 1
Z002B7
	CMPNE?WCL	_i, 001h, L00071

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00067	Z002B8					Number_L =  Number_L + Decimal
Z002B8
	ADD?NBN	_Number_L, _Decimal, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00068	Z002B9				Case 2
Z002B9
	GOTO?L	L00070
	LABEL?L	L00071	
	CMPNE?WCL	_i, 002h, L00072

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00069	Z002BA					Number_L = Number_L + 10*Decimal
Z002BA
	MUL?CBN	00Ah, _Decimal, T1
	ADD?NNN	_Number_L, T1, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00070	Z002BB				Case 3
Z002BB
	GOTO?L	L00070
	LABEL?L	L00072	
	CMPNE?WCL	_i, 003h, L00073

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00071	Z002BC					Number_L = Number_L + 100*Decimal
Z002BC
	MUL?CBN	064h, _Decimal, T1
	ADD?NNN	_Number_L, T1, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00072	Z002BD				Case 4
Z002BD
	GOTO?L	L00070
	LABEL?L	L00073	
	CMPNE?WCL	_i, 004h, L00074

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00073	Z002BE					Number_L = Number_L + 1000*Decimal
Z002BE
	MUL?CBN	0000003E8h, _Decimal, T1
	ADD?NNN	_Number_L, T1, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00074	Z002BF				Case 5
Z002BF
	GOTO?L	L00070
	LABEL?L	L00074	
	CMPNE?WCL	_i, 005h, L00075

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00075	Z002C0					Number_L = Number_L + 10000*Decimal
Z002C0
	MUL?CBN	000002710h, _Decimal, T1
	ADD?NNN	_Number_L, T1, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00076	Z002C1				Case 6
Z002C1
	GOTO?L	L00070
	LABEL?L	L00075	
	CMPNE?WCL	_i, 006h, L00076

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00077	Z002C2					Number_L = Number_L + 100000*Decimal
Z002C2
	MUL?CBN	0000186A0h, _Decimal, T1
	ADD?NNN	_Number_L, T1, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00078	Z002C3				Case 7
Z002C3
	GOTO?L	L00070
	LABEL?L	L00076	
	CMPNE?WCL	_i, 007h, L00077

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00079	Z002C4					Number_L = Number_L + 1000000*Decimal
Z002C4
	MUL?CBN	0000F4240h, _Decimal, T1
	ADD?NNN	_Number_L, T1, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00080	Z002C5			End Select
Z002C5
	LABEL?L	L00077	
	LABEL?L	L00070	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00081	Z002C6		next i
Z002C6
	NEXT?WCL	_i, 001h, L00067
	LABEL?L	L00068	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00082	Z002C7		L = abs Number_L
Z002C7
	ABS?NN	_Number_L, _L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00083	Z002C8		If L > 1000000 then 										; exit if more than a million absolute value
Z002C8
	CMPLE?NCL	_L, 0000F4240h, L00078

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00084	Z002C9			hserout	["ERR",CR,"Argument too large",LF]
Z002C9
	HSEROUT?C	045h
	HSEROUT?C	052h
	HSEROUT?C	052h
	HSEROUT?C	_CR
	HSEROUT?C	041h
	HSEROUT?C	072h
	HSEROUT?C	067h
	HSEROUT?C	075h
	HSEROUT?C	06Dh
	HSEROUT?C	065h
	HSEROUT?C	06Eh
	HSEROUT?C	074h
	HSEROUT?C	020h
	HSEROUT?C	074h
	HSEROUT?C	06Fh
	HSEROUT?C	06Fh
	HSEROUT?C	020h
	HSEROUT?C	06Ch
	HSEROUT?C	061h
	HSEROUT?C	072h
	HSEROUT?C	067h
	HSEROUT?C	065h
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00085	Z002CA			goto	Leave
Z002CA
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00086	Z002CB		EndIf
Z002CB
	LABEL?L	L00078	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00087	Z002CC		If Negative = Yes then										; and sign
Z002CC
	CMPNE?BCL	_Negative, _Yes, L00080

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00088	Z002CD			Number_L = -Number_L
Z002CD
	UMINUS?NN	_Number_L, _Number_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00089	Z002CE		EndIf	
Z002CE
	LABEL?L	L00080	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00091	Z002CF		If CommandBuffer[0]="m" AND CommandBuffer[1]="o" AND CommandBuffer[2]="v" and CommandBuffer[3]="e" then	Move
Z002CF
	CMPEQ?BCB	_CommandBuffer, 06Dh, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 076h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 065h, T4
	LAND?NBL	T3, T4, _Move

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00092	Z002D0		If CommandBuffer[0]="g" AND CommandBuffer[1]="o" AND CommandBuffer[2]="t" and CommandBuffer[3]="o" then	Go
Z002D0
	CMPEQ?BCB	_CommandBuffer, 067h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 074h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 06Fh, T4
	LAND?NBL	T3, T4, _Go

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00093	Z002D1		If CommandBuffer[0]="m" AND CommandBuffer[1]="a" AND CommandBuffer[2]="x" and CommandLength=3 then SetMaxPos
Z002D1
	CMPEQ?BCB	_CommandBuffer, 06Dh, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 061h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 078h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandLength, 003h, T4
	LAND?NBL	T3, T4, _SetMaxPos

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00094	Z002D2		If CommandBuffer[0]="m" AND CommandBuffer[1]="i" AND CommandBuffer[2]="n" and CommandLength=3 then SetMinPos
Z002D2
	CMPEQ?BCB	_CommandBuffer, 06Dh, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 069h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 06Eh, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandLength, 003h, T4
	LAND?NBL	T3, T4, _SetMinPos

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00095	Z002D3		If CommandBuffer[0]="d" AND CommandBuffer[1]="e" AND CommandBuffer[2]="l" and CommandBuffer[3]="a" and CommandBuf
Z002D3
	CMPEQ?BCB	_CommandBuffer, 064h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 065h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 06Ch, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 061h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 079h, T5
	LAND?NBL	T4, T5, _SetDelay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00096	Z002D4		If CommandBuffer[0]="r" AND CommandBuffer[1]="o" AND CommandBuffer[2]="t" and CommandBuffer[3]="a" and CommandBuf
Z002D4
	CMPEQ?BCB	_CommandBuffer, 072h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 074h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 061h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 074h, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 065h, T6
	LAND?NBL	T5, T6, _SetRotate

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00097	Z002D5		If CommandBuffer[0]="s" AND CommandBuffer[1]="t" AND CommandBuffer[2]="a" and CommandBuffer[3]="t" and CommandBuf
Z002D5
	CMPEQ?BCB	_CommandBuffer, 073h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 074h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 061h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 074h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 065h, T5
	LAND?NBL	T4, T5, _SetState

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00098	Z002D6		If CommandBuffer[0]="l" AND CommandBuffer[1]="i" AND CommandBuffer[2]="m" and CommandBuffer[3]="i" and CommandBuf
Z002D6
	CMPEQ?BCB	_CommandBuffer, 06Ch, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 069h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 06Dh, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 069h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 074h, T5
	LAND?NBL	T4, T5, _SetAtLimit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00099	Z002D7		If CommandBuffer[0]="s" AND CommandBuffer[1]="t" AND CommandBuffer[2]="e" and CommandBuffer[3]="p" and CommandBuf
Z002D7
	CMPEQ?BCB	_CommandBuffer, 073h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 074h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 065h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 070h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 073h, T5
	LAND?NBL	T4, T5, _SetSteps

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00100	Z002D8		If CommandBuffer[0]="m" AND CommandBuffer[1]="o" AND CommandBuffer[2]="d" and CommandBuffer[3]="e" then	SetMode
Z002D8
	CMPEQ?BCB	_CommandBuffer, 06Dh, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 064h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 065h, T4
	LAND?NBL	T3, T4, _SetMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00101	Z002D9		If CommandBuffer[0]="t" AND CommandBuffer[1]="r" AND CommandBuffer[2]="i" and CommandBuffer[3]="g" and CommandBuf
Z002D9
	CMPEQ?BCB	_CommandBuffer, 074h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 072h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 069h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 067h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 067h, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 065h, T6
	LAND?NBN	T5, T6, T6
	CMPEQ?BCB	_CommandBuffer + 00006h, 072h, T7
	LAND?NBN	T6, T7, T7
	CMPEQ?BCB	_CommandBuffer + 00007h, 073h, T8
	LAND?NBL	T7, T8, _SetTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00102	Z002DA		If CommandBuffer[0]="g" AND CommandBuffer[1]="o" AND CommandBuffer[2]="a" and CommandBuffer[3]="l" then SetDestin
Z002DA
	CMPEQ?BCB	_CommandBuffer, 067h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 061h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 06Ch, T4
	LAND?NBL	T3, T4, _SetDestination

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00103	Z002DB		If CommandBuffer[0]="h" AND CommandBuffer[1]="o" AND CommandBuffer[2]="u" and CommandBuffer[3]="r" and CommandBuf
Z002DB
	CMPEQ?BCB	_CommandBuffer, 068h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 075h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 072h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 073h, T5
	LAND?NBL	T4, T5, _ChangeHours

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00104	Z002DC		If CommandBuffer[0]="m" AND CommandBuffer[1]="i" AND CommandBuffer[2]="n" and CommandBuffer[3]="u" and CommandBuf
Z002DC
	CMPEQ?BCB	_CommandBuffer, 06Dh, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 069h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 06Eh, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 075h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 074h, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 065h, T6
	LAND?NBN	T5, T6, T6
	CMPEQ?BCB	_CommandBuffer + 00006h, 073h, T7
	LAND?NBL	T6, T7, _ChangeMinutes

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00105	Z002DD		If CommandBuffer[0]="s" AND CommandBuffer[1]="e" AND CommandBuffer[2]="c" and CommandBuffer[3]="o" and CommandBuf
Z002DD
	CMPEQ?BCB	_CommandBuffer, 073h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 065h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 063h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 06Fh, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 06Eh, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 064h, T6
	LAND?NBN	T5, T6, T6
	CMPEQ?BCB	_CommandBuffer + 00006h, 073h, T7
	LAND?NBL	T6, T7, _ChangeSeconds

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00106	Z002DE		If CommandBuffer[0]="d" AND CommandBuffer[1]="o" AND CommandBuffer[2]="h" and CommandBuffer[3]="o" and CommandBuf
Z002DE
	CMPEQ?BCB	_CommandBuffer, 064h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 068h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 06Fh, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 075h, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 072h, T6
	LAND?NBN	T5, T6, T6
	CMPEQ?BCB	_CommandBuffer + 00006h, 073h, T7
	LAND?NBL	T6, T7, _ChangeDoHours

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00107	Z002DF		If CommandBuffer[0]="m" AND CommandBuffer[1]="a" AND CommandBuffer[2]="t" and CommandBuffer[3]="c" and CommandBuf
Z002DF
	CMPEQ?BCB	_CommandBuffer, 06Dh, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 061h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 074h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 063h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 068h, T5
	LAND?NBL	T4, T5, _ChangeTimeMatch

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00108	Z002E0		If CommandBuffer[0]="d" AND CommandBuffer[1]="o" AND CommandBuffer[2]="m" and CommandBuffer[3]="i" and CommandBuf
Z002E0
	CMPEQ?BCB	_CommandBuffer, 064h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 06Dh, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 069h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 06Eh, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 075h, T6
	LAND?NBN	T5, T6, T6
	CMPEQ?BCB	_CommandBuffer + 00006h, 074h, T7
	LAND?NBN	T6, T7, T7
	CMPEQ?BCB	_CommandBuffer + 00007h, 065h, T8
	LAND?NBN	T7, T8, T8
	CMPEQ?BCB	_CommandBuffer + 00008h, 073h, T9
	LAND?NBL	T8, T9, _ChangeDoMinutes

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00109	Z002E1		If CommandBuffer[0]="d" AND CommandBuffer[1]="o" AND CommandBuffer[2]="s" and CommandBuffer[3]="e" and CommandBuf
Z002E1
	CMPEQ?BCB	_CommandBuffer, 064h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 073h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 065h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 063h, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 06Fh, T6
	LAND?NBN	T5, T6, T6
	CMPEQ?BCB	_CommandBuffer + 00006h, 06Eh, T7
	LAND?NBN	T6, T7, T7
	CMPEQ?BCB	_CommandBuffer + 00007h, 064h, T8
	LAND?NBN	T7, T8, T8
	CMPEQ?BCB	_CommandBuffer + 00008h, 073h, T9
	LAND?NBL	T8, T9, _ChangeDoSeconds

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00110	Z002E2		If CommandBuffer[0]="f" AND CommandBuffer[1]="e" AND CommandBuffer[2]="e" and CommandBuffer[3]="d" and CommandBuf
Z002E2
	CMPEQ?BCB	_CommandBuffer, 066h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 065h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 065h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 064h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 062h, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 061h, T6
	LAND?NBN	T5, T6, T6
	CMPEQ?BCB	_CommandBuffer + 00006h, 063h, T7
	LAND?NBN	T6, T7, T7
	CMPEQ?BCB	_CommandBuffer + 00007h, 06Bh, T8
	LAND?NBL	T7, T8, _SetFeedback

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00111	Z002E3	    If CommandBuffer[0]="s" AND CommandBuffer[1]="t" AND CommandBuffer[2]="y" and CommandBuffer[3]="l" and Command
Z002E3
	CMPEQ?BCB	_CommandBuffer, 073h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 074h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 079h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 06Ch, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 065h, T5
	LAND?NBL	T4, T5, _SetStepStyle

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00113	Z002E4		hserout	["ERR",CR,"Command ",STR CommandBuffer \CommandLength," not valid",CR]		; command with arguments not unde
Z002E4
	HSEROUT?C	045h
	HSEROUT?C	052h
	HSEROUT?C	052h
	HSEROUT?C	_CR
	HSEROUT?C	043h
	HSEROUT?C	06Fh
	HSEROUT?C	06Dh
	HSEROUT?C	06Dh
	HSEROUT?C	061h
	HSEROUT?C	06Eh
	HSEROUT?C	064h
	HSEROUT?C	020h
	HSEROUTCOUNT?B	_CommandLength
	HSEROUTSTRN?B	_CommandBuffer
	HSEROUT?C	020h
	HSEROUT?C	06Eh
	HSEROUT?C	06Fh
	HSEROUT?C	074h
	HSEROUT?C	020h
	HSEROUT?C	076h
	HSEROUT?C	061h
	HSEROUT?C	06Ch
	HSEROUT?C	069h
	HSEROUT?C	064h
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00114	Z002E5		goto	Leave					
Z002E5
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00116	Z002E6	NoArgument:
Z002E6

	LABEL?L	_NoArgument	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00117	Z002E7		If CommandBuffer[0]="d" AND CommandBuffer[1]="e" AND CommandBuffer[2]="f" and CommandBuffer[3]="a" and CommandBuf
Z002E7
	CMPEQ?BCB	_CommandBuffer, 064h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 065h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 066h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 061h, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 075h, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 06Ch, T6
	LAND?NBN	T5, T6, T6
	CMPEQ?BCB	_CommandBuffer + 00006h, 074h, T7
	LAND?NBL	T6, T7, _RestoreDefaults

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00118	Z002E8		If CommandBuffer[0]="r" AND CommandBuffer[1]="e" AND CommandBuffer[2]="p" and CommandBuffer[3]="o" and CommandBuf
Z002E8
	CMPEQ?BCB	_CommandBuffer, 072h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 065h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 070h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 06Fh, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 072h, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 074h, T6
	LAND?NBL	T5, T6, _SendReport

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00119	Z002E9		If CommandBuffer[0]="r" AND CommandBuffer[1]="e" AND CommandBuffer[2]="b" and CommandBuffer[3]="o" and CommandBuf
Z002E9
	CMPEQ?BCB	_CommandBuffer, 072h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 065h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 062h, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 06Fh, T4
	LAND?NBN	T3, T4, T4
	CMPEQ?BCB	_CommandBuffer + 00004h, 06Fh, T5
	LAND?NBN	T4, T5, T5
	CMPEQ?BCB	_CommandBuffer + 00005h, 074h, T6
	LAND?NBL	T5, T6, _Reboot

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00120	Z002EA		If CommandBuffer[0]="h" AND CommandBuffer[1]="o" AND CommandBuffer[2]="m" and CommandBuffer[3]="e" then	SetAsHome
Z002EA
	CMPEQ?BCB	_CommandBuffer, 068h, T1
	CMPEQ?BCB	_CommandBuffer + 00001h, 06Fh, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BCB	_CommandBuffer + 00002h, 06Dh, T3
	LAND?NBN	T2, T3, T3
	CMPEQ?BCB	_CommandBuffer + 00003h, 065h, T4
	LAND?NBL	T3, T4, _SetAsHome

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00122	Z002EB		hserout	["ERR",CR,"Command ",STR CommandBuffer \CommandLength," not valid",LF]		; command without arguments not u
Z002EB
	HSEROUT?C	045h
	HSEROUT?C	052h
	HSEROUT?C	052h
	HSEROUT?C	_CR
	HSEROUT?C	043h
	HSEROUT?C	06Fh
	HSEROUT?C	06Dh
	HSEROUT?C	06Dh
	HSEROUT?C	061h
	HSEROUT?C	06Eh
	HSEROUT?C	064h
	HSEROUT?C	020h
	HSEROUTCOUNT?B	_CommandLength
	HSEROUTSTRN?B	_CommandBuffer
	HSEROUT?C	020h
	HSEROUT?C	06Eh
	HSEROUT?C	06Fh
	HSEROUT?C	074h
	HSEROUT?C	020h
	HSEROUT?C	076h
	HSEROUT?C	061h
	HSEROUT?C	06Ch
	HSEROUT?C	069h
	HSEROUT?C	064h
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00123	Z002EC		goto		Leave		; only get here if a command without argument was not understood
Z002EC
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00126	Z002ED	SendNumber_L:
Z002ED

	LABEL?L	_SendNumber_L	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00127	Z002EE		L = Number_L/C				; scale to be in motor steps instead of internal counts
Z002EE
	DIV?NCN	_Number_L, _C, _L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00128	Z002EF		hserout [Sdec L,CR]
Z002EF
	HSEROUTCOUNT?C	000h
	HSEROUTSNUM?N	_L
	HSEROUTSDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00129	Z002F0	Return
Z002F0
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00132	Z002F1	Reboot:
Z002F1

	LABEL?L	_Reboot	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00133	Z002F2		gosub		SendAOK
Z002F2
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00134	Z002F3		hserout		[CR,LF]
Z002F3
	HSEROUT?C	_CR
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00135	Z002F4	@ reset
Z002F4

	ASM?
 reset

	ENDASM?


; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00138	Z002F5	RestoreDefaults:
Z002F5

	LABEL?L	_RestoreDefaults	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00139	Z002F6		gosub		SetValuesToDefault
Z002F6
	GOSUB?L	_SetValuesToDefault

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00140	Z002F7		TempOpMode = OpMode+1				; pretend the opmode has changed to trigger a return to main
Z002F7
	ADD?BCB	_OpMode, 001h, _TempOpMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00141	Z002F8		goto		TaskCleanup
Z002F8
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00144	Z002F9	SetStepStyle:
Z002F9

	LABEL?L	_SetStepStyle	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00145	Z002FA	    If Number_L<0 OR Number_L>HalfStep then ArgumentError
Z002FA
	CMPLT?NCB	_Number_L, 000h, T1
	CMPGT?NCB	_Number_L, _HalfStep, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00146	Z002FB	    StepStyle=Number_L
Z002FB
	MOVE?NB	_Number_L, _StepStyle

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00147	Z002FC	    gosub       ConfigureMotor
Z002FC
	GOSUB?L	_ConfigureMotor

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00148	Z002FD	    goto        TaskCleanup
Z002FD
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00151	Z002FE	SetMaxPos:
Z002FE

	LABEL?L	_SetMaxPos	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00152	Z002FF		L = C*Number_L
Z002FF
	MUL?CNN	_C, _Number_L, _L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00153	Z00300		If L < Position_L OR L < MinPos_L then ArgumentError				; don't let user set the maximum position below where the
Z00300
	CMPLT?NNB	_L, _Position_L, T1
	CMPLT?NNB	_L, _MinPos_L, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00154	Z00301		MaxPos_L = 	L														; user deals in steps, controller in counts (16 counts/step)
Z00301
	MOVE?NN	_L, _MaxPos_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00155	Z00302		goto		TaskCleanup
Z00302
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00158	Z00303	SetMinPos:
Z00303

	LABEL?L	_SetMinPos	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00159	Z00304		L = C*Number_L
Z00304
	MUL?CNN	_C, _Number_L, _L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00160	Z00305		If L > Position_L  OR L > MaxPos_L then ArgumentError				; don't let user set the minimum position above where th
Z00305
	CMPGT?NNB	_L, _Position_L, T1
	CMPGT?NNB	_L, _MaxPos_L, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00161	Z00306		MinPos_L = 	L
Z00306
	MOVE?NN	_L, _MinPos_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00162	Z00307		goto		TaskCleanup
Z00307
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00165	Z00308	SetRotate:
Z00308

	LABEL?L	_SetRotate	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00166	Z00309		If (Number_L!=-1) AND (Number_L!=1) then ArgumentError
Z00309
	CMPNE?NCB	_Number_L, 0FFFFFFFFh, T1
	CMPNE?NCB	_Number_L, 001h, T2
	LAND?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00167	Z0030A		Rotate_L =	Number_L
Z0030A
	MOVE?NN	_Number_L, _Rotate_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00168	Z0030B		goto		TaskCleanup
Z0030B
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00171	Z0030C	SetState:
Z0030C

	LABEL?L	_SetState	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00172	Z0030D		If (Number_L!=0) AND (Number_L!=1) then ArgumentError
Z0030D
	CMPNE?NCB	_Number_L, 000h, T1
	CMPNE?NCB	_Number_L, 001h, T2
	LAND?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00173	Z0030E		State =	Number_L
Z0030E
	MOVE?NT	_Number_L, _State

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00174	Z0030F		goto		TaskCleanup
Z0030F
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00177	Z00310	SetAtLimit:
Z00310

	LABEL?L	_SetAtLimit	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00178	Z00311		If (Number_L!=0) AND (Number_L!=1) then ArgumentError	; 0 for do nothing, 1 for switch direction
Z00311
	CMPNE?NCB	_Number_L, 000h, T1
	CMPNE?NCB	_Number_L, 001h, T2
	LAND?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00179	Z00312		AtLimit =	Number_L
Z00312
	MOVE?NB	_Number_L, _AtLimit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00180	Z00313		goto		TaskCleanup
Z00313
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00183	Z00314	SetSteps:
Z00314

	LABEL?L	_SetSteps	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00184	Z00315		Steps_L	=	C*Number_L
Z00315
	MUL?CNN	_C, _Number_L, _Steps_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00185	Z00316		goto		TaskCleanup
Z00316
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00188	Z00317	SendReport:
Z00317

	LABEL?L	_SendReport	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00189	Z00318		gosub		ReadRTC
Z00318
	GOSUB?L	_ReadRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00190	Z00319		hserout		["firmware=",STR Firmware \FirmwareLength,CR]	
Z00319
	HSEROUT?C	066h
	HSEROUT?C	069h
	HSEROUT?C	072h
	HSEROUT?C	06Dh
	HSEROUT?C	077h
	HSEROUT?C	061h
	HSEROUT?C	072h
	HSEROUT?C	065h
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	_FirmwareLength
	HSEROUTSTRN?B	_Firmware
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00191	Z0031A		hserout 	["drive=",#EnableDrive,CR]				; motor on/off
Z0031A
	HSEROUT?C	064h
	HSEROUT?C	072h
	HSEROUT?C	069h
	HSEROUT?C	076h
	HSEROUT?C	065h
	HSEROUT?C	03Dh
	HSEROUTD?T	_EnableDrive
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00192	Z0031B		hserout 	["mode=",#OpMode,CR]					; operation mode
Z0031B
	HSEROUT?C	06Dh
	HSEROUT?C	06Fh
	HSEROUT?C	064h
	HSEROUT?C	065h
	HSEROUT?C	03Dh
	HSEROUTD?B	_OpMode
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00193	Z0031C		hserout 	["feedback=",#FeedbackOn,CR]			; feedback enabled?
Z0031C
	HSEROUT?C	066h
	HSEROUT?C	065h
	HSEROUT?C	065h
	HSEROUT?C	064h
	HSEROUT?C	062h
	HSEROUT?C	061h
	HSEROUT?C	063h
	HSEROUT?C	06Bh
	HSEROUT?C	03Dh
	HSEROUTD?B	_FeedbackOn
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00194	Z0031D		hserout 	["delay=",#Delay_W,CR]					; delay between steps
Z0031D
	HSEROUT?C	064h
	HSEROUT?C	065h
	HSEROUT?C	06Ch
	HSEROUT?C	061h
	HSEROUT?C	079h
	HSEROUT?C	03Dh
	HSEROUTD?W	_Delay_W
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00195	Z0031E		hserout 	["position=",Sdec Position_L/C,CR]		; current position (where the controller thinks the motor is)
Z0031E
	HSEROUT?C	070h
	HSEROUT?C	06Fh
	HSEROUT?C	073h
	HSEROUT?C	069h
	HSEROUT?C	074h
	HSEROUT?C	069h
	HSEROUT?C	06Fh
	HSEROUT?C	06Eh
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	000h
	DIV?NCN	_Position_L, _C, T1
	HSEROUTSNUM?N	T1
	HSEROUTSDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00196	Z0031F		hserout 	["setpoint=",Sdec Setpoint_L/C,CR]		; current setpoint, where the controller thinks the motor should be
Z0031F
	HSEROUT?C	073h
	HSEROUT?C	065h
	HSEROUT?C	074h
	HSEROUT?C	070h
	HSEROUT?C	06Fh
	HSEROUT?C	069h
	HSEROUT?C	06Eh
	HSEROUT?C	074h
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	000h
	DIV?NCN	_Setpoint_L, _C, T1
	HSEROUTSNUM?N	T1
	HSEROUTSDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00197	Z00320		hserout 	["minpos=",Sdec MinPos_L/C,CR]			; minimum position
Z00320
	HSEROUT?C	06Dh
	HSEROUT?C	069h
	HSEROUT?C	06Eh
	HSEROUT?C	070h
	HSEROUT?C	06Fh
	HSEROUT?C	073h
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	000h
	DIV?NCN	_MinPos_L, _C, T1
	HSEROUTSNUM?N	T1
	HSEROUTSDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00198	Z00321		hserout 	["maxpos=",Sdec MaxPos_L/C,CR]			; maximum position
Z00321
	HSEROUT?C	06Dh
	HSEROUT?C	061h
	HSEROUT?C	078h
	HSEROUT?C	070h
	HSEROUT?C	06Fh
	HSEROUT?C	073h
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	000h
	DIV?NCN	_MaxPos_L, _C, T1
	HSEROUTSNUM?N	T1
	HSEROUTSDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00199	Z00322		hserout 	["limit=",#Limit,CR]					; currently at limit of allowed range?
Z00322
	HSEROUT?C	06Ch
	HSEROUT?C	069h
	HSEROUT?C	06Dh
	HSEROUT?C	069h
	HSEROUT?C	074h
	HSEROUT?C	03Dh
	HSEROUTD?T	_Limit
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00200	Z00323		hserout 	["goal=",Sdec Destination_L/C,CR]		; current destination, destination for the operation
Z00323
	HSEROUT?C	067h
	HSEROUT?C	06Fh
	HSEROUT?C	061h
	HSEROUT?C	06Ch
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	000h
	DIV?NCN	_Destination_L, _C, T1
	HSEROUTSNUM?N	T1
	HSEROUTSDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00201	Z00324		hserout 	["steps=",Sdec Steps_L/C,CR]			; steps to take
Z00324
	HSEROUT?C	073h
	HSEROUT?C	074h
	HSEROUT?C	065h
	HSEROUT?C	070h
	HSEROUT?C	073h
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	000h
	DIV?NCN	_Steps_L, _C, T1
	HSEROUTSNUM?N	T1
	HSEROUTSDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00202	Z00325		hserout 	["triggers=",#DoTriggers_W,CR]			; triggers before action
Z00325
	HSEROUT?C	074h
	HSEROUT?C	072h
	HSEROUT?C	069h
	HSEROUT?C	067h
	HSEROUT?C	067h
	HSEROUT?C	065h
	HSEROUT?C	072h
	HSEROUT?C	073h
	HSEROUT?C	03Dh
	HSEROUTD?W	_DoTriggers_W
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00203	Z00326		hserout 	["time=",dec2 Time(Hours),":",dec2 Time(Minutes),":",dec2 Time(Seconds),CR]			; cuurent time (hours:minu
Z00326
	HSEROUT?C	074h
	HSEROUT?C	069h
	HSEROUT?C	06Dh
	HSEROUT?C	065h
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	002h
	HSEROUTNUM?B	_Time + 00002h
	HSEROUTDEC?	
	HSEROUT?C	03Ah
	HSEROUTCOUNT?C	002h
	HSEROUTNUM?B	_Time + 00001h
	HSEROUTDEC?	
	HSEROUT?C	03Ah
	HSEROUTCOUNT?C	002h
	HSEROUTNUM?B	_Time
	HSEROUTDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00204	Z00327		hserout 	["dotime=",dec2 DoTime(Hours),":",dec2 DoTime(Minutes),":",dec2 DoTime(Seconds),CR]		; action time (hour
Z00327
	HSEROUT?C	064h
	HSEROUT?C	06Fh
	HSEROUT?C	074h
	HSEROUT?C	069h
	HSEROUT?C	06Dh
	HSEROUT?C	065h
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	002h
	HSEROUTNUM?B	_DoTime + 00002h
	HSEROUTDEC?	
	HSEROUT?C	03Ah
	HSEROUTCOUNT?C	002h
	HSEROUTNUM?B	_DoTime + 00001h
	HSEROUTDEC?	
	HSEROUT?C	03Ah
	HSEROUTCOUNT?C	002h
	HSEROUTNUM?B	_DoTime
	HSEROUTDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00205	Z00328		hserout 	["match=",#TimeMatch,CR]				; type of time match (0 = seconds, 1 = seconds + minutes, 2 = seconds + minu
Z00328
	HSEROUT?C	06Dh
	HSEROUT?C	061h
	HSEROUT?C	074h
	HSEROUT?C	063h
	HSEROUT?C	068h
	HSEROUT?C	03Dh
	HSEROUTD?B	_TimeMatch
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00206	Z00329		hserout 	["rotate=",Sdec Rotate_L,CR]			; +1 or -1
Z00329
	HSEROUT?C	072h
	HSEROUT?C	06Fh
	HSEROUT?C	074h
	HSEROUT?C	061h
	HSEROUT?C	074h
	HSEROUT?C	065h
	HSEROUT?C	03Dh
	HSEROUTCOUNT?C	000h
	HSEROUTSNUM?N	_Rotate_L
	HSEROUTSDEC?	
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00207	Z0032A		hserout 	["atlimit=",#AtLimit,CR]				; behavior at limit (0=nothing, 1=reverse, move and rotate modes only)
Z0032A
	HSEROUT?C	061h
	HSEROUT?C	074h
	HSEROUT?C	06Ch
	HSEROUT?C	069h
	HSEROUT?C	06Dh
	HSEROUT?C	069h
	HSEROUT?C	074h
	HSEROUT?C	03Dh
	HSEROUTD?B	_AtLimit
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00208	Z0032B		hserout 	["step style=",#StepStyle,CR]			; behavior when input is low
Z0032B
	HSEROUT?C	073h
	HSEROUT?C	074h
	HSEROUT?C	065h
	HSEROUT?C	070h
	HSEROUT?C	020h
	HSEROUT?C	073h
	HSEROUT?C	074h
	HSEROUT?C	079h
	HSEROUT?C	06Ch
	HSEROUT?C	065h
	HSEROUT?C	03Dh
	HSEROUTD?B	_StepStyle
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00209	Z0032C		goto		TaskCleanup
Z0032C
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00212	Z0032D	SendCR:
Z0032D

	LABEL?L	_SendCR	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00213	Z0032E		hserout [CR]
Z0032E
	HSEROUT?C	_CR

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00214	Z0032F	Return
Z0032F
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00217	Z00330	Move:
Z00330

	LABEL?L	_Move	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00218	Z00331	    If (Position_L+C*Number_L < MinPos_L) OR (Position_L+C*Number_L > MaxPos_L) then ArgumentError
Z00331
	MUL?CNN	_C, _Number_L, T1
	ADD?NNN	_Position_L, T1, T1
	CMPLT?NNB	T1, _MinPos_L, T1
	MUL?CNN	_C, _Number_L, T2
	ADD?NNN	_Position_L, T2, T2
	CMPGT?NNB	T2, _MaxPos_L, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00219	Z00332		Setpoint_L = 	Setpoint_L + C*Number_L					; scale to get in counts rather than motor steps
Z00332
	MUL?CNN	_C, _Number_L, T1
	ADD?NNN	_Setpoint_L, T1, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00220	Z00333		gosub		SendAOK										; send AOK before doing the move (could take awhile)
Z00333
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00221	Z00334		gosub		CorrectPosition
Z00334
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00222	Z00335		goto		TaskCleanup
Z00335
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00225	Z00336	Go:
Z00336

	LABEL?L	_Go	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00226	Z00337	    If (C*Number_L<MinPos_L) OR (C*Number_L>MaxPos_L) then ArgumentError
Z00337
	MUL?CNN	_C, _Number_L, T1
	CMPLT?NNB	T1, _MinPos_L, T1
	MUL?CNN	_C, _Number_L, T2
	CMPGT?NNB	T2, _MaxPos_L, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00227	Z00338		Setpoint_L = C*Number_L			; scale to get in counts rather than motor steps
Z00338
	MUL?CNN	_C, _Number_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00228	Z00339		gosub		SendAOK				; send AOK before doing the goto (could take awhile)
Z00339
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00229	Z0033A		gosub		CorrectPosition
Z0033A
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00230	Z0033B		goto		TaskCleanup
Z0033B
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00232	Z0033C	SetDelay:
Z0033C

	LABEL?L	_SetDelay	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00233	Z0033D		If (Number_L < MinDelay) then ArgumentError
Z0033D
	CMPLT?NCL	_Number_L, _MinDelay, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00234	Z0033E		Delay_W = 	Number_L
Z0033E
	MOVE?NW	_Number_L, _Delay_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00235	Z0033F		gosub		SendAOK
Z0033F
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00236	Z00340		goto		TaskCleanup
Z00340
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00238	Z00341	SetMode:
Z00341

	LABEL?L	_SetMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00239	Z00342		If (Number_L>StateShutter) OR (Number_L<0) then ArgumentError
Z00342
	CMPGT?NCB	_Number_L, _StateShutter, T1
	CMPLT?NCB	_Number_L, 000h, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00240	Z00343		OpMode = 	Number_L
Z00343
	MOVE?NB	_Number_L, _OpMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00241	Z00344		Setpoint_L = Position_L									; make position error zero when changing operation modes
Z00344
	MOVE?NN	_Position_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00242	Z00345		gosub		SendAOK
Z00345
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00243	Z00346		goto		TaskCleanup
Z00346
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00245	Z00347	SetAsHome:
Z00347

	LABEL?L	_SetAsHome	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00246	Z00348		Position_L = 0
Z00348
	MOVE?CN	000h, _Position_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00247	Z00349		Setpoint_L = 0
Z00349
	MOVE?CN	000h, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00248	Z0034A		gosub		SendAOK
Z0034A
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00249	Z0034B		goto		TaskCleanup
Z0034B
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00251	Z0034C	SetTriggers:
Z0034C

	LABEL?L	_SetTriggers	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00252	Z0034D		If (Number_L<1) OR (Number_L>10000) then ArgumentError
Z0034D
	CMPLT?NCB	_Number_L, 001h, T1
	CMPGT?NCB	_Number_L, 000002710h, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00253	Z0034E		DoTriggers_W = Number_L
Z0034E
	MOVE?NW	_Number_L, _DoTriggers_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00254	Z0034F		gosub		SendAOK
Z0034F
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00255	Z00350		goto		TaskCleanup
Z00350
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00257	Z00351	SetDestination:
Z00351

	LABEL?L	_SetDestination	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00258	Z00352		Destination_L =	C*Number_L
Z00352
	MUL?CNN	_C, _Number_L, _Destination_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00259	Z00353		gosub		SendAOK
Z00353
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00260	Z00354		goto		TaskCleanup
Z00354
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00262	Z00355	SetFeedback:
Z00355

	LABEL?L	_SetFeedback	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00263	Z00356		If (Number_L!=0) AND (Number_L!=1) then ArgumentError
Z00356
	CMPNE?NCB	_Number_L, 000h, T1
	CMPNE?NCB	_Number_L, 001h, T2
	LAND?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00264	Z00357		If (Number_L!=0) AND (OpMode = StateRotate) then ArgumentError
Z00357
	CMPNE?NCB	_Number_L, 000h, T1
	CMPEQ?BCB	_OpMode, _StateRotate, T2
	LAND?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00265	Z00358		gosub		ResetCounter
Z00358
	GOSUB?L	_ResetCounter

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00266	Z00359		FeedbackOn = Number_L
Z00359
	MOVE?NB	_Number_L, _FeedbackOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00267	Z0035A		gosub		SendAOK
Z0035A
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00268	Z0035B		goto		TaskCleanup
Z0035B
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00270	Z0035C	ChangeHours:
Z0035C

	LABEL?L	_ChangeHours	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00271	Z0035D		If (Number_L>23) OR (Number_L<0) then ArgumentError
Z0035D
	CMPGT?NCB	_Number_L, 017h, T1
	CMPLT?NCB	_Number_L, 000h, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00272	Z0035E		gosub		ReadRTC
Z0035E
	GOSUB?L	_ReadRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00273	Z0035F		Time[Hours] = Number_L
Z0035F
	MOVE?NB	_Number_L, _Time + 00002h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00274	Z00360		gosub		UpdateRTC
Z00360
	GOSUB?L	_UpdateRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00275	Z00361		gosub		SendAOK
Z00361
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00276	Z00362		goto		TaskCleanup
Z00362
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00278	Z00363	ChangeMinutes:
Z00363

	LABEL?L	_ChangeMinutes	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00279	Z00364		If (Number_L>59) OR (Number_L<0) then ArgumentError
Z00364
	CMPGT?NCB	_Number_L, 03Bh, T1
	CMPLT?NCB	_Number_L, 000h, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00280	Z00365		gosub		ReadRTC
Z00365
	GOSUB?L	_ReadRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00281	Z00366		Time[Minutes] = Number_L
Z00366
	MOVE?NB	_Number_L, _Time + 00001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00282	Z00367		gosub		UpdateRTC
Z00367
	GOSUB?L	_UpdateRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00283	Z00368		gosub		SendAOK
Z00368
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00284	Z00369		goto		TaskCleanup
Z00369
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00286	Z0036A	ChangeSeconds:
Z0036A

	LABEL?L	_ChangeSeconds	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00287	Z0036B		If (Number_L>59) OR (Number_L<0) then ArgumentError
Z0036B
	CMPGT?NCB	_Number_L, 03Bh, T1
	CMPLT?NCB	_Number_L, 000h, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00288	Z0036C		gosub		ReadRTC
Z0036C
	GOSUB?L	_ReadRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00289	Z0036D		Time[Seconds] = Number_L
Z0036D
	MOVE?NB	_Number_L, _Time

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00290	Z0036E		gosub		UpdateRTC
Z0036E
	GOSUB?L	_UpdateRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00291	Z0036F		gosub		SendAOK
Z0036F
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00292	Z00370		goto		TaskCleanup
Z00370
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00294	Z00371	ChangeDoHours:
Z00371

	LABEL?L	_ChangeDoHours	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00295	Z00372		If (Number_L>23) OR (Number_L<0) then ArgumentError
Z00372
	CMPGT?NCB	_Number_L, 017h, T1
	CMPLT?NCB	_Number_L, 000h, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00296	Z00373		DoTime[Hours] = Number_L
Z00373
	MOVE?NB	_Number_L, _DoTime + 00002h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00297	Z00374		gosub		SendAOK
Z00374
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00298	Z00375		goto		TaskCleanup
Z00375
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00300	Z00376	ChangeTimeMatch:
Z00376

	LABEL?L	_ChangeTimeMatch	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00301	Z00377		If Number_L>SecsMinsHrs then ArgumentError
Z00377
	CMPGT?NCL	_Number_L, _SecsMinsHrs, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00302	Z00378		TimeMatch = Number_L
Z00378
	MOVE?NB	_Number_L, _TimeMatch

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00303	Z00379		gosub		SendAOK
Z00379
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00304	Z0037A		goto		TaskCleanup
Z0037A
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00306	Z0037B	ChangeDoMinutes:
Z0037B

	LABEL?L	_ChangeDoMinutes	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00307	Z0037C		If (Number_L>59) OR (Number_L<0) then ArgumentError
Z0037C
	CMPGT?NCB	_Number_L, 03Bh, T1
	CMPLT?NCB	_Number_L, 000h, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00308	Z0037D		DoTime[Minutes] = Number_L
Z0037D
	MOVE?NB	_Number_L, _DoTime + 00001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00309	Z0037E		gosub		SendAOK
Z0037E
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00310	Z0037F		goto		TaskCleanup
Z0037F
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00312	Z00380	ChangeDoSeconds:
Z00380

	LABEL?L	_ChangeDoSeconds	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00313	Z00381		If (Number_L>59) OR (Number_L<0) then ArgumentError
Z00381
	CMPGT?NCB	_Number_L, 03Bh, T1
	CMPLT?NCB	_Number_L, 000h, T2
	LOR?BBL	T1, T2, _ArgumentError

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00314	Z00382		DoTime[Seconds] = Number_L
Z00382
	MOVE?NB	_Number_L, _DoTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00315	Z00383		gosub		SendAOK
Z00383
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00316	Z00384		goto		TaskCleanup
Z00384
	GOTO?L	_TaskCleanup

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00318	Z00385	ArgumentError:
Z00385

	LABEL?L	_ArgumentError	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00319	Z00386		hserout ["ERR",CR,"Argument out of range",LF]
Z00386
	HSEROUT?C	045h
	HSEROUT?C	052h
	HSEROUT?C	052h
	HSEROUT?C	_CR
	HSEROUT?C	041h
	HSEROUT?C	072h
	HSEROUT?C	067h
	HSEROUT?C	075h
	HSEROUT?C	06Dh
	HSEROUT?C	065h
	HSEROUT?C	06Eh
	HSEROUT?C	074h
	HSEROUT?C	020h
	HSEROUT?C	06Fh
	HSEROUT?C	075h
	HSEROUT?C	074h
	HSEROUT?C	020h
	HSEROUT?C	06Fh
	HSEROUT?C	066h
	HSEROUT?C	020h
	HSEROUT?C	072h
	HSEROUT?C	061h
	HSEROUT?C	06Eh
	HSEROUT?C	067h
	HSEROUT?C	065h
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00320	Z00387		goto	Leave
Z00387
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00322	Z00388	CommandTimeout:
Z00388

	LABEL?L	_CommandTimeout	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00323	Z00389		hserout ["ERR",CR,"Command Timeout",LF]
Z00389
	HSEROUT?C	045h
	HSEROUT?C	052h
	HSEROUT?C	052h
	HSEROUT?C	_CR
	HSEROUT?C	043h
	HSEROUT?C	06Fh
	HSEROUT?C	06Dh
	HSEROUT?C	06Dh
	HSEROUT?C	061h
	HSEROUT?C	06Eh
	HSEROUT?C	064h
	HSEROUT?C	020h
	HSEROUT?C	054h
	HSEROUT?C	069h
	HSEROUT?C	06Dh
	HSEROUT?C	065h
	HSEROUT?C	06Fh
	HSEROUT?C	075h
	HSEROUT?C	074h
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00324	Z0038A		goto	Leave
Z0038A
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00326	Z0038B	ArgumentTimeout:
Z0038B

	LABEL?L	_ArgumentTimeout	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00327	Z0038C		hserout ["ERR",CR,"Argument Timeout",LF]
Z0038C
	HSEROUT?C	045h
	HSEROUT?C	052h
	HSEROUT?C	052h
	HSEROUT?C	_CR
	HSEROUT?C	041h
	HSEROUT?C	072h
	HSEROUT?C	067h
	HSEROUT?C	075h
	HSEROUT?C	06Dh
	HSEROUT?C	065h
	HSEROUT?C	06Eh
	HSEROUT?C	074h
	HSEROUT?C	020h
	HSEROUT?C	054h
	HSEROUT?C	069h
	HSEROUT?C	06Dh
	HSEROUT?C	065h
	HSEROUT?C	06Fh
	HSEROUT?C	075h
	HSEROUT?C	074h
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00328	Z0038D		goto	Leave
Z0038D
	GOTO?L	_Leave

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00331	Z0038E	DecimalToAscii:							; determine ascii character equivalent of variable 'Decimal' (0-9) and assign to 'Ascii'
Z0038E

	LABEL?L	_DecimalToAscii	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00332	Z0038F		Ascii = "?"
Z0038F
	MOVE?CB	03Fh, _Ascii

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00333	Z00390		Lookup	Decimal,["0123456789"],Ascii
Z00390
	LOOKUP?BCLB	_Decimal, 00Ah, L00002, _Ascii
	LURET?C	030h
	LURET?C	031h
	LURET?C	032h
	LURET?C	033h
	LURET?C	034h
	LURET?C	035h
	LURET?C	036h
	LURET?C	037h
	LURET?C	038h
	LURET?C	039h

	LABEL?L	L00002	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00334	Z00391	Return
Z00391
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00337	Z00392	AsciiToDecimal:							; determine decimal equivalent of variable 'Ascii' and assign to 'Decimal'
Z00392

	LABEL?L	_AsciiToDecimal	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00338	Z00393		Decimal = 0								; default value for D if not found in the list
Z00393
	MOVE?CB	000h, _Decimal

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00339	Z00394		Lookdown Ascii,["0123456789"],Decimal		; if A is "0", D is 0; if A is "1", D is 1; etc.
Z00394
	LOOKDOWN?BCLB	_Ascii, 00Ah, L00003, _Decimal
	LDRET?C	030h
	LDRET?C	031h
	LDRET?C	032h
	LDRET?C	033h
	LDRET?C	034h
	LDRET?C	035h
	LDRET?C	036h
	LDRET?C	037h
	LDRET?C	038h
	LDRET?C	039h

	LABEL?L	L00003	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00340	Z00395	Return
Z00395
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00342	Z00396	SendAOK:
Z00396

	LABEL?L	_SendAOK	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00343	Z00397		hserout		["AOK",CR,LF]			; line feed (0x0A) ends transmission
Z00397
	HSEROUT?C	041h
	HSEROUT?C	04Fh
	HSEROUT?C	04Bh
	HSEROUT?C	_CR
	HSEROUT?C	_LF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00344	Z00398	Return
Z00398
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00348	Z00399	TaskCleanup:
Z00399

	LABEL?L	_TaskCleanup	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00349	Z0039A		gosub		SaveSettings				; save the new settings
Z0039A
	GOSUB?L	_SaveSettings

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00350	Z0039B		gosub		SendAOK
Z0039B
	GOSUB?L	_SendAOK

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00351	Z0039C	Leave:
Z0039C

	LABEL?L	_Leave	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00352	Z0039D		gosub		EnableInterrupts
Z0039D
	GOSUB?L	_EnableInterrupts

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00353	Z0039E		If TempOpMode != OpMode then
Z0039E
	CMPEQ?BBL	_TempOpMode, _OpMode, L00082

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00354	Z0039F			TempOpMode = OpMode					; ensure lcd updates if mode changed
Z0039F
	MOVE?BB	_OpMode, _TempOpMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00355	Z003A0			TempPosition_L = Position_L+1		; ensure position gets printed
Z003A0
	ADD?NCN	_Position_L, 001h, _TempPosition_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00356	Z003A1			Resume 		Main
Z003A1
	RESUME?L	_Main

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00357	Z003A2		Else
Z003A2
	GOTO?L	L00083
	LABEL?L	L00082	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00358	Z003A3			Resume		
Z003A3
	RESUME?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00359	Z003A4		EndIf
Z003A4
	LABEL?L	L00083	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00361	Z003A5	SendDecimal:
Z003A5

	LABEL?L	_SendDecimal	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00362	Z003A6		gosub	DecimalToAscii
Z003A6
	GOSUB?L	_DecimalToAscii

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00363	Z003A7		hserout [Ascii]
Z003A7
	HSEROUT?B	_Ascii

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00364	Z003A8	Return
Z003A8
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00366	Z003A9	Serial_Done:
Z003A9

	LABEL?L	_Serial_Done	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\SERIALCOMMUNICATION.PBP	00367	Z003AA	Enable Interrupt
Z003AA
	IENABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00033	Z003AB	include "Includes\Interrupts.pbp"				; interrupt setup
Z003AB

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00001	Z003AC	Disable Interrupt
Z003AC
	IDISABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00002	Z003AD	goto	Interrupts_Done
Z003AD
	GOTO?L	_Interrupts_Done

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00006	Z003AE	SetupInterrupts:
Z003AE

	LABEL?L	_SetupInterrupts	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00007	Z003AF		RC1IF	= 0			; clear interrupt conditions, not sure if RC1IF can be written directly
Z003AF
	MOVE?CT	000h, _RC1IF

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00008	Z003B0		B 		= RCREG1	; but reading RCREG1 should clear it	
Z003B0
	MOVE?BB	RCREG1, _B

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00009	Z003B1		CREN1	= 0			; clear continous receive to clear errors
Z003B1
	MOVE?CT	000h, _CREN1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00010	Z003B2		pause 	1
Z003B2
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00011	Z003B3		CREN1	= 1			; and then enable continous receive to re-enable port
Z003B3
	MOVE?CT	001h, _CREN1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00012	Z003B4		RC1IE	= 1			; enable serial receive interrupt (first port)
Z003B4
	MOVE?CT	001h, _RC1IE

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00013	Z003B5		PEIE	= 1			; enable peripheral interrupts
Z003B5
	MOVE?CT	001h, _PEIE

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00014	Z003B6		IPEN	= 0			; all interrupts are high priority
Z003B6
	MOVE?CT	000h, _IPEN

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00015	Z003B7	return
Z003B7
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00017	Z003B8	EnableInterrupts:
Z003B8

	LABEL?L	_EnableInterrupts	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00018	Z003B9		GIE		= 1			; enable periferal and global interrupts
Z003B9
	MOVE?CT	001h, _GIE

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00019	Z003BA	Return
Z003BA
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00022	Z003BB	DisableInterrupts:
Z003BB

	LABEL?L	_DisableInterrupts	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00023	Z003BC		GIE 	= 0			; just turn off global enable flag
Z003BC
	MOVE?CT	000h, _GIE

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00024	Z003BD	Return
Z003BD
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00026	Z003BE	Interrupts_Done:
Z003BE

	LABEL?L	_Interrupts_Done	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\INCLUDES\INTERRUPTS.PBP	00027	Z003BF	Enable Interrupt
Z003BF
	IENABLE?	
; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00035	Z003C0	Data @0,1										; first time starting flag (only written when first programmed)
Z003C0

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00037	Z003C1	Start:                               ;
Z003C1

	LABEL?L	_Start	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00038	Z003C2		ArrayWrite Firmware,["1.5"]
Z003C2
	ARRAYWRITENAME?B	_Firmware
	ARRAYWRITE?C	031h
	ARRAYWRITE?C	02Eh
	ARRAYWRITE?C	035h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00039	Z003C3		gosub		SetupIO
Z003C3
	GOSUB?L	_SetupIO

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00040	Z003C4		gosub		TurnMotorOff
Z003C4
	GOSUB?L	_TurnMotorOff

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00041	Z003C5		gosub		GivePICbus
Z003C5
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00042	Z003C6		gosub		EnablePushLights
Z003C6
	GOSUB?L	_EnablePushLights

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00043	Z003C7		pause		500							; let the lcd warmup
Z003C7
	PAUSE?C	001F4h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00044	Z003C8		gosub		SetupLCD
Z003C8
	GOSUB?L	_SetupLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00046	Z003C9		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Stepper Controller  "]
Z003C9
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	053h
	I2CWRITE?C	074h
	I2CWRITE?C	065h
	I2CWRITE?C	070h
	I2CWRITE?C	070h
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	020h
	I2CWRITE?C	043h
	I2CWRITE?C	06Fh
	I2CWRITE?C	06Eh
	I2CWRITE?C	074h
	I2CWRITE?C	072h
	I2CWRITE?C	06Fh
	I2CWRITE?C	06Ch
	I2CWRITE?C	06Ch
	I2CWRITE?C	065h
	I2CWRITE?C	072h
	I2CWRITE?C	020h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00047	Z003CA		gosub		SetCursorLine2
Z003CA
	GOSUB?L	_SetCursorLine2

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00048	Z003CB		I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["v",STR Firmware \FirmwareLength]
Z003CB
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	076h
	I2CCOUNT?C	_FirmwareLength
	I2CWRITESTRS?B	_Firmware

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00049	Z003CC		pause		1000
Z003CC
	PAUSE?C	003E8h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00050	Z003CD		gosub		SetupRTC						; configure the real time clock		
Z003CD
	GOSUB?L	_SetupRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00051	Z003CE		Read		0,FirstTimeOn					; read in address 0 of internal eeprom (written as 1 during initial programming only)
Z003CE
	READADDRESS?C	000h
	READ?B	_FirstTimeOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00052	Z003CF		If	FirstTimeOn=Yes then 
Z003CF
	CMPNE?BCL	_FirstTimeOn, _Yes, L00084

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00053	Z003D0			gosub	SetValuesToDefault
Z003D0
	GOSUB?L	_SetValuesToDefault

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00054	Z003D1			gosub	SaveSettings
Z003D1
	GOSUB?L	_SaveSettings

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00055	Z003D2			FirstTimeOn=No					; clear the first time starting flag
Z003D2
	MOVE?CB	_No, _FirstTimeOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00056	Z003D3			Write	0,FirstTimeOn				; and save that to the internal eeprom
Z003D3
	WRITEADDRESS?C	000h
	WRITE?B	_FirstTimeOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00057	Z003D4		Else
Z003D4
	GOTO?L	L00085
	LABEL?L	L00084	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00058	Z003D5			gosub	RestoreSettings
Z003D5
	GOSUB?L	_RestoreSettings

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00059	Z003D6		EndIf
Z003D6
	LABEL?L	L00085	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00060	Z003D7		pause		1000
Z003D7
	PAUSE?C	003E8h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00062	Z003D8	    Setpoint_L = Position_L                 ; start with no position error
Z003D8
	MOVE?NN	_Position_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00063	Z003D9		gosub		ConfigureMotor
Z003D9
	GOSUB?L	_ConfigureMotor

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00064	Z003DA		pause		10							; allow motor to settle
Z003DA
	PAUSE?C	00Ah

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00065	Z003DB		gosub		ResetCounter
Z003DB
	GOSUB?L	_ResetCounter

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00066	Z003DC		gosub		DisablePushLights
Z003DC
	GOSUB?L	_DisablePushLights

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00068	Z003DD		TempFeedbackOn	=	FeedbackOn + 1		; ensure mismatch for display test
Z003DD
	ADD?BCB	_FeedbackOn, 001h, _TempFeedbackOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00069	Z003DE		TempSetpoint_L	=	Setpoint_L + 1
Z003DE
	ADD?NCN	_Setpoint_L, 001h, _TempSetpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00070	Z003DF		TempPosition_L	=	Position_L + 1
Z003DF
	ADD?NCN	_Position_L, 001h, _TempPosition_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00071	Z003E0		gosub		ClearLCD
Z003E0
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00073	Z003E1		gosub		SetupInterrupts
Z003E1
	GOSUB?L	_SetupInterrupts

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00074	Z003E2		gosub		EnableInterrupts
Z003E2
	GOSUB?L	_EnableInterrupts

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00076	Z003E3	goto			Main						; Assume normal operation
Z003E3
	GOTO?L	_Main

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00078	Z003E4	On Interrupt goto	PCrequest
Z003E4
	ONINT?LL	_PCrequest, L00004

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00080	Z003E5	Enable Interrupt			
Z003E5
	IENABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00083	Z003E6	Main: 	
Z003E6

	LABEL?L	_Main	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00084	Z003E7		gosub	DisablePushLights
Z003E7
	ICALL?L	L00004
	GOSUB?L	_DisablePushLights

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00085	Z003E8		for i=0 to 9
Z003E8
	ICALL?L	L00004
	MOVE?CW	000h, _i
	LABEL?L	L00086	
	CMPGT?WCL	_i, 009h, L00087

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00086	Z003E9			pause 1
Z003E9
	ICALL?L	L00004
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00087	Z003EA		next i
Z003EA
	ICALL?L	L00004
	NEXT?WCL	_i, 001h, L00086
	LABEL?L	L00087	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00088	Z003EB		Select Case OpMode
Z003EB
	ICALL?L	L00004

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00089	Z003EC			Case MotorOff
Z003EC
	ICALL?L	L00004
	CMPNE?BCL	_OpMode, _MotorOff, L00090

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00090	Z003ED				goto	MotorOffMode
Z003ED
	ICALL?L	L00004
	GOTO?L	_MotorOffMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00091	Z003EE			Case Manual
Z003EE
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00090	
	CMPNE?BCL	_OpMode, _Manual, L00091

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00092	Z003EF				goto ManualMode
Z003EF
	ICALL?L	L00004
	GOTO?L	_ManualMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00093	Z003F0			Case External
Z003F0
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00091	
	CMPNE?BCL	_OpMode, _External, L00092

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00094	Z003F1				goto ExternalMode
Z003F1
	ICALL?L	L00004
	GOTO?L	_ExternalMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00095	Z003F2			Case TriggeredGoto
Z003F2
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00092	
	CMPNE?BCL	_OpMode, _TriggeredGoto, L00093

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00096	Z003F3				goto TriggeredGotoMode
Z003F3
	ICALL?L	L00004
	GOTO?L	_TriggeredGotoMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00097	Z003F4			Case TimedGoto
Z003F4
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00093	
	CMPNE?BCL	_OpMode, _TimedGoto, L00094

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00098	Z003F5				goto TimedGotoMode
Z003F5
	ICALL?L	L00004
	GOTO?L	_TimedGotoMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00099	Z003F6			Case TriggeredMove
Z003F6
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00094	
	CMPNE?BCL	_OpMode, _TriggeredMove, L00095

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00100	Z003F7				goto TriggeredMoveMode
Z003F7
	ICALL?L	L00004
	GOTO?L	_TriggeredMoveMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00101	Z003F8			Case TimedMove
Z003F8
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00095	
	CMPNE?BCL	_OpMode, _TimedMove, L00096

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00102	Z003F9				goto TimedMoveMode
Z003F9
	ICALL?L	L00004
	GOTO?L	_TimedMoveMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00103	Z003FA			Case StateRotate
Z003FA
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00096	
	CMPNE?BCL	_OpMode, _StateRotate, L00097

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00104	Z003FB				goto StateRotateMode
Z003FB
	ICALL?L	L00004
	GOTO?L	_StateRotateMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00105	Z003FC			Case TriggeredShutter
Z003FC
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00097	
	CMPNE?BCL	_OpMode, _TriggeredShutter, L00098

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00106	Z003FD				goto TriggeredShutterMode
Z003FD
	ICALL?L	L00004
	GOTO?L	_TriggeredShutterMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00107	Z003FE			Case StateShutter
Z003FE
	ICALL?L	L00004
	GOTO?L	L00089
	LABEL?L	L00098	
	CMPNE?BCL	_OpMode, _StateShutter, L00099

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00108	Z003FF				goto StateShutterMode
Z003FF
	ICALL?L	L00004
	GOTO?L	_StateShutterMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00109	Z00400		End	Select
Z00400
	ICALL?L	L00004
	LABEL?L	L00099	
	LABEL?L	L00089	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00110	Z00401	goto Main
Z00401
	ICALL?L	L00004
	GOTO?L	_Main

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00113	Z00402	MotorOffMode:
Z00402

	LABEL?L	_MotorOffMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00114	Z00403		gosub		GivePICBus					; make sure PIC has the bus
Z00403
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00115	Z00404		gosub		TurnMotorOff				; make sure motor is enabled
Z00404
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOff

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00116	Z00405		gosub		ClearLCD
Z00405
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00117	Z00406		gosub		MotorOffDisplay
Z00406
	ICALL?L	L00004
	GOSUB?L	_MotorOffDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00118	Z00407	MotorOffModeLoop:
Z00407

	LABEL?L	_MotorOffModeLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00119	Z00408		pause		100
Z00408
	ICALL?L	L00004
	PAUSE?C	064h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00120	Z00409	    gosub       CheckForModeChange
Z00409
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00121	Z0040A		gosub		GetPosition
Z0040A
	ICALL?L	L00004
	GOSUB?L	_GetPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00122	Z0040B		gosub		ReadRTC
Z0040B
	ICALL?L	L00004
	GOSUB?L	_ReadRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00123	Z0040C	goto	MotorOffModeLoop
Z0040C
	ICALL?L	L00004
	GOTO?L	_MotorOffModeLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00128	Z0040D	ManualMode:
Z0040D

	LABEL?L	_ManualMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00129	Z0040E		gosub		GivePICBus					; make sure PIC has the bus
Z0040E
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00130	Z0040F		gosub		TurnMotorOn					; make sure motor is enabled
Z0040F
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00131	Z00410		gosub		EnablePushLights
Z00410
	ICALL?L	L00004
	GOSUB?L	_EnablePushLights

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00132	Z00411		gosub		ClearLCD
Z00411
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00133	Z00412		gosub		ManualDisplay
Z00412
	ICALL?L	L00004
	GOSUB?L	_ManualDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00134	Z00413	ManualLoop:
Z00413

	LABEL?L	_ManualLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00135	Z00414	    gosub		CheckForModeChange              ; abort correction process by changing the mode
Z00414
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00136	Z00415		gosub       CorrectPosition
Z00415
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00138	Z00416		Button 		Right,0,10,1,Ri,1,ManualRight	; pin, down, delay, rate, variable, action, label
Z00416
	ICALL?L	L00004
	BUTTONPIN?T	_Right
	BUTTONDS?C	000h
	BUTTONDEL?C	00Ah
	BUTTONRATE?C	001h
	BUTTONTS?C	001h
	BUTTON?BL	_Ri, _ManualRight

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00139	Z00417		Button 		Left,0,10,1,Li,1,ManualLeft		; delay = how many loops you must hold the button for it to be considered held
Z00417
	ICALL?L	L00004
	BUTTONPIN?T	_Left
	BUTTONDS?C	000h
	BUTTONDEL?C	00Ah
	BUTTONRATE?C	001h
	BUTTONTS?C	001h
	BUTTON?BL	_Li, _ManualLeft

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00142	Z00418		goto		ManualLoop						; nothing is pressed
Z00418
	ICALL?L	L00004
	GOTO?L	_ManualLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00144	Z00419	ManualRight:
Z00419

	LABEL?L	_ManualRight	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00145	Z0041A		Setpoint_L = 	Setpoint_L-C				; step counting variables are actually 16 per step
Z0041A
	ICALL?L	L00004
	SUB?NCN	_Setpoint_L, _C, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00146	Z0041B		goto		ManualLoop
Z0041B
	ICALL?L	L00004
	GOTO?L	_ManualLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00148	Z0041C	ManualLeft:
Z0041C

	LABEL?L	_ManualLeft	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00149	Z0041D		Setpoint_L = 	Setpoint_L+C
Z0041D
	ICALL?L	L00004
	ADD?NCN	_Setpoint_L, _C, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00150	Z0041E		goto		ManualLoop
Z0041E
	ICALL?L	L00004
	GOTO?L	_ManualLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00152	Z0041F	goto	ManualLoop
Z0041F
	ICALL?L	L00004
	GOTO?L	_ManualLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00159	Z00420	ExternalMode:
Z00420

	LABEL?L	_ExternalMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00160	Z00421		gosub		GivePICbus					; give pic bus whilst setting up
Z00421
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00161	Z00422		gosub		TurnMotorOn					; make sure motor is enabled	
Z00422
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00162	Z00423		gosub		ClearLCD
Z00423
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00163	Z00424		gosub		GiveExtBus					; give step/direction bus to external controls
Z00424
	ICALL?L	L00004
	GOSUB?L	_GiveExtBus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00164	Z00425		TMR0H = 0                               ; zero the counters
Z00425
	ICALL?L	L00004
	MOVE?CB	000h, TMR0H

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00165	Z00426		TMR0L = 0
Z00426
	ICALL?L	L00004
	MOVE?CB	000h, TMR0L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00166	Z00427		TMR1H = 0
Z00427
	ICALL?L	L00004
	MOVE?CB	000h, TMR1H

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00167	Z00428		TMR1L = 0
Z00428
	ICALL?L	L00004
	MOVE?CB	000h, TMR1L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00168	Z00429	    Setpoint_L = Position_L                 
Z00429
	ICALL?L	L00004
	MOVE?NN	_Position_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00169	Z0042A		gosub		ExternalDisplay
Z0042A
	ICALL?L	L00004
	GOSUB?L	_ExternalDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00170	Z0042B	ExternalLoop:   ; timer 1 counts positive steps, timer 0 counts negative ones
Z0042B

	LABEL?L	_ExternalLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00171	Z0042C	    gosub		CheckForModeChange                          ; abort correction process by changing the mode
Z0042C
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00172	Z0042D	    Setpoint_L = Setpoint_L + C*(256*TMR1H + TMR1L) - C*(256*TMR0H + TMR0L)  ; get total step count from edge counters
Z0042D
	ICALL?L	L00004
	MUL?CBN	000000100h, TMR1H, T1
	ADD?NBN	T1, TMR1L, T1
	MUL?CNN	_C, T1, T1
	ADD?NNN	_Setpoint_L, T1, T1
	MUL?CBN	000000100h, TMR0H, T2
	ADD?NBN	T2, TMR0L, T2
	MUL?CNN	_C, T2, T2
	SUB?NNN	T1, T2, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00173	Z0042E	    gosub		CorrectPosition
Z0042E
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00174	Z0042F	goto		ExternalLoop
Z0042F
	ICALL?L	L00004
	GOTO?L	_ExternalLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00179	Z00430	TriggeredGotoMode:
Z00430

	LABEL?L	_TriggeredGotoMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00180	Z00431		gosub		GivePICBus					; make sure PIC has the bus
Z00431
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00181	Z00432		gosub		TurnMotorOn					; make sure motor is enabled
Z00432
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00182	Z00433		gosub		ClearLCD				
Z00433
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00183	Z00434		gosub		ClearCounters				; clear the two timers (TMR0 and TMR1), the sum of which is the trigger count
Z00434
	ICALL?L	L00004
	GOSUB?L	_ClearCounters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00184	Z00435		gosub		TriggeredGotoDisplay
Z00435
	ICALL?L	L00004
	GOSUB?L	_TriggeredGotoDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00185	Z00436	TriggeredGotoLoop:
Z00436

	LABEL?L	_TriggeredGotoLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00186	Z00437	    gosub   CheckForModeChange                          ; abort correction process by changing the mode
Z00437
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00187	Z00438		gosub	GetTriggers
Z00438
	ICALL?L	L00004
	GOSUB?L	_GetTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00188	Z00439		gosub	UpdateTriggers
Z00439
	ICALL?L	L00004
	GOSUB?L	_UpdateTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00189	Z0043A		If Triggers_W >= DoTriggers_W then ExecuteTriggeredGoto	; do the goto if number of triggers has been reached
Z0043A
	ICALL?L	L00004
	CMPGE?WWL	_Triggers_W, _DoTriggers_W, _ExecuteTriggeredGoto

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00191	Z0043B		gosub	CorrectPosition
Z0043B
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00192	Z0043C		goto	TriggeredGotoLoop				; or continue waiting...
Z0043C
	ICALL?L	L00004
	GOTO?L	_TriggeredGotoLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00193	Z0043D	ExecuteTriggeredGoto:
Z0043D

	LABEL?L	_ExecuteTriggeredGoto	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00194	Z0043E		Setpoint_L = Destination_L
Z0043E
	ICALL?L	L00004
	MOVE?NN	_Destination_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00195	Z0043F		gosub	CorrectPosition					; make move to desired position (setpoint)
Z0043F
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00196	Z00440		goto	TriggeredGotoMode
Z00440
	ICALL?L	L00004
	GOTO?L	_TriggeredGotoMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00202	Z00441	TimedGotoMode:
Z00441

	LABEL?L	_TimedGotoMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00203	Z00442		gosub		GivePICBus					; make sure PIC has the bus
Z00442
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00204	Z00443		gosub		TurnMotorOn					; make sure motor is enabled
Z00443
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00205	Z00444		gosub		ClearLCD
Z00444
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00206	Z00445	TimedGotoLoop:
Z00445

	LABEL?L	_TimedGotoLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00207	Z00446	    gosub   CheckForModeChange                          ; abort correction process by changing the mode
Z00446
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00208	Z00447		gosub	ReadRTC							; get current time/date (updates hours,minutes,days variables, etc.)
Z00447
	ICALL?L	L00004
	GOSUB?L	_ReadRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00209	Z00448		gosub	TimedGotoDisplay
Z00448
	ICALL?L	L00004
	GOSUB?L	_TimedGotoDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00210	Z00449		Select Case TimeMatch
Z00449
	ICALL?L	L00004

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00211	Z0044A			Case Secs
Z0044A
	ICALL?L	L00004
	CMPNE?BCL	_TimeMatch, _Secs, L00102

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00212	Z0044B				If Time[Seconds]=DoTime[Seconds] then ExecuteTimedGoto
Z0044B
	ICALL?L	L00004
	CMPEQ?BBL	_Time, _DoTime, _ExecuteTimedGoto

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00213	Z0044C			Case SecsMins
Z0044C
	ICALL?L	L00004
	GOTO?L	L00101
	LABEL?L	L00102	
	CMPNE?BCL	_TimeMatch, _SecsMins, L00103

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00214	Z0044D				If Time[Seconds]=DoTime[Seconds] AND Time[Minutes]=DoTime[Minutes] then ExecuteTimedGoto
Z0044D
	ICALL?L	L00004
	CMPEQ?BBB	_Time, _DoTime, T1
	CMPEQ?BBB	_Time + 00001h, _DoTime + 00001h, T2
	LAND?BBL	T1, T2, _ExecuteTimedGoto

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00215	Z0044E			Case SecsMinsHrs
Z0044E
	ICALL?L	L00004
	GOTO?L	L00101
	LABEL?L	L00103	
	CMPNE?BCL	_TimeMatch, _SecsMinsHrs, L00104

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00216	Z0044F				If Time[Hours]=DoTime[Hours] AND Time[Minutes]=DoTime[Minutes] AND Time[Seconds]=DoTime[Seconds] then ExecuteTimedGoto
Z0044F
	ICALL?L	L00004
	CMPEQ?BBB	_Time + 00002h, _DoTime + 00002h, T1
	CMPEQ?BBB	_Time + 00001h, _DoTime + 00001h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BBB	_Time, _DoTime, T3
	LAND?NBL	T2, T3, _ExecuteTimedGoto

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00217	Z00450		End Select
Z00450
	ICALL?L	L00004
	LABEL?L	L00104	
	LABEL?L	L00101	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00218	Z00451		gosub	CorrectPosition					; check feedback, adjust position if necessary
Z00451
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00219	Z00452		pause	10
Z00452
	ICALL?L	L00004
	PAUSE?C	00Ah

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00220	Z00453		goto	TimedGotoLoop					; or wait for next time match
Z00453
	ICALL?L	L00004
	GOTO?L	_TimedGotoLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00221	Z00454	ExecuteTimedGoto:
Z00454

	LABEL?L	_ExecuteTimedGoto	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00222	Z00455		Setpoint_L = Destination_L
Z00455
	ICALL?L	L00004
	MOVE?NN	_Destination_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00223	Z00456		gosub	CorrectPosition
Z00456
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00224	Z00457		goto	TimedGotoMode
Z00457
	ICALL?L	L00004
	GOTO?L	_TimedGotoMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00230	Z00458	TriggeredMoveMode:
Z00458

	LABEL?L	_TriggeredMoveMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00231	Z00459		gosub		GivePICBus					; make sure PIC has the bus
Z00459
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00232	Z0045A		gosub		TurnMotorOn					; make sure motor is enabled
Z0045A
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00233	Z0045B		gosub		ClearLCD
Z0045B
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00234	Z0045C		gosub		ClearCounters				; clear the two timers (TMR0 and TMR3), the sum of which is the trigger count
Z0045C
	ICALL?L	L00004
	GOSUB?L	_ClearCounters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00235	Z0045D		gosub		TriggeredMoveDisplay				
Z0045D
	ICALL?L	L00004
	GOSUB?L	_TriggeredMoveDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00236	Z0045E	TriggeredMoveLoop:
Z0045E

	LABEL?L	_TriggeredMoveLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00237	Z0045F	    gosub		CheckForModeChange                          ; abort correction process by changing the mode
Z0045F
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00238	Z00460		gosub		GetTriggers
Z00460
	ICALL?L	L00004
	GOSUB?L	_GetTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00239	Z00461		gosub		UpdateTriggers
Z00461
	ICALL?L	L00004
	GOSUB?L	_UpdateTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00240	Z00462		If Triggers_W >= DoTriggers_W then ExecuteTriggeredMove		; do the move if number of triggers has been reached
Z00462
	ICALL?L	L00004
	CMPGE?WWL	_Triggers_W, _DoTriggers_W, _ExecuteTriggeredMove

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00241	Z00463		gosub		CorrectPosition
Z00463
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00242	Z00464		goto		TriggeredMoveLoop				; or wait for next trigger	
Z00464
	ICALL?L	L00004
	GOTO?L	_TriggeredMoveLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00243	Z00465	ExecuteTriggeredMove:
Z00465

	LABEL?L	_ExecuteTriggeredMove	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00244	Z00466		Setpoint_L = Setpoint_L + Steps_L
Z00466
	ICALL?L	L00004
	ADD?NNN	_Setpoint_L, _Steps_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00245	Z00467		gosub		CorrectPosition					; make move to desired position (setpoint)
Z00467
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00246	Z00468		if limit=Yes AND AtLimit=SwitchDirection then Steps_L = -Steps_L	; switch direction if desired
Z00468
	ICALL?L	L00004
	CMPEQ?TCB	_Limit, _Yes, T1
	CMPEQ?BCB	_AtLimit, _SwitchDirection, T2
	LAND?BBN	T1, T2, T2
	CMPF?NL	T2, L00105
	UMINUS?NN	_Steps_L, _Steps_L
	LABEL?L	L00105	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00247	Z00469		goto		TriggeredMoveMode
Z00469
	ICALL?L	L00004
	GOTO?L	_TriggeredMoveMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00253	Z0046A	TimedMoveMode:
Z0046A

	LABEL?L	_TimedMoveMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00254	Z0046B		gosub		GivePICBus					; make sure PIC has the bus
Z0046B
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00255	Z0046C		gosub		TurnMotorOn					; make sure motor is enabled
Z0046C
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00256	Z0046D		gosub		ClearLCD
Z0046D
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00257	Z0046E	TimedMoveLoop:
Z0046E

	LABEL?L	_TimedMoveLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00258	Z0046F	    gosub		CheckForModeChange                          ; abort correction process by changing the mode
Z0046F
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00259	Z00470		gosub		ReadRTC							; get current time/date (updates hours,minutes,days variables, etc.)
Z00470
	ICALL?L	L00004
	GOSUB?L	_ReadRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00260	Z00471		gosub		TimedMoveDisplay
Z00471
	ICALL?L	L00004
	GOSUB?L	_TimedMoveDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00261	Z00472		Select Case TimeMatch
Z00472
	ICALL?L	L00004

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00262	Z00473			Case Secs
Z00473
	ICALL?L	L00004
	CMPNE?BCL	_TimeMatch, _Secs, L00109

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00263	Z00474				If Time[Seconds]=DoTime[Seconds] then ExecuteTimedMove
Z00474
	ICALL?L	L00004
	CMPEQ?BBL	_Time, _DoTime, _ExecuteTimedMove

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00264	Z00475			Case SecsMins
Z00475
	ICALL?L	L00004
	GOTO?L	L00108
	LABEL?L	L00109	
	CMPNE?BCL	_TimeMatch, _SecsMins, L00110

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00265	Z00476				If Time[Seconds]=DoTime[Seconds] AND Time[Minutes]=DoTime[Minutes] then ExecuteTimedMove
Z00476
	ICALL?L	L00004
	CMPEQ?BBB	_Time, _DoTime, T1
	CMPEQ?BBB	_Time + 00001h, _DoTime + 00001h, T2
	LAND?BBL	T1, T2, _ExecuteTimedMove

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00266	Z00477			Case SecsMinsHrs
Z00477
	ICALL?L	L00004
	GOTO?L	L00108
	LABEL?L	L00110	
	CMPNE?BCL	_TimeMatch, _SecsMinsHrs, L00111

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00267	Z00478				If Time[Hours]=DoTime[Hours] AND Time[Minutes]=DoTime[Minutes] AND Time[Seconds]=DoTime[Seconds] then ExecuteTimedMove
Z00478
	ICALL?L	L00004
	CMPEQ?BBB	_Time + 00002h, _DoTime + 00002h, T1
	CMPEQ?BBB	_Time + 00001h, _DoTime + 00001h, T2
	LAND?BBN	T1, T2, T2
	CMPEQ?BBB	_Time, _DoTime, T3
	LAND?NBL	T2, T3, _ExecuteTimedMove

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00268	Z00479		End Select
Z00479
	ICALL?L	L00004
	LABEL?L	L00111	
	LABEL?L	L00108	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00270	Z0047A		gosub		CorrectPosition
Z0047A
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00271	Z0047B		pause		1
Z0047B
	ICALL?L	L00004
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00272	Z0047C		goto		TimedMoveLoop					; keep waiting
Z0047C
	ICALL?L	L00004
	GOTO?L	_TimedMoveLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00273	Z0047D	ExecuteTimedMove:
Z0047D

	LABEL?L	_ExecuteTimedMove	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00274	Z0047E		Setpoint_L= Setpoint_L + Steps_L
Z0047E
	ICALL?L	L00004
	ADD?NNN	_Setpoint_L, _Steps_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00275	Z0047F		gosub		CorrectPosition
Z0047F
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00276	Z00480		if limit=Yes AND AtLimit=SwitchDirection then Steps_L = -Steps_L	; switch direction if desired
Z00480
	ICALL?L	L00004
	CMPEQ?TCB	_Limit, _Yes, T1
	CMPEQ?BCB	_AtLimit, _SwitchDirection, T2
	LAND?BBN	T1, T2, T2
	CMPF?NL	T2, L00112
	UMINUS?NN	_Steps_L, _Steps_L
	LABEL?L	L00112	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00277	Z00481		goto		TimedMoveMode
Z00481
	ICALL?L	L00004
	GOTO?L	_TimedMoveMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00282	Z00482	StateRotateMode:	
Z00482

	LABEL?L	_StateRotateMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00283	Z00483		gosub		GivePICBus					; make sure PIC has the bus
Z00483
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00284	Z00484		gosub		TurnMotorOn					; make sure motor is enabled
Z00484
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00285	Z00485		FeedbackOn= No							; can't have feedback on in this  mode
Z00485
	ICALL?L	L00004
	MOVE?CB	_No, _FeedbackOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00286	Z00486		gosub		ClearLCD
Z00486
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00287	Z00487		gosub		StateRotateDisplay
Z00487
	ICALL?L	L00004
	GOSUB?L	_StateRotateDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00288	Z00488	StateRotateLoop:
Z00488

	LABEL?L	_StateRotateLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00289	Z00489	    gosub		CheckForModeChange                          ; abort correction process by changing the mode
Z00489
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00290	Z0048A		If ExtTrigger=State then	Setpoint_L = Setpoint_L + Rotate_L*C		; change setpoint if trigger input is correct state
Z0048A
	ICALL?L	L00004
	CMPNE?TTL	_ExtTrigger, _State, L00114
	MUL?NCN	_Rotate_L, _C, T1
	ADD?NNN	_Setpoint_L, T1, _Setpoint_L
	LABEL?L	L00114	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00291	Z0048B	    gosub       CorrectPosition
Z0048B
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00292	Z0048C		if limit=Yes AND AtLimit=SwitchDirection then Rotate_L = -Rotate_L	; switch direction if desired
Z0048C
	ICALL?L	L00004
	CMPEQ?TCB	_Limit, _Yes, T1
	CMPEQ?BCB	_AtLimit, _SwitchDirection, T2
	LAND?BBN	T1, T2, T2
	CMPF?NL	T2, L00116
	UMINUS?NN	_Rotate_L, _Rotate_L
	LABEL?L	L00116	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00293	Z0048D		for j=0 to Delay_W-MinDelay+1										; delay a bit...
Z0048D
	ICALL?L	L00004
	MOVE?CW	000h, _j
	LABEL?L	L00118	
	SUB?WCN	_Delay_W, _MinDelay, T1
	ADD?NCN	T1, 001h, T1
	CMPGT?WNL	_j, T1, L00119

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00294	Z0048E			pause 1
Z0048E
	ICALL?L	L00004
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00295	Z0048F		next j
Z0048F
	ICALL?L	L00004
	NEXT?WCL	_j, 001h, L00118
	LABEL?L	L00119	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00296	Z00490		goto		StateRotateLoop
Z00490
	ICALL?L	L00004
	GOTO?L	_StateRotateLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00302	Z00491	TriggeredShutterMode:
Z00491

	LABEL?L	_TriggeredShutterMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00303	Z00492		gosub		GivePICBus						; make sure PIC has the bus
Z00492
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00304	Z00493		gosub		TurnMotorOn						; make sure motor is enabled
Z00493
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00305	Z00494		gosub		ClearLCD		
Z00494
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00306	Z00495		gosub		ClearCounters					; clear the two timers (TMR0 and TMR3), the sum of which is the trigger count
Z00495
	ICALL?L	L00004
	GOSUB?L	_ClearCounters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00307	Z00496		Home_L	=	Position_L						; home is where the heart is
Z00496
	ICALL?L	L00004
	MOVE?NN	_Position_L, _Home_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00308	Z00497		gosub		GetTriggers	
Z00497
	ICALL?L	L00004
	GOSUB?L	_GetTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00309	Z00498		gosub		TriggeredShutterDisplay
Z00498
	ICALL?L	L00004
	GOSUB?L	_TriggeredShutterDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00310	Z00499	TriggeredShutterLoop1:
Z00499

	LABEL?L	_TriggeredShutterLoop1	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00311	Z0049A	    gosub		CheckForModeChange                          ; abort correction process by changing the mode
Z0049A
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00312	Z0049B		gosub		GetTriggers
Z0049B
	ICALL?L	L00004
	GOSUB?L	_GetTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00313	Z0049C		gosub		UpdateTriggers
Z0049C
	ICALL?L	L00004
	GOSUB?L	_UpdateTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00314	Z0049D		If Triggers_W >= DoTriggers_W then ExecuteTriggeredShutterMove
Z0049D
	ICALL?L	L00004
	CMPGE?WWL	_Triggers_W, _DoTriggers_W, _ExecuteTriggeredShutterMove

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00315	Z0049E	    gosub       CorrectPosition
Z0049E
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00316	Z0049F		goto		TriggeredShutterLoop1			; or wait for next trigger	
Z0049F
	ICALL?L	L00004
	GOTO?L	_TriggeredShutterLoop1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00317	Z004A0	ExecuteTriggeredShutterMove:
Z004A0

	LABEL?L	_ExecuteTriggeredShutterMove	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00318	Z004A1		Setpoint_L = Home_L + Steps_L
Z004A1
	ICALL?L	L00004
	ADD?NNN	_Home_L, _Steps_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00319	Z004A2		gosub		CorrectPosition
Z004A2
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00320	Z004A3		gosub		ClearCounters					; clear the trigger counters
Z004A3
	ICALL?L	L00004
	GOSUB?L	_ClearCounters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00321	Z004A4	TriggeredShutterLoop2:
Z004A4

	LABEL?L	_TriggeredShutterLoop2	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00322	Z004A5	    gosub		CheckForModeChange                          ; abort correction process by changing the mode
Z004A5
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00323	Z004A6		gosub		GetTriggers
Z004A6
	ICALL?L	L00004
	GOSUB?L	_GetTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00324	Z004A7		gosub		UpdateTriggers
Z004A7
	ICALL?L	L00004
	GOSUB?L	_UpdateTriggers

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00325	Z004A8		If Triggers_W >= DoTriggers_W then ExecuteTriggeredShutterReturn
Z004A8
	ICALL?L	L00004
	CMPGE?WWL	_Triggers_W, _DoTriggers_W, _ExecuteTriggeredShutterReturn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00326	Z004A9	    gosub       CorrectPosition
Z004A9
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00327	Z004AA		goto		TriggeredShutterLoop2
Z004AA
	ICALL?L	L00004
	GOTO?L	_TriggeredShutterLoop2

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00328	Z004AB	ExecuteTriggeredShutterReturn:
Z004AB

	LABEL?L	_ExecuteTriggeredShutterReturn	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00329	Z004AC		Setpoint_L = Home_L
Z004AC
	ICALL?L	L00004
	MOVE?NN	_Home_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00330	Z004AD		gosub		CorrectPosition
Z004AD
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00331	Z004AE		gosub		ClearCounters					; clear the trigger counters
Z004AE
	ICALL?L	L00004
	GOSUB?L	_ClearCounters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00332	Z004AF	goto	TriggeredShutterLoop1
Z004AF
	ICALL?L	L00004
	GOTO?L	_TriggeredShutterLoop1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00338	Z004B0	StateShutterMode:
Z004B0

	LABEL?L	_StateShutterMode	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00339	Z004B1		gosub		GivePICBus					; make sure PIC has the bus
Z004B1
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00340	Z004B2		gosub		TurnMotorOn					; make sure motor is enabled
Z004B2
	ICALL?L	L00004
	GOSUB?L	_TurnMotorOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00341	Z004B3		gosub		ClearLCD
Z004B3
	ICALL?L	L00004
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00342	Z004B4		Home_L	=	Position_L					; home is where the heart is
Z004B4
	ICALL?L	L00004
	MOVE?NN	_Position_L, _Home_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00343	Z004B5		gosub		StateShutterDisplay
Z004B5
	ICALL?L	L00004
	GOSUB?L	_StateShutterDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00344	Z004B6	StateShutterLoop:
Z004B6

	LABEL?L	_StateShutterLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00345	Z004B7	    gosub   CheckForModeChange                          ; abort correction process by changing the mode
Z004B7
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00346	Z004B8		If ExtTrigger=0 then
Z004B8
	ICALL?L	L00004
	CMPNE?TCL	_ExtTrigger, 000h, L00120

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00347	Z004B9			Setpoint_L = Home_L
Z004B9
	ICALL?L	L00004
	MOVE?NN	_Home_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00348	Z004BA		Else
Z004BA
	ICALL?L	L00004
	GOTO?L	L00121
	LABEL?L	L00120	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00349	Z004BB			Setpoint_L = Home_L + Steps_L		; steps can be negative!
Z004BB
	ICALL?L	L00004
	ADD?NNN	_Home_L, _Steps_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00350	Z004BC		EndIf
Z004BC
	ICALL?L	L00004
	LABEL?L	L00121	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00351	Z004BD		gosub		CorrectPosition
Z004BD
	ICALL?L	L00004
	GOSUB?L	_CorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00352	Z004BE		goto		StateShutterLoop			; shutter modes only loop forever
Z004BE
	ICALL?L	L00004
	GOTO?L	_StateShutterLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00360	Z004BF	CorrectPosition:
Z004BF

	LABEL?L	_CorrectPosition	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00361	Z004C0		B = BusControl										; save off who has the bus (pic or external)
Z004C0
	ICALL?L	L00004
	MOVE?TB	_BusControl, _B

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00362	Z004C1	CorrectPositionLoop:
Z004C1

	LABEL?L	_CorrectPositionLoop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00363	Z004C2		If FeedbackOn=Yes then
Z004C2
	ICALL?L	L00004
	CMPNE?BCL	_FeedbackOn, _Yes, L00122

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00364	Z004C3			gosub	GetPosition								; get current position from feedback monitor
Z004C3
	ICALL?L	L00004
	GOSUB?L	_GetPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00365	Z004C4		EndIf												; otherwise assume motor is where it thinks (from past step taking)
Z004C4
	ICALL?L	L00004
	LABEL?L	L00122	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00366	Z004C5		gosub		UpdateDisplay							; uncomment to update the position during the move/goto (makes it slow though)
Z004C5
	ICALL?L	L00004
	GOSUB?L	_UpdateDisplay

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00368	Z004C6		If Left=0 AND Right=0 then									; can abandon task by pressing both buttons at once
Z004C6
	ICALL?L	L00004
	CMPEQ?TCB	_Left, 000h, T1
	CMPEQ?TCB	_Right, 000h, T2
	LAND?BBN	T1, T2, T2
	CMPF?NL	T2, L00124

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00369	Z004C7			TempPosition_L = Position_L + 1							; ensure display updates
Z004C7
	ICALL?L	L00004
	ADD?NCN	_Position_L, 001h, _TempPosition_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00370	Z004C8			goto	ExitCorrectPosition
Z004C8
	ICALL?L	L00004
	GOTO?L	_ExitCorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00371	Z004C9		EndIf
Z004C9
	ICALL?L	L00004
	LABEL?L	L00124	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00372	Z004CA		If EnableDrive=No then ExitCorrectPosition					; exit if motor is disabled
Z004CA
	ICALL?L	L00004
	CMPEQ?TCL	_EnableDrive, _No, _ExitCorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00373	Z004CB		If abs(Setpoint_L-Position_L)<C then ExitCorrectPosition	; nothing to do!  step error is less than a single step
Z004CB
	ICALL?L	L00004
	SUB?NNN	_Setpoint_L, _Position_L, T1
	ABS?NN	T1, T1
	CMPLT?NCL	T1, _C, _ExitCorrectPosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00376	Z004CC		limit = No													; take a step to correct any position error:
Z004CC
	ICALL?L	L00004
	MOVE?CT	_No, _Limit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00377	Z004CD		gosub		GivePICbus										; else there is a step error that requires correcting
Z004CD
	ICALL?L	L00004
	GOSUB?L	_GivePICbus

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00378	Z004CE		If Position_L<Setpoint_L then								; take the step
Z004CE
	ICALL?L	L00004
	CMPGE?NNL	_Position_L, _Setpoint_L, L00126

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00379	Z004CF			If Position_L+C>MaxPos_L then
Z004CF
	ICALL?L	L00004
	ADD?NCN	_Position_L, _C, T1
	CMPLE?NNL	T1, _MaxPos_L, L00128

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00380	Z004D0				Setpoint_L = Position_L
Z004D0
	ICALL?L	L00004
	MOVE?NN	_Position_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00381	Z004D1				limit = Yes
Z004D1
	ICALL?L	L00004
	MOVE?CT	_Yes, _Limit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00382	Z004D2			Else
Z004D2
	ICALL?L	L00004
	GOTO?L	L00129
	LABEL?L	L00128	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00383	Z004D3				gosub	StepPos
Z004D3
	ICALL?L	L00004
	GOSUB?L	_StepPos

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00384	Z004D4				limit = No
Z004D4
	ICALL?L	L00004
	MOVE?CT	_No, _Limit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00385	Z004D5			EndIf
Z004D5
	ICALL?L	L00004
	LABEL?L	L00129	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00386	Z004D6		Else
Z004D6
	ICALL?L	L00004
	GOTO?L	L00127
	LABEL?L	L00126	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00387	Z004D7			If Position_L-C<=MinPos_L then
Z004D7
	ICALL?L	L00004
	SUB?NCN	_Position_L, _C, T1
	CMPGT?NNL	T1, _MinPos_L, L00130

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00388	Z004D8				Setpoint_L = Position_L
Z004D8
	ICALL?L	L00004
	MOVE?NN	_Position_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00389	Z004D9				limit = Yes
Z004D9
	ICALL?L	L00004
	MOVE?CT	_Yes, _Limit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00390	Z004DA			Else
Z004DA
	ICALL?L	L00004
	GOTO?L	L00131
	LABEL?L	L00130	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00391	Z004DB				gosub	StepNeg
Z004DB
	ICALL?L	L00004
	GOSUB?L	_StepNeg

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00392	Z004DC				limit = No
Z004DC
	ICALL?L	L00004
	MOVE?CT	_No, _Limit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00393	Z004DD			EndIf
Z004DD
	ICALL?L	L00004
	LABEL?L	L00131	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00394	Z004DE		EndIf		
Z004DE
	ICALL?L	L00004
	LABEL?L	L00127	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00396	Z004DF		goto		CorrectPositionLoop						; keep looping until no step error or a limit is reached
Z004DF
	ICALL?L	L00004
	GOTO?L	_CorrectPositionLoop

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00398	Z004E0	ExitCorrectPosition:
Z004E0

	LABEL?L	_ExitCorrectPosition	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00399	Z004E1	    gosub       SavePosition							; save the current position
Z004E1
	ICALL?L	L00004
	GOSUB?L	_SavePosition

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00400	Z004E2		BusControl = B										; restore ownership of the bus
Z004E2
	ICALL?L	L00004
	MOVE?BT	_B, _BusControl

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00401	Z004E3	Return
Z004E3
	ICALL?L	L00004
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00404	Z004E4	WaitUntilExtTriggerIsLow:
Z004E4

	LABEL?L	_WaitUntilExtTriggerIsLow	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00405	Z004E5		While ExtTrigger = 1
Z004E5
	ICALL?L	L00004
	LABEL?L	L00132	
	CMPNE?TCL	_ExtTrigger, 001h, L00133

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00406	Z004E6	        gosub   CheckForModeChange
Z004E6
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00407	Z004E7			pause 1
Z004E7
	ICALL?L	L00004
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00408	Z004E8		Wend
Z004E8
	ICALL?L	L00004
	GOTO?L	L00132
	LABEL?L	L00133	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00409	Z004E9	Return
Z004E9
	ICALL?L	L00004
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00412	Z004EA	WaitUntilExtTriggerIsHigh:
Z004EA

	LABEL?L	_WaitUntilExtTriggerIsHigh	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00413	Z004EB		While ExtTrigger = 0
Z004EB
	ICALL?L	L00004
	LABEL?L	L00134	
	CMPNE?TCL	_ExtTrigger, 000h, L00135

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00414	Z004EC	        gosub   CheckForModeChange
Z004EC
	ICALL?L	L00004
	GOSUB?L	_CheckForModeChange

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00415	Z004ED			pause 1
Z004ED
	ICALL?L	L00004
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00416	Z004EE		Wend
Z004EE
	ICALL?L	L00004
	GOTO?L	L00134
	LABEL?L	L00135	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00417	Z004EF	Return
Z004EF
	ICALL?L	L00004
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00423	Z004F0	Disable Interrupt					; disable interrupts below this
Z004F0
	IDISABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00427	Z004F1	SetupIO:
Z004F1

	LABEL?L	_SetupIO	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00429	Z004F2		INTEDG0		=	0			; interrupt flags get set on falling edge of external signals RB0:RB1
Z004F2
	MOVE?CT	000h, _INTEDG0

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00430	Z004F3		INTEDG1		=	0			; right/left pushbuttons available for manually stepping the motor
Z004F3
	MOVE?CT	000h, _INTEDG1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00432	Z004F4		T08BIT		=	0			; 16 bit mode
Z004F4
	MOVE?CT	000h, _T08BIT

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00433	Z004F5		T0CS		=	1			; external clock source (pin)
Z004F5
	MOVE?CT	001h, _T0CS

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00434	Z004F6		T0SE		=	0			; clocks on rising edges
Z004F6
	MOVE?CT	000h, _T0SE

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00435	Z004F7		PSA			=	1			; no prescalar
Z004F7
	MOVE?CT	001h, _PSA

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00436	Z004F8		TMR0ON		=	1			; enable timer0 module
Z004F8
	MOVE?CT	001h, _TMR0ON

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00438	Z004F9		TMR1CS1		=	1			; timer1 counts regardless of gate function/state
Z004F9
	MOVE?CT	001h, _TMR1CS1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00439	Z004FA		TMR1CS0		=	0			; timer1 clock is from pin (or oscillator, depending on SOSCEN bit)
Z004FA
	MOVE?CT	000h, _TMR1CS0

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00440	Z004FB		T1CKPS1		=	0			; no prescalar
Z004FB
	MOVE?CT	000h, _T1CKPS1

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00441	Z004FC		T1CKPS0		=	0
Z004FC
	MOVE?CT	000h, _T1CKPS0

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00442	Z004FD		T1SOSCEN	=	0			; SOSC (secondary oscillator) is disabled, external clock from the T3CKl pin (rising edge)
Z004FD
	MOVE?CT	000h, _T1SOSCEN

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00443	Z004FE		T1SYNC_		=	1			; do not synchronize external clock input
Z004FE
	MOVE?CT	001h, _T1SYNC_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00444	Z004FF		T1RD16		=	0			; read Timer1 as two 8-bit registers
Z004FF
	MOVE?CT	000h, _T1RD16

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00445	Z00500		TMR1ON		=	1			; enable timer1 module
Z00500
	MOVE?CT	001h, _TMR1ON

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00447	Z00501		ReadCounter_	=	1						; not reading the counter
Z00501
	MOVE?CT	001h, _ReadCounter_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00448	Z00502		ResetCounter_	=	1						; not resetting the encoder
Z00502
	MOVE?CT	001h, _ResetCounter_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00449	Z00503		DataSelect		=	0						; doesn't matter
Z00503
	MOVE?CT	000h, _DataSelect

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00450	Z00504		PicStep			=	0
Z00504
	MOVE?CT	000h, _PICstep

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00451	Z00505		PicDirection	=	0
Z00505
	MOVE?CT	000h, _PICdirection

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00452	Z00506	Return
Z00506
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00455	Z00507	SetValuesToDefault:								; set default values of variables
Z00507

	LABEL?L	_SetValuesToDefault	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00456	Z00508		gosub		ClearLCD
Z00508
	GOSUB?L	_ClearLCD

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00457	Z00509	 	I2Cwrite	I2Cdata,I2Cclk,lcdI2Caddress,["Loading defaults   "]
Z00509
	I2CDATA?T	_I2Cdata
	I2CCLOCK?T	_I2Cclk
	I2CWRITE?B	_lcdI2Caddress
	I2CWRITE?C	04Ch
	I2CWRITE?C	06Fh
	I2CWRITE?C	061h
	I2CWRITE?C	064h
	I2CWRITE?C	069h
	I2CWRITE?C	06Eh
	I2CWRITE?C	067h
	I2CWRITE?C	020h
	I2CWRITE?C	064h
	I2CWRITE?C	065h
	I2CWRITE?C	066h
	I2CWRITE?C	061h
	I2CWRITE?C	075h
	I2CWRITE?C	06Ch
	I2CWRITE?C	074h
	I2CWRITE?C	073h
	I2CWRITE?C	020h
	I2CWRITE?C	020h
	I2CWRITES?C	020h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00458	Z0050A		Time[Seconds] 	= 	0
Z0050A
	MOVE?CB	000h, _Time

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00459	Z0050B		Time[Minutes]	=	0
Z0050B
	MOVE?CB	000h, _Time + 00001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00460	Z0050C		Time[Hours]		=	13
Z0050C
	MOVE?CB	00Dh, _Time + 00002h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00461	Z0050D		gosub				UpdateRTC
Z0050D
	GOSUB?L	_UpdateRTC

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00463	Z0050E		DoTime[Seconds]	=	0
Z0050E
	MOVE?CB	000h, _DoTime

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00464	Z0050F		DoTime[Minutes]	=	0
Z0050F
	MOVE?CB	000h, _DoTime + 00001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00465	Z00510		DoTime[Hours]	=	12
Z00510
	MOVE?CB	00Ch, _DoTime + 00002h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00466	Z00511		Rotate_L		=	1						; rotate in positive sense on high input (state rotate mode only)
Z00511
	MOVE?CN	001h, _Rotate_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00467	Z00512		Limit			=	0						; motor not at limit
Z00512
	MOVE?CT	000h, _Limit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00468	Z00513		AtLimit			=	Nothing					; do nothing if mode reaches software position limit
Z00513
	MOVE?CB	_Nothing, _AtLimit

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00469	Z00514		TimeMatch		=	Secs
Z00514
	MOVE?CB	_Secs, _TimeMatch

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00471	Z00515		OpMode			=	Manual
Z00515
	MOVE?CB	_Manual, _OpMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00472	Z00516	    StepStyle       =   FullStep
Z00516
	MOVE?CB	_FullStep, _StepStyle

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00473	Z00517		FeedbackOn		=	No
Z00517
	MOVE?CB	_No, _FeedbackOn

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00474	Z00518		Delay_W			=	10						; default delay between steps, ms
Z00518
	MOVE?CW	00Ah, _Delay_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00475	Z00519		MinPos_L		=	-(100000*C)				; For no position limits, make both zero
Z00519
	MOVE?CN	0FFE79600h, _MinPos_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00476	Z0051A		MaxPos_L		=	100000*C				; remember, the controller deals in counts, not steps
Z0051A
	MOVE?CN	000186A00h, _MaxPos_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00477	Z0051B		gosub				ClearCounters			; clear trigger counters
Z0051B
	GOSUB?L	_ClearCounters

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00478	Z0051C		Position_L 		= 	0
Z0051C
	MOVE?CN	000h, _Position_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00479	Z0051D		Setpoint_L 		= 	0
Z0051D
	MOVE?CN	000h, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00480	Z0051E		Destination_L 	= 	0
Z0051E
	MOVE?CN	000h, _Destination_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00481	Z0051F		Steps_L			=	50*C
Z0051F
	MOVE?CN	000000320h, _Steps_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00482	Z00520		DoTriggers_W	=	10
Z00520
	MOVE?CW	00Ah, _DoTriggers_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00484	Z00521	Return
Z00521
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00486	Z00522	CheckForModeChange:
Z00522

	LABEL?L	_CheckForModeChange	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00487	Z00523	    If Left=0 AND Right=0 then
Z00523
	CMPEQ?TCB	_Left, 000h, T1
	CMPEQ?TCB	_Right, 000h, T2
	LAND?BBN	T1, T2, T2
	CMPF?NL	T2, L00136

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00488	Z00524	        OpMode=OpMode+1
Z00524
	ADD?BCB	_OpMode, 001h, _OpMode

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00489	Z00525	        If OpMode > StateShutter then OpMode=0
Z00525
	CMPLE?BCL	_OpMode, _StateShutter, L00138
	MOVE?CB	000h, _OpMode
	LABEL?L	L00138	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00490	Z00526	        Setpoint_L = Position_L
Z00526
	MOVE?NN	_Position_L, _Setpoint_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00491	Z00527			TempPosition_L = Position_L + 1		; ensure display updates
Z00527
	ADD?NCN	_Position_L, 001h, _TempPosition_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00492	Z00528	        gosub   EnableInterrupts
Z00528
	GOSUB?L	_EnableInterrupts

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00493	Z00529			pause	50
Z00529
	PAUSE?C	032h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00494	Z0052A	        pop
Z0052A

	LABEL?L	_pop	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00495	Z0052B	        goto    Main
Z0052B
	GOTO?L	_Main

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00496	Z0052C	    EndIf
Z0052C
	LABEL?L	L00136	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00497	Z0052D		for i=0 to 9
Z0052D
	MOVE?CW	000h, _i
	LABEL?L	L00140	
	CMPGT?WCL	_i, 009h, L00141

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00498	Z0052E			pause 1
Z0052E
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00499	Z0052F		next i
Z0052F
	NEXT?WCL	_i, 001h, L00140
	LABEL?L	L00141	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00500	Z00530	Return
Z00530
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00503	Z00531	StepPos:
Z00531

	LABEL?L	_StepPos	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00504	Z00532		PicDirection = Pos				; choose the right direction
Z00532
	MOVE?CT	_Pos, _PICdirection

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00505	Z00533		PicStep = 0
Z00533
	MOVE?CT	000h, _PICstep

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00506	Z00534		pauseus 1
Z00534
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00507	Z00535		PicStep = 1
Z00535
	MOVE?CT	001h, _PICstep

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00508	Z00536		pauseus 1
Z00536
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00509	Z00537		PicStep = 0
Z00537
	MOVE?CT	000h, _PICstep

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00510	Z00538		pauseus 1
Z00538
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00511	Z00539		If FeedbackOn=No then			; if feedback is on, position is determined from rotary sensor
Z00539
	CMPNE?BCL	_FeedbackOn, _No, L00142

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00512	Z0053A			Position_L = Position_L+C	; if not, incremented when we take a step
Z0053A
	ADD?NCN	_Position_L, _C, _Position_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00513	Z0053B		EndIf
Z0053B
	LABEL?L	L00142	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00514	Z0053C	Return
Z0053C
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00517	Z0053D	StepNeg:
Z0053D

	LABEL?L	_StepNeg	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00518	Z0053E		PicDirection = Neg				; choose the right direction
Z0053E
	MOVE?CT	_Neg, _PICdirection

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00519	Z0053F		PicStep = 0						; ensure stepping trigger is low
Z0053F
	MOVE?CT	000h, _PICstep

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00520	Z00540		pauseus 1
Z00540
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00521	Z00541		PicStep = 1
Z00541
	MOVE?CT	001h, _PICstep

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00522	Z00542		pauseus 1
Z00542
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00523	Z00543		PicStep = 0
Z00543
	MOVE?CT	000h, _PICstep

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00524	Z00544		pauseus 1
Z00544
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00525	Z00545		If FeedbackOn=No then			; if feedback is on, position is determined from rotary sensor
Z00545
	CMPNE?BCL	_FeedbackOn, _No, L00144

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00526	Z00546			Position_L = Position_L-C	; if not, decremented when we take a step
Z00546
	SUB?NCN	_Position_L, _C, _Position_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00527	Z00547		EndIf
Z00547
	LABEL?L	L00144	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00528	Z00548	Return
Z00548
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00532	Z00549	ReadCounter:
Z00549

	LABEL?L	_ReadCounter	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00533	Z0054A		ReadCounter_	= 	0			; enable HCTL output drivers
Z0054A
	MOVE?CT	000h, _ReadCounter_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00534	Z0054B		DataSelect 		= 	0			; reading high byte first
Z0054B
	MOVE?CT	000h, _DataSelect

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00535	Z0054C		pauseus				1
Z0054C
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00536	Z0054D		Change_W.highbyte = DataBus		; assign high byte
Z0054D
	MOVE?BB	_DataBus, _Change_W??HIGHBYTE

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00537	Z0054E		pauseus				1
Z0054E
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00538	Z0054F		DataSelect		= 	1			; reading low byte next
Z0054F
	MOVE?CT	001h, _DataSelect

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00539	Z00550		pauseus	10
Z00550
	PAUSEUS?C	00Ah

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00540	Z00551		Change_W.lowbyte = DataBus		; assign low byte
Z00551
	MOVE?BB	_DataBus, _Change_W??LOWBYTE

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00541	Z00552		DataSelect		= 	0
Z00552
	MOVE?CT	000h, _DataSelect

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00542	Z00553		ReadCounter_	= 	1			; disable HCTL output drivers
Z00553
	MOVE?CT	001h, _ReadCounter_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00543	Z00554	Return
Z00554
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00547	Z00555	ResetCounter:
Z00555

	LABEL?L	_ResetCounter	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00548	Z00556		ResetCounter_ = 0
Z00556
	MOVE?CT	000h, _ResetCounter_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00549	Z00557		pauseus 1
Z00557
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00550	Z00558		ResetCounter_ = 1
Z00558
	MOVE?CT	001h, _ResetCounter_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00551	Z00559		pauseus 1
Z00559
	PAUSEUS?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00552	Z0055A	Return
Z0055A
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00557	Z0055B	GetPosition:
Z0055B

	LABEL?L	_GetPosition	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00558	Z0055C		gosub		ReadCounter
Z0055C
	GOSUB?L	_ReadCounter

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00559	Z0055D		If Change_W!=0 then									; Change is 16*steps
Z0055D
	CMPEQ?WCL	_Change_W, 000h, L00146

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00560	Z0055E			gosub	ResetCounter
Z0055E
	GOSUB?L	_ResetCounter

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00561	Z0055F			If Change_W.15=1 then 
Z0055F
	CMPNE?TCL	_Change_W??15, 001h, L00148

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00562	Z00560				Change_W = abs Change_W
Z00560
	ABS?WW	_Change_W, _Change_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00563	Z00561				Position_L = Position_L-Change_W		
Z00561
	SUB?NWN	_Position_L, _Change_W, _Position_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00564	Z00562			Else
Z00562
	GOTO?L	L00149
	LABEL?L	L00148	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00565	Z00563				Position_L = Position_L+Change_W
Z00563
	ADD?NWN	_Position_L, _Change_W, _Position_L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00566	Z00564			EndIf
Z00564
	LABEL?L	L00149	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00567	Z00565		EndIf												; nothing to do to position if feedback is off
Z00565
	LABEL?L	L00146	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00568	Z00566	Return													
Z00566
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00571	Z00567	GivePicBus:
Z00567

	LABEL?L	_GivePICbus	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00572	Z00568		PicStep = 0				; ensure the pic trigger output signal is low
Z00568
	MOVE?CT	000h, _PICstep

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00573	Z00569		BusControl = 1			; and give PIC control of the direction (CW/!CCW) and stepping signal (STEP)
Z00569
	MOVE?CT	001h, _BusControl

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00574	Z0056A	Return
Z0056A
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00577	Z0056B	GiveExtBus:		
Z0056B

	LABEL?L	_GiveExtBus	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00578	Z0056C		gosub	WaitUntilExtTriggerIsLow	; wait until low to avoid giving a trigger on transition		
Z0056C
	GOSUB?L	_WaitUntilExtTriggerIsLow

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00579	Z0056D		BusControl = 0
Z0056D
	MOVE?CT	000h, _BusControl

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00580	Z0056E	Return
Z0056E
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00583	Z0056F	GetTriggers:							; in triggered mode, one of the two counters will count incoming rising edges 
Z0056F

	LABEL?L	_GetTriggers	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00584	Z00570		Triggers_W = TMR0H*256 + TMR0L + TMR1H*256 + TMR1L
Z00570
	MUL?BCN	TMR0H, 000000100h, T1
	ADD?NBN	T1, TMR0L, T1
	MUL?BCN	TMR1H, 000000100h, T2
	ADD?NNN	T1, T2, T2
	ADD?NBW	T2, TMR1L, _Triggers_W

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00585	Z00571	Return
Z00571
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00588	Z00572	ClearCounters:
Z00572

	LABEL?L	_ClearCounters	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00589	Z00573		TMR0H = 0				; load the counter registers with zeros
Z00573
	MOVE?CB	000h, TMR0H

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00590	Z00574		TMR0L = 0
Z00574
	MOVE?CB	000h, TMR0L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00591	Z00575		TMR1H = 0
Z00575
	MOVE?CB	000h, TMR1H

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00592	Z00576		TMR1L = 0
Z00576
	MOVE?CB	000h, TMR1L

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00593	Z00577	return
Z00577
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00596	Z00578	TurnMotorOn:
Z00578

	LABEL?L	_TurnMotorOn	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00597	Z00579		EnableDrive = Yes
Z00579
	MOVE?CT	_Yes, _EnableDrive

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00598	Z0057A	Return
Z0057A
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00601	Z0057B	TurnMotorOff:
Z0057B

	LABEL?L	_TurnMotorOff	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00602	Z0057C		EnableDrive = No
Z0057C
	MOVE?CT	_No, _EnableDrive

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00603	Z0057D	Return
Z0057D
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00606	Z0057E	ConfigureMotor:
Z0057E

	LABEL?L	_ConfigureMotor	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00607	Z0057F		ResetDrive_	=	1					; not resetting the driver
Z0057F
	MOVE?CT	001h, _ResetDrive_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00608	Z00580		EnableDrive	=	0					; disable the motor
Z00580
	MOVE?CT	000h, _EnableDrive

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00609	Z00581		CNTRL		=	0					; turn off chopper
Z00581
	MOVE?CT	000h, _CNTRL

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00610	Z00582		HalfFull_	=	1					; set step style signal
Z00582
	MOVE?CT	001h, _HalfFull_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00611	Z00583		ResetDrive_ = 0						; reset the motor driver chip
Z00583
	MOVE?CT	000h, _ResetDrive_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00612	Z00584		pause	1
Z00584
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00613	Z00585		ResetDrive_ = 1
Z00585
	MOVE?CT	001h, _ResetDrive_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00614	Z00586		pause	1
Z00586
	PAUSE?C	001h

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00615	Z00587		HalfFull_	=	StepStyle			; implement desired step style
Z00587
	MOVE?BT	_StepStyle, _HalfFull_

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00616	Z00588		EnableDrive	=	1
Z00588
	MOVE?CT	001h, _EnableDrive

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00617	Z00589	Return
Z00589
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00620	Z0058A	EnablePushLights:
Z0058A

	LABEL?L	_EnablePushLights	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00621	Z0058B		Illuminate = Yes
Z0058B
	MOVE?CT	_Yes, _Illuminate

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00622	Z0058C	Return
Z0058C
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00625	Z0058D	DisablePushLights:
Z0058D

	LABEL?L	_DisablePushLights	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00626	Z0058E		Illuminate = No
Z0058E
	MOVE?CT	_No, _Illuminate

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00627	Z0058F	Return
Z0058F
	RETURN?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00630	Z00590	Enable Interrupt
Z00590
	IENABLE?	

; C:\USERS\NFITCH\DESKTOP\REPOS\CCMCIRCUITS\CCM_0001_UNIPOLAR_STEPPER_MOTOR_CONTROLLER\FIRMWARE\FIRMWARE.PBP	00632	Z00591	end
Z00591
	ICALL?L	L00004
	END?	

	END
